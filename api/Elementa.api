public final class org/polyfrost/elementa/ElementaVersion : java/lang/Enum {
	public static final field Companion Lorg/polyfrost/elementa/ElementaVersion$Companion;
	public static final field V0 Lorg/polyfrost/elementa/ElementaVersion;
	public static final field V1 Lorg/polyfrost/elementa/ElementaVersion;
	public static final field V2 Lorg/polyfrost/elementa/ElementaVersion;
	public static final field V3 Lorg/polyfrost/elementa/ElementaVersion;
	public static final field V4 Lorg/polyfrost/elementa/ElementaVersion;
	public static final field V5 Lorg/polyfrost/elementa/ElementaVersion;
	public static final field V6 Lorg/polyfrost/elementa/ElementaVersion;
	public final fun enableFor (Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static fun valueOf (Ljava/lang/String;)Lorg/polyfrost/elementa/ElementaVersion;
	public static fun values ()[Lorg/polyfrost/elementa/ElementaVersion;
}

public final class org/polyfrost/elementa/ElementaVersion$Companion {
	public final fun getActive ()Lorg/polyfrost/elementa/ElementaVersion;
	public final fun setActive (Lorg/polyfrost/elementa/ElementaVersion;)V
}

public abstract class org/polyfrost/elementa/UIComponent : java/util/Observable, org/polyfrost/elementa/state/v2/ReferenceHolder {
	public static final field Companion Lorg/polyfrost/elementa/UIComponent$Companion;
	public field parent Lorg/polyfrost/elementa/UIComponent;
	public fun <init> ()V
	public fun addChild (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/UIComponent;
	public fun addChildren ([Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/UIComponent;
	public fun afterDraw ()V
	public fun afterDraw (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun afterDrawCompat (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun afterInitialization ()V
	public fun alwaysDrawChildren ()Z
	public final fun animate (Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FDF)V
	public final fun animate (Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FFF)V
	public final fun animate (Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FIF)V
	public final fun animate (Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FJF)V
	public final fun animate (Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLjava/awt/Color;F)V
	public static synthetic fun animate$default (Lorg/polyfrost/elementa/UIComponent;Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FDFILjava/lang/Object;)V
	public static synthetic fun animate$default (Lorg/polyfrost/elementa/UIComponent;Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FFFILjava/lang/Object;)V
	public static synthetic fun animate$default (Lorg/polyfrost/elementa/UIComponent;Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FIFILjava/lang/Object;)V
	public static synthetic fun animate$default (Lorg/polyfrost/elementa/UIComponent;Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FJFILjava/lang/Object;)V
	public static synthetic fun animate$default (Lorg/polyfrost/elementa/UIComponent;Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLjava/awt/Color;FILjava/lang/Object;)V
	public final fun animateAfterUnhide (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/UIComponent;
	public final fun animateBeforeHide (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/UIComponent;
	public final fun animateTo (Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;)V
	public fun animationFrame ()V
	public fun beforeChildrenDraw ()V
	public fun beforeChildrenDraw (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun beforeChildrenDrawCompat (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun beforeDraw ()V
	public fun beforeDraw (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun beforeDrawCompat (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun childrenOfType (Ljava/lang/Class;)Ljava/util/List;
	public fun clearChildren ()Lorg/polyfrost/elementa/UIComponent;
	public final fun delay (JLkotlin/jvm/functions/Function0;)Lkotlin/jvm/functions/Function0;
	public final fun depth ()I
	public fun dragMouse (FFI)V
	public fun dragMouse (III)V
	public fun draw ()V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun drawCompat (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun enableEffect (Lorg/polyfrost/elementa/effects/Effect;)Lorg/polyfrost/elementa/UIComponent;
	public final fun enableEffects ([Lorg/polyfrost/elementa/effects/Effect;)Lorg/polyfrost/elementa/UIComponent;
	protected final fun fireClickEvent (Lorg/polyfrost/elementa/events/UIClickEvent;)V
	protected final fun fireScrollEvent (Lorg/polyfrost/elementa/events/UIScrollEvent;)V
	public final fun focus ()V
	public fun getBottom ()F
	public fun getChildren ()Lorg/polyfrost/elementa/utils/ObservableList;
	public fun getColor ()Ljava/awt/Color;
	public final fun getComponentName ()Ljava/lang/String;
	public final fun getConstraints ()Lorg/polyfrost/elementa/UIConstraints;
	public final fun getEffects ()Ljava/util/List;
	public fun getFontProvider ()Lorg/polyfrost/elementa/font/FontProvider;
	public fun getHasParent ()Z
	public fun getHeight ()F
	public final fun getKeyTypedListeners ()Ljava/util/List;
	public final fun getLastDraggedMouseX ()Ljava/lang/Double;
	public final fun getLastDraggedMouseY ()Ljava/lang/Double;
	public fun getLeft ()F
	public final fun getMouseClickListeners ()Ljava/util/List;
	public final fun getMouseDragListeners ()Ljava/util/List;
	public final fun getMouseEnterListeners ()Ljava/util/List;
	public final fun getMouseLeaveListeners ()Ljava/util/List;
	protected final fun getMousePosition ()Lkotlin/Pair;
	public final fun getMouseReleaseListeners ()Ljava/util/List;
	public final fun getMouseScrollListeners ()Ljava/util/List;
	public fun getParent ()Lorg/polyfrost/elementa/UIComponent;
	public fun getRadius ()F
	public fun getRight ()F
	public fun getTextScale ()F
	public fun getTop ()F
	public fun getWidth ()F
	public final fun grabWindowFocus ()V
	public final fun hasFocus ()Z
	public final fun hide ()V
	public final fun hide (Z)V
	public static synthetic fun hide$default (Lorg/polyfrost/elementa/UIComponent;ZILjava/lang/Object;)V
	public fun hitTest (FF)Lorg/polyfrost/elementa/UIComponent;
	public fun holdOnto (Ljava/lang/Object;)Lkotlin/jvm/functions/Function0;
	public fun insertChildAfter (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/UIComponent;
	public fun insertChildAt (Lorg/polyfrost/elementa/UIComponent;I)Lorg/polyfrost/elementa/UIComponent;
	public fun insertChildBefore (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/UIComponent;
	public fun isChildOf (Lorg/polyfrost/elementa/UIComponent;)Z
	public fun isHovered ()Z
	protected final fun isInitialized ()Z
	public fun isPointInside (FF)Z
	public fun isPositionCenter ()Z
	public fun keyType (CI)V
	public final fun loseFocus ()V
	public final fun makeAnimation ()Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public fun mouseClick (DDI)V
	public fun mouseDrag (III)V
	public fun mouseMove (Lorg/polyfrost/elementa/components/Window;)V
	public fun mouseRelease ()V
	public fun mouseScroll (D)V
	public final fun onFocus (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/UIComponent;
	public final fun onFocusLost (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/UIComponent;
	public final fun onKeyType (Lkotlin/jvm/functions/Function3;)Lorg/polyfrost/elementa/UIComponent;
	public final fun onKeyTypeConsumer (Ljava/util/function/BiConsumer;)V
	public final fun onMouseClick (Lkotlin/jvm/functions/Function2;)Lorg/polyfrost/elementa/UIComponent;
	public final fun onMouseClickConsumer (Ljava/util/function/Consumer;)Lorg/polyfrost/elementa/UIComponent;
	public final fun onMouseDrag (Lkotlin/jvm/functions/Function4;)Lorg/polyfrost/elementa/UIComponent;
	public final fun onMouseDragConsumer (Lorg/polyfrost/elementa/utils/TriConsumer;)Lorg/polyfrost/elementa/UIComponent;
	public final fun onMouseEnter (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/UIComponent;
	public final fun onMouseEnterRunnable (Ljava/lang/Runnable;)Lorg/polyfrost/elementa/UIComponent;
	public final fun onMouseLeave (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/UIComponent;
	public final fun onMouseLeaveRunnable (Ljava/lang/Runnable;)Lorg/polyfrost/elementa/UIComponent;
	public final fun onMouseRelease (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/UIComponent;
	public final fun onMouseReleaseRunnable (Ljava/lang/Runnable;)Lorg/polyfrost/elementa/UIComponent;
	public final fun onMouseScroll (Lkotlin/jvm/functions/Function2;)Lorg/polyfrost/elementa/UIComponent;
	public final fun onMouseScrollConsumer (Ljava/util/function/Consumer;)Lorg/polyfrost/elementa/UIComponent;
	public fun onWindowResize ()V
	public final fun releaseWindowFocus ()V
	public fun removeChild (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/UIComponent;
	public final fun removeEffect (Ljava/lang/Class;)V
	public final fun removeEffect (Lorg/polyfrost/elementa/effects/Effect;)V
	public fun replaceChild (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/UIComponent;
	protected final fun requireChildrenUnlocked ()V
	public final fun setChildOf (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/UIComponent;
	public final fun setColor (Ljava/awt/Color;)Lorg/polyfrost/elementa/UIComponent;
	public final fun setColor (Lorg/polyfrost/elementa/constraints/ColorConstraint;)Lorg/polyfrost/elementa/UIComponent;
	public final fun setComponentName (Ljava/lang/String;)V
	public final fun setConstraints (Lorg/polyfrost/elementa/UIConstraints;)V
	public final fun setFloating (Z)V
	public final fun setFontProvider (Lorg/polyfrost/elementa/font/FontProvider;)Lorg/polyfrost/elementa/UIComponent;
	public final fun setHeight (Lorg/polyfrost/elementa/constraints/HeightConstraint;)Lorg/polyfrost/elementa/UIComponent;
	protected final fun setInitialized (Z)V
	public final fun setLastDraggedMouseX (Ljava/lang/Double;)V
	public final fun setLastDraggedMouseY (Ljava/lang/Double;)V
	public final fun setMouseScrollListeners (Ljava/util/List;)V
	public fun setParent (Lorg/polyfrost/elementa/UIComponent;)V
	public final fun setRadius (Lorg/polyfrost/elementa/constraints/RadiusConstraint;)Lorg/polyfrost/elementa/UIComponent;
	public final fun setTextScale (Lorg/polyfrost/elementa/constraints/HeightConstraint;)Lorg/polyfrost/elementa/UIComponent;
	public final fun setWidth (Lorg/polyfrost/elementa/constraints/WidthConstraint;)Lorg/polyfrost/elementa/UIComponent;
	public final fun setX (Lorg/polyfrost/elementa/constraints/XConstraint;)Lorg/polyfrost/elementa/UIComponent;
	public final fun setY (Lorg/polyfrost/elementa/constraints/YConstraint;)Lorg/polyfrost/elementa/UIComponent;
	public final fun startDelay (JLkotlin/jvm/functions/Function0;)I
	public final fun startTimer (JJLkotlin/jvm/functions/Function1;)I
	public static synthetic fun startTimer$default (Lorg/polyfrost/elementa/UIComponent;JJLkotlin/jvm/functions/Function1;ILjava/lang/Object;)I
	public final fun stopAnimating (Lkotlin/reflect/KMutableProperty0;)V
	public final fun stopDelay (I)Z
	public final fun stopTimer (I)Z
	public final fun timer (JJLkotlin/jvm/functions/Function1;)Lkotlin/jvm/functions/Function0;
	public static synthetic fun timer$default (Lorg/polyfrost/elementa/UIComponent;JJLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlin/jvm/functions/Function0;
	public final fun unhide (Z)V
	public static synthetic fun unhide$default (Lorg/polyfrost/elementa/UIComponent;ZILjava/lang/Object;)V
}

public final class org/polyfrost/elementa/UIComponent$Companion {
	public final fun getDEBUG_OUTLINE_WIDTH ()D
	public final fun guiHint (DZ)D
	public final fun guiHint (FZ)F
}

public final class org/polyfrost/elementa/UIComponent$sam$i$java_util_function_Predicate$0 : java/util/function/Predicate {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final synthetic fun test (Ljava/lang/Object;)Z
}

public class org/polyfrost/elementa/UIConstraints : java/util/Observable {
	public fun <init> (Lorg/polyfrost/elementa/UIComponent;)V
	public final fun copy ()Lorg/polyfrost/elementa/UIConstraints;
	public final fun finish ()Lorg/polyfrost/elementa/UIComponent;
	public fun getColor ()Ljava/awt/Color;
	public final fun getColor ()Lorg/polyfrost/elementa/constraints/ColorConstraint;
	protected final fun getComponent ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getFontProvider ()Lorg/polyfrost/elementa/font/FontProvider;
	public fun getHeight ()F
	public final fun getHeight ()Lorg/polyfrost/elementa/constraints/HeightConstraint;
	public fun getRadius ()F
	public final fun getRadius ()Lorg/polyfrost/elementa/constraints/RadiusConstraint;
	public fun getTextScale ()F
	public final fun getTextScale ()Lorg/polyfrost/elementa/constraints/HeightConstraint;
	public fun getWidth ()F
	public final fun getWidth ()Lorg/polyfrost/elementa/constraints/WidthConstraint;
	public fun getX ()F
	public final fun getX ()Lorg/polyfrost/elementa/constraints/XConstraint;
	public fun getY ()F
	public final fun getY ()Lorg/polyfrost/elementa/constraints/YConstraint;
	public final fun setColor (Lorg/polyfrost/elementa/constraints/ColorConstraint;)V
	public final fun setFontProvider (Lorg/polyfrost/elementa/font/FontProvider;)V
	public final fun setHeight (Lorg/polyfrost/elementa/constraints/HeightConstraint;)V
	public final fun setRadius (Lorg/polyfrost/elementa/constraints/RadiusConstraint;)V
	public final fun setTextScale (Lorg/polyfrost/elementa/constraints/HeightConstraint;)V
	public final fun setWidth (Lorg/polyfrost/elementa/constraints/WidthConstraint;)V
	public final fun setX (Lorg/polyfrost/elementa/constraints/XConstraint;)V
	public final fun setY (Lorg/polyfrost/elementa/constraints/YConstraint;)V
	public fun withColor (Lorg/polyfrost/elementa/constraints/ColorConstraint;)Lorg/polyfrost/elementa/UIConstraints;
	public fun withFontProvider (Lorg/polyfrost/elementa/font/FontProvider;)V
	public fun withHeight (Lorg/polyfrost/elementa/constraints/HeightConstraint;)Lorg/polyfrost/elementa/UIConstraints;
	public fun withRadius (Lorg/polyfrost/elementa/constraints/RadiusConstraint;)Lorg/polyfrost/elementa/UIConstraints;
	public fun withTextScale (Lorg/polyfrost/elementa/constraints/HeightConstraint;)Lorg/polyfrost/elementa/UIConstraints;
	public fun withWidth (Lorg/polyfrost/elementa/constraints/WidthConstraint;)Lorg/polyfrost/elementa/UIConstraints;
	public fun withX (Lorg/polyfrost/elementa/constraints/XConstraint;)Lorg/polyfrost/elementa/UIConstraints;
	public fun withY (Lorg/polyfrost/elementa/constraints/YConstraint;)Lorg/polyfrost/elementa/UIConstraints;
}

public final class org/polyfrost/elementa/VanillaFontRenderer : org/polyfrost/elementa/font/FontProvider {
	public static final field Companion Lorg/polyfrost/elementa/VanillaFontRenderer$Companion;
	public static final field SHADOW_HEIGHT F
	public fun <init> ()V
	public fun drawString (Lorg/polyfrost/universal/UMatrixStack;Ljava/lang/String;Ljava/awt/Color;FFFFZLjava/awt/Color;)V
	public fun getBaseLineHeight ()F
	public fun getBelowLineHeight ()F
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getCachedValue ()Lorg/polyfrost/elementa/font/FontProvider;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getRecalculate ()Z
	public fun getShadowHeight ()F
	public fun getStringHeight (Ljava/lang/String;F)F
	public fun getStringWidth (Ljava/lang/String;F)F
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setCachedValue (Lorg/polyfrost/elementa/font/FontProvider;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/VanillaFontRenderer$Companion {
}

public abstract class org/polyfrost/elementa/WindowScreen : org/polyfrost/universal/UScreen {
	public fun <init> ()V
	public fun <init> (Lorg/polyfrost/elementa/ElementaVersion;)V
	public fun <init> (Lorg/polyfrost/elementa/ElementaVersion;Z)V
	public fun <init> (Lorg/polyfrost/elementa/ElementaVersion;ZZ)V
	public fun <init> (Lorg/polyfrost/elementa/ElementaVersion;ZZZ)V
	public fun <init> (Lorg/polyfrost/elementa/ElementaVersion;ZZZI)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/ElementaVersion;ZZZIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Z)V
	public fun <init> (ZZ)V
	public fun <init> (ZZZ)V
	public fun <init> (ZZZI)V
	public synthetic fun <init> (ZZZIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun afterInitialization ()V
	public final fun animate (Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FDF)V
	public final fun animate (Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FFF)V
	public final fun animate (Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FIF)V
	public final fun animate (Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FJF)V
	public final fun animate (Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLjava/awt/Color;F)V
	public static synthetic fun animate$default (Lorg/polyfrost/elementa/WindowScreen;Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FDFILjava/lang/Object;)V
	public static synthetic fun animate$default (Lorg/polyfrost/elementa/WindowScreen;Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FFFILjava/lang/Object;)V
	public static synthetic fun animate$default (Lorg/polyfrost/elementa/WindowScreen;Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FIFILjava/lang/Object;)V
	public static synthetic fun animate$default (Lorg/polyfrost/elementa/WindowScreen;Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FJFILjava/lang/Object;)V
	public static synthetic fun animate$default (Lorg/polyfrost/elementa/WindowScreen;Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLjava/awt/Color;FILjava/lang/Object;)V
	public final fun defaultKeyBehavior (CI)V
	public final fun getWindow ()Lorg/polyfrost/elementa/components/Window;
	public fun initScreen (II)V
	public fun onDrawScreen (Lorg/polyfrost/universal/UMatrixStack;IIF)V
	public fun onKeyPressed (ICLorg/polyfrost/universal/UKeyboard$Modifiers;)V
	public fun onMouseClicked (DDI)V
	public fun onMouseReleased (DDI)V
	public fun onMouseScrolled (D)V
	public fun onScreenClose ()V
	public final fun stopAnimating (Lkotlin/reflect/KMutableProperty0;)V
}

public class org/polyfrost/elementa/components/GradientComponent : org/polyfrost/elementa/components/UIBlock {
	public static final field Companion Lorg/polyfrost/elementa/components/GradientComponent$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Lorg/polyfrost/elementa/components/GradientComponent$GradientDirection;)V
	public synthetic fun <init> (Ljava/awt/Color;Ljava/awt/Color;Lorg/polyfrost/elementa/components/GradientComponent$GradientDirection;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;)V
	public final fun bindDirection (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/components/GradientComponent;
	public final fun bindEndColor (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/components/GradientComponent;
	public final fun bindStartColor (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/components/GradientComponent;
	public final fun getDirection ()Lorg/polyfrost/elementa/components/GradientComponent$GradientDirection;
	public final fun getEndColor ()Ljava/awt/Color;
	public final fun getStartColor ()Ljava/awt/Color;
	public final fun setDirection (Lorg/polyfrost/elementa/components/GradientComponent$GradientDirection;)Lorg/polyfrost/elementa/components/GradientComponent;
	public final fun setEndColor (Ljava/awt/Color;)Lorg/polyfrost/elementa/components/GradientComponent;
	public final fun setStartColor (Ljava/awt/Color;)Lorg/polyfrost/elementa/components/GradientComponent;
}

public final class org/polyfrost/elementa/components/GradientComponent$Companion {
	public final fun drawGradientBlock (DDDDLjava/awt/Color;Ljava/awt/Color;Lorg/polyfrost/elementa/components/GradientComponent$GradientDirection;)V
	public final fun drawGradientBlock (IIIILjava/awt/Color;Ljava/awt/Color;Lorg/polyfrost/elementa/components/GradientComponent$GradientDirection;)V
	public final fun drawGradientBlock (Lorg/polyfrost/universal/UMatrixStack;DDDDLjava/awt/Color;Ljava/awt/Color;Lorg/polyfrost/elementa/components/GradientComponent$GradientDirection;)V
}

public final class org/polyfrost/elementa/components/GradientComponent$GradientColors {
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V
	public final fun component1 ()Ljava/awt/Color;
	public final fun component2 ()Ljava/awt/Color;
	public final fun component3 ()Ljava/awt/Color;
	public final fun component4 ()Ljava/awt/Color;
	public final fun copy (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)Lorg/polyfrost/elementa/components/GradientComponent$GradientColors;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/components/GradientComponent$GradientColors;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;ILjava/lang/Object;)Lorg/polyfrost/elementa/components/GradientComponent$GradientColors;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBottomLeft ()Ljava/awt/Color;
	public final fun getBottomRight ()Ljava/awt/Color;
	public final fun getTopLeft ()Ljava/awt/Color;
	public final fun getTopRight ()Ljava/awt/Color;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/components/GradientComponent$GradientDirection : java/lang/Enum {
	public static final field BOTTOM_TO_TOP Lorg/polyfrost/elementa/components/GradientComponent$GradientDirection;
	public static final field LEFT_TO_RIGHT Lorg/polyfrost/elementa/components/GradientComponent$GradientDirection;
	public static final field RIGHT_TO_LEFT Lorg/polyfrost/elementa/components/GradientComponent$GradientDirection;
	public static final field TOP_TO_BOTTOM Lorg/polyfrost/elementa/components/GradientComponent$GradientDirection;
	public final fun getGradientColors (Ljava/awt/Color;Ljava/awt/Color;)Lorg/polyfrost/elementa/components/GradientComponent$GradientColors;
	public static fun valueOf (Ljava/lang/String;)Lorg/polyfrost/elementa/components/GradientComponent$GradientDirection;
	public static fun values ()[Lorg/polyfrost/elementa/components/GradientComponent$GradientDirection;
}

public final class org/polyfrost/elementa/components/SVGComponent : org/polyfrost/elementa/UIComponent, org/polyfrost/elementa/components/image/ImageProvider {
	public static final field Companion Lorg/polyfrost/elementa/components/SVGComponent$Companion;
	public fun <init> (Lorg/polyfrost/elementa/svg/data/SVG;)V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun drawImage (Lorg/polyfrost/universal/UMatrixStack;DDDDLjava/awt/Color;)V
	public final fun finalize ()V
	public final fun setSVG (Lorg/polyfrost/elementa/svg/data/SVG;)V
}

public final class org/polyfrost/elementa/components/SVGComponent$Companion {
	public final fun ofResource (Ljava/lang/String;)Lorg/polyfrost/elementa/components/SVGComponent;
}

public final class org/polyfrost/elementa/components/ScrollComponent : org/polyfrost/elementa/components/UIContainer {
	public static final field Companion Lorg/polyfrost/elementa/components/ScrollComponent$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;F)V
	public fun <init> (Ljava/lang/String;FLjava/awt/Color;)V
	public fun <init> (Ljava/lang/String;FLjava/awt/Color;Lorg/polyfrost/elementa/components/ScrollComponent$Direction;ZZFFLorg/polyfrost/elementa/UIComponent;Z)V
	public synthetic fun <init> (Ljava/lang/String;FLjava/awt/Color;Lorg/polyfrost/elementa/components/ScrollComponent$Direction;ZZFFLorg/polyfrost/elementa/UIComponent;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Ljava/lang/String;FLjava/awt/Color;Z)V
	public fun <init> (Ljava/lang/String;FLjava/awt/Color;ZZ)V
	public fun <init> (Ljava/lang/String;FLjava/awt/Color;ZZZ)V
	public fun <init> (Ljava/lang/String;FLjava/awt/Color;ZZZZ)V
	public fun <init> (Ljava/lang/String;FLjava/awt/Color;ZZZZF)V
	public fun <init> (Ljava/lang/String;FLjava/awt/Color;ZZZZFF)V
	public fun <init> (Ljava/lang/String;FLjava/awt/Color;ZZZZFFLorg/polyfrost/elementa/UIComponent;)V
	public synthetic fun <init> (Ljava/lang/String;FLjava/awt/Color;ZZZZFFLorg/polyfrost/elementa/UIComponent;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun addChild (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/UIComponent;
	public fun addChild (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/components/ScrollComponent;
	public final fun addScrollAdjustEvent (ZLkotlin/jvm/functions/Function2;)V
	public fun afterInitialization ()V
	public fun alwaysDrawChildren ()Z
	public fun animationFrame ()V
	public fun childrenOfType (Ljava/lang/Class;)Ljava/util/List;
	public synthetic fun clearChildren ()Lorg/polyfrost/elementa/UIComponent;
	public fun clearChildren ()Lorg/polyfrost/elementa/components/ScrollComponent;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun filterChildren (Lkotlin/jvm/functions/Function1;)V
	public final fun getAllChildren ()Ljava/util/concurrent/CopyOnWriteArrayList;
	public final fun getEmptyText ()Lorg/polyfrost/elementa/components/UIWrappedText;
	public final fun getHorizontalOffset ()F
	public final fun getHorizontalOverhang ()F
	public final fun getVerticalOffset ()F
	public final fun getVerticalOverhang ()F
	public fun hitTest (FF)Lorg/polyfrost/elementa/UIComponent;
	public synthetic fun insertChildAfter (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/UIComponent;
	public fun insertChildAfter (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/components/ScrollComponent;
	public synthetic fun insertChildAt (Lorg/polyfrost/elementa/UIComponent;I)Lorg/polyfrost/elementa/UIComponent;
	public fun insertChildAt (Lorg/polyfrost/elementa/UIComponent;I)Lorg/polyfrost/elementa/components/ScrollComponent;
	public synthetic fun insertChildBefore (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/UIComponent;
	public fun insertChildBefore (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/components/ScrollComponent;
	public fun mouseClick (DDI)V
	public synthetic fun removeChild (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/UIComponent;
	public fun removeChild (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/components/ScrollComponent;
	public synthetic fun replaceChild (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/UIComponent;
	public fun replaceChild (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/components/ScrollComponent;
	public final fun scrollTo (FFZ)V
	public static synthetic fun scrollTo$default (Lorg/polyfrost/elementa/components/ScrollComponent;FFZILjava/lang/Object;)V
	public final fun scrollToBottom (Z)V
	public static synthetic fun scrollToBottom$default (Lorg/polyfrost/elementa/components/ScrollComponent;ZILjava/lang/Object;)V
	public final fun scrollToLeft (Z)V
	public static synthetic fun scrollToLeft$default (Lorg/polyfrost/elementa/components/ScrollComponent;ZILjava/lang/Object;)V
	public final fun scrollToRight (Z)V
	public static synthetic fun scrollToRight$default (Lorg/polyfrost/elementa/components/ScrollComponent;ZILjava/lang/Object;)V
	public final fun scrollToTop (Z)V
	public static synthetic fun scrollToTop$default (Lorg/polyfrost/elementa/components/ScrollComponent;ZILjava/lang/Object;)V
	public final fun searchAndInsert (Ljava/util/List;Lkotlin/jvm/functions/Function1;)V
	public final fun setChildren (Ljava/util/List;)Lorg/polyfrost/elementa/components/ScrollComponent;
	public final fun setEmptyText (Ljava/lang/String;)V
	public final fun setHorizontalScrollBarComponent (Lorg/polyfrost/elementa/UIComponent;)V
	public final fun setHorizontalScrollBarComponent (Lorg/polyfrost/elementa/UIComponent;Z)V
	public static synthetic fun setHorizontalScrollBarComponent$default (Lorg/polyfrost/elementa/components/ScrollComponent;Lorg/polyfrost/elementa/UIComponent;ZILjava/lang/Object;)V
	public final fun setScrollBarComponent (Lorg/polyfrost/elementa/UIComponent;ZZ)V
	public final fun setVerticalScrollBarComponent (Lorg/polyfrost/elementa/UIComponent;)V
	public final fun setVerticalScrollBarComponent (Lorg/polyfrost/elementa/UIComponent;Z)V
	public static synthetic fun setVerticalScrollBarComponent$default (Lorg/polyfrost/elementa/components/ScrollComponent;Lorg/polyfrost/elementa/UIComponent;ZILjava/lang/Object;)V
	public final fun sortChildren (Ljava/util/Comparator;)V
	public final fun sortChildren (Lkotlin/jvm/functions/Function1;)V
	public final fun sortChildren (ZLkotlin/jvm/functions/Function1;)V
	public static synthetic fun sortChildren$default (Lorg/polyfrost/elementa/components/ScrollComponent;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

public final class org/polyfrost/elementa/components/ScrollComponent$Companion {
	public final fun getScrollImage ()Lorg/polyfrost/elementa/components/UIImage;
}

public final class org/polyfrost/elementa/components/ScrollComponent$DefaultScrollBar : org/polyfrost/elementa/components/UIContainer {
	public fun <init> (Z)V
	public final fun getGrip ()Lorg/polyfrost/elementa/UIComponent;
}

public final class org/polyfrost/elementa/components/ScrollComponent$Direction : java/lang/Enum {
	public static final field Horizontal Lorg/polyfrost/elementa/components/ScrollComponent$Direction;
	public static final field PreferHorizontal Lorg/polyfrost/elementa/components/ScrollComponent$Direction;
	public static final field PreferVertical Lorg/polyfrost/elementa/components/ScrollComponent$Direction;
	public static final field Vertical Lorg/polyfrost/elementa/components/ScrollComponent$Direction;
	public static fun valueOf (Ljava/lang/String;)Lorg/polyfrost/elementa/components/ScrollComponent$Direction;
	public static fun values ()[Lorg/polyfrost/elementa/components/ScrollComponent$Direction;
}

public final class org/polyfrost/elementa/components/ScrollComponent$ScrollChildConstraint : org/polyfrost/elementa/constraints/HeightConstraint, org/polyfrost/elementa/constraints/WidthConstraint {
	public fun <init> (Lorg/polyfrost/elementa/components/ScrollComponent;F)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/components/ScrollComponent;FILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public final fun getPadding ()F
	public fun getRecalculate ()Z
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public abstract class org/polyfrost/elementa/components/TreeArrowComponent : org/polyfrost/elementa/UIComponent {
	public fun <init> ()V
	public abstract fun close ()V
	public abstract fun open ()V
}

public final class org/polyfrost/elementa/components/TreeGraphBuilder {
	public fun <init> (Lorg/polyfrost/elementa/components/TreeGraphNode;)V
	public final fun add (Lorg/polyfrost/elementa/components/TreeGraphNode;)V
	public final fun getRoot ()Lorg/polyfrost/elementa/components/TreeGraphNode;
}

public final class org/polyfrost/elementa/components/TreeGraphComponent : org/polyfrost/elementa/UIComponent {
	public fun <init> (Lorg/polyfrost/elementa/components/TreeGraphNode;Lorg/polyfrost/elementa/components/TreeGraphStyle;)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/components/TreeGraphNode;Lorg/polyfrost/elementa/components/TreeGraphStyle;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
}

public abstract class org/polyfrost/elementa/components/TreeGraphNode {
	public fun <init> ()V
	public final fun forAllChildren (Lkotlin/jvm/functions/Function2;)V
	public final fun getChildren ()Ljava/util/List;
	public final fun getComponent ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getDepth ()I
	public final fun height (Lorg/polyfrost/elementa/components/TreeGraphStyle;)D
	protected abstract fun makeComponent ()Lorg/polyfrost/elementa/UIComponent;
	public final fun setDepth (I)V
	public final fun width (Lorg/polyfrost/elementa/components/TreeGraphStyle;)D
	public final fun withChildren (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/components/TreeGraphNode;
}

public final class org/polyfrost/elementa/components/TreeGraphStyle {
	public fun <init> ()V
	public fun <init> (FFLjava/awt/Color;FZLkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (FFLjava/awt/Color;FZLkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()Ljava/awt/Color;
	public final fun component4 ()F
	public final fun component5 ()Z
	public final fun component6 ()Lkotlin/jvm/functions/Function2;
	public final fun copy (FFLjava/awt/Color;FZLkotlin/jvm/functions/Function2;)Lorg/polyfrost/elementa/components/TreeGraphStyle;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/components/TreeGraphStyle;FFLjava/awt/Color;FZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/polyfrost/elementa/components/TreeGraphStyle;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeightBetweenRows ()F
	public final fun getLineColor ()Ljava/awt/Color;
	public final fun getLineDrawer ()Lkotlin/jvm/functions/Function2;
	public final fun getLineWidth ()F
	public final fun getWidthBetweenNodes ()F
	public fun hashCode ()I
	public final fun isHorizontal ()Z
	public fun toString ()Ljava/lang/String;
}

public class org/polyfrost/elementa/components/TreeListComponent : org/polyfrost/elementa/components/UIContainer {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public fun <init> (Lorg/polyfrost/elementa/components/TreeNode;)V
	public final fun setRoots (Ljava/util/List;)Lorg/polyfrost/elementa/components/TreeListComponent;
}

public abstract class org/polyfrost/elementa/components/TreeNode {
	public fun <init> ()V
	public final fun addChild (Lorg/polyfrost/elementa/components/TreeNode;)Lorg/polyfrost/elementa/components/TreeNode;
	public final fun addChildAt (ILorg/polyfrost/elementa/components/TreeNode;)Lorg/polyfrost/elementa/components/TreeNode;
	public final fun clearChildren ()Lorg/polyfrost/elementa/components/TreeNode;
	public abstract fun getArrowComponent ()Lorg/polyfrost/elementa/components/TreeArrowComponent;
	public final fun getDisplayComponent ()Lorg/polyfrost/elementa/components/TreeNode$TreeNodeComponent;
	public fun getIndentationOffset ()F
	public abstract fun getPrimaryComponent ()Lorg/polyfrost/elementa/UIComponent;
	public final fun removeChildAt (I)Lorg/polyfrost/elementa/components/TreeNode;
	public fun setIndentationOffset (F)V
	public final fun withChildren (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/components/TreeNode;
}

public final class org/polyfrost/elementa/components/TreeNode$TreeNodeComponent : org/polyfrost/elementa/components/UIContainer {
	public fun <init> (Lorg/polyfrost/elementa/components/TreeNode;)V
	public final fun addNodeChild (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/components/TreeNode$TreeNodeComponent;
	public final fun addNodeChildAt (ILorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/components/TreeNode$TreeNodeComponent;
	public final fun clearNodeChildren ()Lorg/polyfrost/elementa/components/TreeNode$TreeNodeComponent;
	public final fun close (Z)V
	public static synthetic fun close$default (Lorg/polyfrost/elementa/components/TreeNode$TreeNodeComponent;ZILjava/lang/Object;)V
	public final fun open (Z)V
	public static synthetic fun open$default (Lorg/polyfrost/elementa/components/TreeNode$TreeNodeComponent;ZILjava/lang/Object;)V
	public final fun removeNodeChildAt (I)Lorg/polyfrost/elementa/components/TreeNode$TreeNodeComponent;
}

public final class org/polyfrost/elementa/components/TreeNodeBuilder {
	public fun <init> (Lorg/polyfrost/elementa/components/TreeNode;)V
	public final fun add (Lorg/polyfrost/elementa/components/TreeNode;)V
	public final fun getRoot ()Lorg/polyfrost/elementa/components/TreeNode;
}

public class org/polyfrost/elementa/components/UIBlock : org/polyfrost/elementa/UIComponent {
	public static final field Companion Lorg/polyfrost/elementa/components/UIBlock$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/awt/Color;)V
	public fun <init> (Lorg/polyfrost/elementa/constraints/ColorConstraint;)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/constraints/ColorConstraint;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;)V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
}

public final class org/polyfrost/elementa/components/UIBlock$Companion {
	public final fun drawBlock (Ljava/awt/Color;DDDD)V
	public final fun drawBlock (Lorg/polyfrost/universal/UMatrixStack;Ljava/awt/Color;DDDD)V
	public final fun drawBlockSized (Ljava/awt/Color;DDDD)V
	public final fun drawBlockSized (Lorg/polyfrost/universal/UMatrixStack;Ljava/awt/Color;DDDD)V
	public final fun drawBlockWithActiveShader (Lorg/polyfrost/universal/UMatrixStack;Ljava/awt/Color;DDDD)V
}

public final class org/polyfrost/elementa/components/UICircle : org/polyfrost/elementa/UIComponent {
	public static final field Companion Lorg/polyfrost/elementa/components/UICircle$Companion;
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLjava/awt/Color;)V
	public fun <init> (FLjava/awt/Color;I)V
	public synthetic fun <init> (FLjava/awt/Color;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun getHeight ()F
	public fun getLeft ()F
	public final fun getSteps ()I
	public fun getTop ()F
	public fun getWidth ()F
	public fun isPositionCenter ()Z
	public final fun setSteps (I)V
}

public final class org/polyfrost/elementa/components/UICircle$Companion {
	public final fun drawCircle (FFFLjava/awt/Color;)V
	public final fun drawCircle (Lorg/polyfrost/universal/UMatrixStack;FFFLjava/awt/Color;)V
	public final fun initShaders ()V
}

public class org/polyfrost/elementa/components/UIContainer : org/polyfrost/elementa/UIComponent {
	public fun <init> ()V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
}

public class org/polyfrost/elementa/components/UIImage : org/polyfrost/elementa/UIComponent, org/polyfrost/elementa/components/image/CacheableImage, org/polyfrost/elementa/components/image/ImageProvider {
	public static final field Companion Lorg/polyfrost/elementa/components/UIImage$Companion;
	public fun <init> (Ljava/util/concurrent/CompletableFuture;)V
	public fun <init> (Ljava/util/concurrent/CompletableFuture;Lorg/polyfrost/elementa/components/image/ImageProvider;)V
	public fun <init> (Ljava/util/concurrent/CompletableFuture;Lorg/polyfrost/elementa/components/image/ImageProvider;Lorg/polyfrost/elementa/components/image/ImageProvider;)V
	public synthetic fun <init> (Ljava/util/concurrent/CompletableFuture;Lorg/polyfrost/elementa/components/image/ImageProvider;Lorg/polyfrost/elementa/components/image/ImageProvider;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public fun applyTexture (Lorg/polyfrost/universal/utils/ReleasedDynamicTexture;)V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun drawImage (Lorg/polyfrost/universal/UMatrixStack;DDDDLjava/awt/Color;)V
	public static final fun get (Ljava/net/URL;)Ljava/awt/image/BufferedImage;
	public final fun getDestroy ()Z
	public final fun getImageHeight ()F
	public final fun getImageWidth ()F
	public final fun getTextureMagFilter ()Lorg/polyfrost/elementa/components/UIImage$TextureScalingMode;
	public final fun getTextureMinFilter ()Lorg/polyfrost/elementa/components/UIImage$TextureScalingMode;
	public final fun isLoaded ()Z
	public static final fun ofFile (Ljava/io/File;)Lorg/polyfrost/elementa/components/UIImage;
	public static final fun ofResource (Ljava/lang/String;)Lorg/polyfrost/elementa/components/UIImage;
	public static final fun ofResourceCached (Ljava/lang/String;)Lorg/polyfrost/elementa/components/UIImage;
	public static final fun ofResourceCached (Ljava/lang/String;Lorg/polyfrost/elementa/utils/ResourceCache;)Lorg/polyfrost/elementa/components/UIImage;
	public static final fun ofURL (Ljava/net/URL;)Lorg/polyfrost/elementa/components/UIImage;
	public static final fun ofURL (Ljava/net/URL;Lorg/polyfrost/elementa/components/image/ImageCache;)Lorg/polyfrost/elementa/components/UIImage;
	public final fun setDestroy (Z)V
	public final fun setImageHeight (F)V
	public final fun setImageWidth (F)V
	public final fun setTextureMagFilter (Lorg/polyfrost/elementa/components/UIImage$TextureScalingMode;)V
	public final fun setTextureMinFilter (Lorg/polyfrost/elementa/components/UIImage$TextureScalingMode;)V
	public fun supply (Lorg/polyfrost/elementa/components/image/CacheableImage;)V
}

public final class org/polyfrost/elementa/components/UIImage$Companion {
	public final fun get (Ljava/net/URL;)Ljava/awt/image/BufferedImage;
	public final fun getDefaultResourceCache ()Lorg/polyfrost/elementa/utils/ResourceCache;
	public final fun ofFile (Ljava/io/File;)Lorg/polyfrost/elementa/components/UIImage;
	public final fun ofResource (Ljava/lang/String;)Lorg/polyfrost/elementa/components/UIImage;
	public final fun ofResourceCached (Ljava/lang/String;)Lorg/polyfrost/elementa/components/UIImage;
	public final fun ofResourceCached (Ljava/lang/String;Lorg/polyfrost/elementa/utils/ResourceCache;)Lorg/polyfrost/elementa/components/UIImage;
	public final fun ofURL (Ljava/net/URL;)Lorg/polyfrost/elementa/components/UIImage;
	public final fun ofURL (Ljava/net/URL;Lorg/polyfrost/elementa/components/image/ImageCache;)Lorg/polyfrost/elementa/components/UIImage;
}

public final class org/polyfrost/elementa/components/UIImage$TextureScalingMode : java/lang/Enum {
	public static final field LINEAR Lorg/polyfrost/elementa/components/UIImage$TextureScalingMode;
	public static final field LINEAR_MIPMAP_LINEAR Lorg/polyfrost/elementa/components/UIImage$TextureScalingMode;
	public static final field LINEAR_MIPMAP_NEAREST Lorg/polyfrost/elementa/components/UIImage$TextureScalingMode;
	public static final field NEAREST Lorg/polyfrost/elementa/components/UIImage$TextureScalingMode;
	public static final field NEAREST_MIPMAP_LINEAR Lorg/polyfrost/elementa/components/UIImage$TextureScalingMode;
	public static final field NEAREST_MIPMAP_NEAREST Lorg/polyfrost/elementa/components/UIImage$TextureScalingMode;
	public static fun valueOf (Ljava/lang/String;)Lorg/polyfrost/elementa/components/UIImage$TextureScalingMode;
	public static fun values ()[Lorg/polyfrost/elementa/components/UIImage$TextureScalingMode;
}

public final class org/polyfrost/elementa/components/UIPoint : org/polyfrost/elementa/UIComponent {
	public fun <init> (Ljava/lang/Number;Ljava/lang/Number;)V
	public fun <init> (Lkotlin/Pair;)V
	public fun <init> (Lorg/polyfrost/elementa/constraints/PositionConstraint;Lorg/polyfrost/elementa/constraints/PositionConstraint;)V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun getAbsolutePoint ()Lkotlin/Pair;
	public final fun getAbsoluteX ()F
	public final fun getAbsoluteY ()F
	public final fun getPoint ()Lkotlin/Pair;
	public final fun getRelativeX ()F
	public final fun getRelativeY ()F
	public final fun getX ()Lorg/polyfrost/elementa/constraints/PositionConstraint;
	public final fun getY ()Lorg/polyfrost/elementa/constraints/PositionConstraint;
	public final fun withX (Ljava/lang/Number;)Lorg/polyfrost/elementa/components/UIPoint;
	public final fun withX (Lorg/polyfrost/elementa/constraints/PositionConstraint;)Lorg/polyfrost/elementa/components/UIPoint;
	public final fun withY (Ljava/lang/Number;)Lorg/polyfrost/elementa/components/UIPoint;
	public final fun withY (Lorg/polyfrost/elementa/constraints/PositionConstraint;)Lorg/polyfrost/elementa/components/UIPoint;
}

public class org/polyfrost/elementa/components/UIRoundedRectangle : org/polyfrost/elementa/UIComponent {
	public static final field Companion Lorg/polyfrost/elementa/components/UIRoundedRectangle$Companion;
	public fun <init> (F)V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
}

public final class org/polyfrost/elementa/components/UIRoundedRectangle$Companion {
	public final fun drawRoundedRectangle (FFFFFLjava/awt/Color;)V
	public final fun drawRoundedRectangle (Lorg/polyfrost/universal/UMatrixStack;FFFFFLjava/awt/Color;)V
	public final fun initShaders ()V
}

public class org/polyfrost/elementa/components/UIShape : org/polyfrost/elementa/UIComponent {
	public fun <init> ()V
	public fun <init> (Ljava/awt/Color;)V
	public synthetic fun <init> (Ljava/awt/Color;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun addVertex (Lorg/polyfrost/elementa/components/UIPoint;)Lorg/polyfrost/elementa/components/UIShape;
	public final fun addVertices ([Lorg/polyfrost/elementa/components/UIPoint;)Lorg/polyfrost/elementa/components/UIShape;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun getDrawMode ()I
	public final fun getVertices ()Ljava/util/List;
	public final fun setDrawMode (I)V
}

public class org/polyfrost/elementa/components/UIText : org/polyfrost/elementa/UIComponent {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Z)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;)V
	public synthetic fun <init> (Ljava/lang/String;ZLjava/awt/Color;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun bindShadow (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/components/UIText;
	public final fun bindShadowColor (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/components/UIText;
	public final fun bindText (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/components/UIText;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun getHeight ()F
	public final fun getShadow ()Z
	public final fun getShadowColor ()Ljava/awt/Color;
	public final synthetic fun getShadowColor ()Lorg/polyfrost/elementa/state/State;
	public final fun getText ()Ljava/lang/String;
	public final fun getTextWidth ()F
	public fun getWidth ()F
	public final fun setShadow (Z)Lorg/polyfrost/elementa/components/UIText;
	public final fun setShadowColor (Ljava/awt/Color;)Lorg/polyfrost/elementa/components/UIText;
	public final fun setText (Ljava/lang/String;)Lorg/polyfrost/elementa/components/UIText;
}

public class org/polyfrost/elementa/components/UIWrappedText : org/polyfrost/elementa/UIComponent {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Z)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;Z)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;ZZ)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;ZZF)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;ZZFLjava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ZLjava/awt/Color;ZZFLjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;Z)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;ZZ)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;ZZF)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;ZZFLjava/lang/String;)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;ZZFLjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun bindShadow (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/components/UIWrappedText;
	public final fun bindShadowColor (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/components/UIWrappedText;
	public final fun bindText (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/components/UIWrappedText;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun getShadow ()Z
	public final fun getShadowColor ()Ljava/awt/Color;
	public final synthetic fun getShadowColor ()Lorg/polyfrost/elementa/state/State;
	public final fun getText ()Ljava/lang/String;
	public final fun getTextWidth ()F
	public final fun setShadow (Z)Lorg/polyfrost/elementa/components/UIWrappedText;
	public final fun setShadowColor (Ljava/awt/Color;)Lorg/polyfrost/elementa/components/UIWrappedText;
	public final fun setText (Ljava/lang/String;)Lorg/polyfrost/elementa/components/UIWrappedText;
}

public final class org/polyfrost/elementa/components/Window : org/polyfrost/elementa/UIComponent {
	public static final field Companion Lorg/polyfrost/elementa/components/Window$Companion;
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/polyfrost/elementa/ElementaVersion;)V
	public fun <init> (Lorg/polyfrost/elementa/ElementaVersion;I)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/ElementaVersion;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun addFloatingComponent (Lorg/polyfrost/elementa/UIComponent;)V
	public fun afterInitialization ()V
	public fun animationFrame ()V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun drawFloatingComponents ()V
	public final fun drawFloatingComponents (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun focus (Lorg/polyfrost/elementa/UIComponent;)V
	public final fun getAnimationFPS ()I
	public fun getBottom ()F
	public final fun getFocusedComponent ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeight ()F
	public final fun getHoveredFloatingComponent ()Lorg/polyfrost/elementa/UIComponent;
	public fun getLeft ()F
	public fun getRight ()F
	public fun getTop ()F
	public fun getWidth ()F
	public fun hitTest (FF)Lorg/polyfrost/elementa/UIComponent;
	public final fun isAreaVisible (DDDD)Z
	public fun keyType (CI)V
	public fun mouseClick (DDI)V
	public fun mouseRelease ()V
	public fun mouseScroll (D)V
	public final fun removeFloatingComponent (Lorg/polyfrost/elementa/UIComponent;)V
	public final fun setHoveredFloatingComponent (Lorg/polyfrost/elementa/UIComponent;)V
	public final fun unfocus ()V
}

public final class org/polyfrost/elementa/components/Window$Companion {
	public final fun enqueueRenderOperation (Ljava/lang/Runnable;)V
	public final fun enqueueRenderOperation (Lkotlin/jvm/functions/Function0;)V
	public final fun of (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/components/Window;
	public final fun ofOrNull (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/components/Window;
}

public class org/polyfrost/elementa/components/image/BlurHashImage : org/polyfrost/elementa/UIComponent, org/polyfrost/elementa/components/image/ImageProvider {
	public static final field BASE_HEIGHT D
	public static final field BASE_WIDTH D
	public static final field Companion Lorg/polyfrost/elementa/components/image/BlurHashImage$Companion;
	public static final field SIZE_THRESHOLD I
	public fun <init> (Ljava/lang/String;)V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun drawImage (Lorg/polyfrost/universal/UMatrixStack;DDDDLjava/awt/Color;)V
	public static final fun ofFile (Ljava/lang/String;Ljava/io/File;)Lorg/polyfrost/elementa/components/UIImage;
	public static final fun ofResource (Ljava/lang/String;Ljava/lang/String;)Lorg/polyfrost/elementa/components/UIImage;
	public static final fun ofURL (Ljava/lang/String;Ljava/net/URL;)Lorg/polyfrost/elementa/components/UIImage;
}

public final class org/polyfrost/elementa/components/image/BlurHashImage$Companion {
	public final fun ofFile (Ljava/lang/String;Ljava/io/File;)Lorg/polyfrost/elementa/components/UIImage;
	public final fun ofResource (Ljava/lang/String;Ljava/lang/String;)Lorg/polyfrost/elementa/components/UIImage;
	public final fun ofURL (Ljava/lang/String;Ljava/net/URL;)Lorg/polyfrost/elementa/components/UIImage;
}

public abstract interface class org/polyfrost/elementa/components/image/CacheableImage {
	public abstract fun applyTexture (Lorg/polyfrost/universal/utils/ReleasedDynamicTexture;)V
	public abstract fun supply (Lorg/polyfrost/elementa/components/image/CacheableImage;)V
}

public final class org/polyfrost/elementa/components/image/DefaultFailureImage : org/polyfrost/elementa/components/image/ImageProvider {
	public static final field INSTANCE Lorg/polyfrost/elementa/components/image/DefaultFailureImage;
	public fun drawImage (Lorg/polyfrost/universal/UMatrixStack;DDDDLjava/awt/Color;)V
}

public final class org/polyfrost/elementa/components/image/DefaultLoadingImage : org/polyfrost/elementa/components/image/ImageProvider {
	public static final field INSTANCE Lorg/polyfrost/elementa/components/image/DefaultLoadingImage;
	public fun drawImage (Lorg/polyfrost/universal/UMatrixStack;DDDDLjava/awt/Color;)V
}

public final class org/polyfrost/elementa/components/image/FileImageCache : org/polyfrost/elementa/components/image/ImageCache {
	public fun <init> (Ljava/io/File;JLjava/util/concurrent/TimeUnit;Z)V
	public synthetic fun <init> (Ljava/io/File;JLjava/util/concurrent/TimeUnit;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun get (Ljava/net/URL;)Ljava/awt/image/BufferedImage;
	public fun set (Ljava/net/URL;Ljava/awt/image/BufferedImage;)V
}

public abstract interface class org/polyfrost/elementa/components/image/ImageCache {
	public abstract fun get (Ljava/net/URL;)Ljava/awt/image/BufferedImage;
	public abstract fun set (Ljava/net/URL;Ljava/awt/image/BufferedImage;)V
}

public abstract interface class org/polyfrost/elementa/components/image/ImageProvider {
	public fun drawImage (DDDDLjava/awt/Color;)V
	public fun drawImage (Lorg/polyfrost/universal/UMatrixStack;DDDDLjava/awt/Color;)V
	public fun drawImageCompat (Lorg/polyfrost/universal/UMatrixStack;DDDDLjava/awt/Color;)V
}

public final class org/polyfrost/elementa/components/image/ImageProvider$DefaultImpls {
	public static fun drawImage (Lorg/polyfrost/elementa/components/image/ImageProvider;DDDDLjava/awt/Color;)V
	public static fun drawImage (Lorg/polyfrost/elementa/components/image/ImageProvider;Lorg/polyfrost/universal/UMatrixStack;DDDDLjava/awt/Color;)V
	public static fun drawImageCompat (Lorg/polyfrost/elementa/components/image/ImageProvider;Lorg/polyfrost/universal/UMatrixStack;DDDDLjava/awt/Color;)V
}

public class org/polyfrost/elementa/components/image/MSDFComponent : org/polyfrost/elementa/UIComponent, org/polyfrost/elementa/components/image/CacheableImage {
	public static final field Companion Lorg/polyfrost/elementa/components/image/MSDFComponent$Companion;
	public fun <init> (Ljava/util/concurrent/CompletableFuture;)V
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public fun applyTexture (Lorg/polyfrost/universal/utils/ReleasedDynamicTexture;)V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun getDestroy ()Z
	public final fun getImageHeight ()F
	public final fun getImageWidth ()F
	public final fun isLoaded ()Z
	public static final fun ofFile (Ljava/io/File;)Lorg/polyfrost/elementa/components/image/MSDFComponent;
	public static final fun ofResource (Ljava/lang/String;)Lorg/polyfrost/elementa/components/image/MSDFComponent;
	public static final fun ofResourceCached (Ljava/lang/String;)Lorg/polyfrost/elementa/components/image/MSDFComponent;
	public static final fun ofResourceCached (Ljava/lang/String;Lorg/polyfrost/elementa/utils/ResourceCache;)Lorg/polyfrost/elementa/components/image/MSDFComponent;
	public static final fun ofURL (Ljava/net/URL;)Lorg/polyfrost/elementa/components/image/MSDFComponent;
	public static final fun ofURL (Ljava/net/URL;Lorg/polyfrost/elementa/components/image/ImageCache;)Lorg/polyfrost/elementa/components/image/MSDFComponent;
	public final fun setDestroy (Z)V
	public final fun setImageHeight (F)V
	public final fun setImageWidth (F)V
	public fun supply (Lorg/polyfrost/elementa/components/image/CacheableImage;)V
}

public final class org/polyfrost/elementa/components/image/MSDFComponent$Companion {
	public final fun areShadersInitialized ()Z
	public final fun initShaders ()V
	public final fun ofFile (Ljava/io/File;)Lorg/polyfrost/elementa/components/image/MSDFComponent;
	public final fun ofResource (Ljava/lang/String;)Lorg/polyfrost/elementa/components/image/MSDFComponent;
	public final fun ofResourceCached (Ljava/lang/String;)Lorg/polyfrost/elementa/components/image/MSDFComponent;
	public final fun ofResourceCached (Ljava/lang/String;Lorg/polyfrost/elementa/utils/ResourceCache;)Lorg/polyfrost/elementa/components/image/MSDFComponent;
	public final fun ofURL (Ljava/net/URL;)Lorg/polyfrost/elementa/components/image/MSDFComponent;
	public final fun ofURL (Ljava/net/URL;Lorg/polyfrost/elementa/components/image/ImageCache;)Lorg/polyfrost/elementa/components/image/MSDFComponent;
}

public abstract class org/polyfrost/elementa/components/input/AbstractTextInput : org/polyfrost/elementa/UIComponent {
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V
	protected final fun addText (Ljava/lang/String;Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;)V
	protected fun animateCursor ()V
	public fun animationFrame ()V
	protected fun charAfter (Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;)Ljava/lang/Character;
	protected fun charBefore (Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;)Ljava/lang/Character;
	protected final fun commitTextAddition (Ljava/lang/String;)V
	protected fun commitTextOperation (Lorg/polyfrost/elementa/components/input/AbstractTextInput$TextOperation;)V
	protected final fun commitTextRemoval (Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;Z)V
	protected fun copySelection ()V
	protected fun deleteSelection ()V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	protected fun drawSelectedText (Ljava/lang/String;FFI)V
	protected fun drawSelectedText (Lorg/polyfrost/universal/UMatrixStack;Ljava/lang/String;FFI)V
	protected final fun drawSelectedTextCompat (Lorg/polyfrost/universal/UMatrixStack;Ljava/lang/String;FFI)V
	protected fun drawUnselectedText (Ljava/lang/String;FI)V
	protected fun drawUnselectedText (Lorg/polyfrost/universal/UMatrixStack;Ljava/lang/String;FI)V
	protected final fun drawUnselectedTextCompat (Lorg/polyfrost/universal/UMatrixStack;Ljava/lang/String;FI)V
	protected final fun getActivateAction ()Lkotlin/jvm/functions/Function1;
	protected final fun getActive ()Z
	protected final fun getAllowInactiveSelection ()Z
	protected final fun getCursor ()Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;
	protected final fun getCursorColor ()Ljava/awt/Color;
	protected final fun getCursorComponent ()Lorg/polyfrost/elementa/UIComponent;
	protected final fun getCursorNeedsRefocus ()Z
	protected final fun getHorizontalScrollingOffset ()F
	protected final fun getInactiveSelectionBackgroundColor ()Ljava/awt/Color;
	protected final fun getInactiveSelectionForegroundColor ()Ljava/awt/Color;
	protected final fun getInitiallySelectedLine ()I
	protected final fun getInitiallySelectedWord ()Lkotlin/Pair;
	protected final fun getLastSelectionMoveTimestamp ()J
	public final fun getLineHeight ()F
	protected fun getNearestWordBoundary (Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;Lorg/polyfrost/elementa/components/input/AbstractTextInput$Direction;)Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;
	protected final fun getOtherSelectionEnd ()Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;
	public final fun getPlaceholder ()Ljava/lang/String;
	protected final fun getRedoStack ()Ljava/util/ArrayDeque;
	protected fun getSelection ()Lkotlin/Pair;
	protected final fun getSelectionBackgroundColor ()Ljava/awt/Color;
	protected final fun getSelectionForegroundColor ()Ljava/awt/Color;
	protected final fun getSelectionMode ()Lorg/polyfrost/elementa/components/input/AbstractTextInput$SelectionMode;
	public final fun getShadow ()Z
	protected final fun getTargetVerticalScrollingOffset ()F
	public abstract fun getText ()Ljava/lang/String;
	protected fun getTextBetween (Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;)Ljava/lang/String;
	protected final fun getTextualLines ()Ljava/util/List;
	protected final fun getUndoStack ()Ljava/util/ArrayDeque;
	protected final fun getUpdateAction ()Lkotlin/jvm/functions/Function1;
	protected final fun getVerticalScrollingOffset ()F
	protected final fun getVisualLines ()Ljava/util/List;
	protected fun hasSelection ()Z
	protected fun hasText ()Z
	public final fun isActive ()Z
	protected fun isBreakingCharacter (C)Z
	public final fun onActivate (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/components/input/AbstractTextInput;
	protected abstract fun onEnterPressed ()V
	public final fun onUpdate (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/components/input/AbstractTextInput;
	protected fun recalculateAllVisualLines ()V
	protected abstract fun recalculateDimensions ()V
	protected fun recalculateVisualLinesFor (I)V
	protected abstract fun screenPosToVisualPos (FF)Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;
	protected abstract fun scrollIntoView (Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;)V
	protected fun selectAll ()V
	protected fun selectionEnd ()Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;
	protected fun selectionStart ()Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;
	protected final fun setActivateAction (Lkotlin/jvm/functions/Function1;)V
	public final fun setActive (Z)Lorg/polyfrost/elementa/components/input/AbstractTextInput;
	protected final fun setActive (Z)V
	protected final fun setCursor (Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;)V
	protected final fun setCursorComponent (Lorg/polyfrost/elementa/UIComponent;)V
	protected final fun setCursorNeedsRefocus (Z)V
	protected final fun setHorizontalScrollingOffset (F)V
	protected final fun setInitiallySelectedLine (I)V
	protected final fun setInitiallySelectedWord (Lkotlin/Pair;)V
	protected final fun setLastSelectionMoveTimestamp (J)V
	public final fun setLineHeight (F)V
	protected final fun setOtherSelectionEnd (Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;)V
	public final fun setPlaceholder (Ljava/lang/String;)V
	protected final fun setSelectionMode (Lorg/polyfrost/elementa/components/input/AbstractTextInput$SelectionMode;)V
	public final fun setShadow (Z)V
	protected final fun setTargetVerticalScrollingOffset (F)V
	public final fun setText (Ljava/lang/String;)V
	protected final fun setUpdateAction (Lkotlin/jvm/functions/Function1;)V
	protected final fun setVerticalScrollingOffset (F)V
	protected fun splitTextForWrapping (Ljava/lang/String;F)Ljava/util/List;
	protected abstract fun textToLines (Ljava/lang/String;)Ljava/util/List;
}

protected final class org/polyfrost/elementa/components/input/AbstractTextInput$AddTextOperation : org/polyfrost/elementa/components/input/AbstractTextInput$TextOperation {
	public fun <init> (Lorg/polyfrost/elementa/components/input/AbstractTextInput;Ljava/lang/String;Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;)V
	public fun redo ()V
	public fun undo ()V
}

public final class org/polyfrost/elementa/components/input/AbstractTextInput$Direction : java/lang/Enum {
	public static final field Left Lorg/polyfrost/elementa/components/input/AbstractTextInput$Direction;
	public static final field Right Lorg/polyfrost/elementa/components/input/AbstractTextInput$Direction;
	public static fun valueOf (Ljava/lang/String;)Lorg/polyfrost/elementa/components/input/AbstractTextInput$Direction;
	public static fun values ()[Lorg/polyfrost/elementa/components/input/AbstractTextInput$Direction;
}

protected class org/polyfrost/elementa/components/input/AbstractTextInput$Line {
	public fun <init> (Lorg/polyfrost/elementa/components/input/AbstractTextInput;Ljava/lang/String;)V
	public final fun getLength ()I
	public final fun getText ()Ljava/lang/String;
	public final fun setText (Ljava/lang/String;)V
}

protected final class org/polyfrost/elementa/components/input/AbstractTextInput$LinePosition : java/lang/Comparable {
	public fun <init> (Lorg/polyfrost/elementa/components/input/AbstractTextInput;IIZ)V
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun compareTo (Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;)I
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColumn ()I
	public final fun getLine ()I
	public fun hashCode ()I
	public final fun isAtAbsoluteEnd ()Z
	public final fun isAtAbsoluteStart ()Z
	public final fun isAtLineEnd ()Z
	public final fun isAtLineStart ()Z
	public final fun isInFirstLine ()Z
	public final fun isInLastLine ()Z
	public final fun isVisual ()Z
	public final fun offsetColumn (I)Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;
	public final fun toScreenPos ()Lkotlin/Pair;
	public fun toString ()Ljava/lang/String;
	public final fun toTextualPos ()Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;
	public final fun toVisualPos ()Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;
	public final fun withColumn (I)Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;
}

protected final class org/polyfrost/elementa/components/input/AbstractTextInput$RemoveTextOperation : org/polyfrost/elementa/components/input/AbstractTextInput$TextOperation {
	public fun <init> (Lorg/polyfrost/elementa/components/input/AbstractTextInput;Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;Z)V
	public final fun getText ()Ljava/lang/String;
	public fun redo ()V
	public fun undo ()V
}

protected final class org/polyfrost/elementa/components/input/AbstractTextInput$ReplaceTextOperation : org/polyfrost/elementa/components/input/AbstractTextInput$TextOperation {
	public fun <init> (Lorg/polyfrost/elementa/components/input/AbstractTextInput;Lorg/polyfrost/elementa/components/input/AbstractTextInput$AddTextOperation;Lorg/polyfrost/elementa/components/input/AbstractTextInput$RemoveTextOperation;)V
	public fun redo ()V
	public fun undo ()V
}

public final class org/polyfrost/elementa/components/input/AbstractTextInput$SelectionMode : java/lang/Enum {
	public static final field Character Lorg/polyfrost/elementa/components/input/AbstractTextInput$SelectionMode;
	public static final field Line Lorg/polyfrost/elementa/components/input/AbstractTextInput$SelectionMode;
	public static final field None Lorg/polyfrost/elementa/components/input/AbstractTextInput$SelectionMode;
	public static final field Word Lorg/polyfrost/elementa/components/input/AbstractTextInput$SelectionMode;
	public static fun valueOf (Ljava/lang/String;)Lorg/polyfrost/elementa/components/input/AbstractTextInput$SelectionMode;
	public static fun values ()[Lorg/polyfrost/elementa/components/input/AbstractTextInput$SelectionMode;
}

protected abstract class org/polyfrost/elementa/components/input/AbstractTextInput$TextOperation {
	public fun <init> (Lorg/polyfrost/elementa/components/input/AbstractTextInput;)V
	public abstract fun redo ()V
	public abstract fun undo ()V
}

protected final class org/polyfrost/elementa/components/input/AbstractTextInput$TextualLine : org/polyfrost/elementa/components/input/AbstractTextInput$Line {
	public fun <init> (Lorg/polyfrost/elementa/components/input/AbstractTextInput;Ljava/lang/String;Lkotlin/ranges/IntRange;)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/components/input/AbstractTextInput;Ljava/lang/String;Lkotlin/ranges/IntRange;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun addTextAt (Ljava/lang/String;I)V
	public final fun getVisualIndices ()Lkotlin/ranges/IntRange;
	public final fun setVisualIndices (Lkotlin/ranges/IntRange;)V
	public fun toString ()Ljava/lang/String;
}

protected final class org/polyfrost/elementa/components/input/AbstractTextInput$VisualLine : org/polyfrost/elementa/components/input/AbstractTextInput$Line {
	public fun <init> (Lorg/polyfrost/elementa/components/input/AbstractTextInput;Ljava/lang/String;I)V
	public final fun getTextIndex ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/components/input/UIMultilineTextInput : org/polyfrost/elementa/components/input/AbstractTextInput {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Z)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;Z)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;ZLjava/awt/Color;)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V
	public synthetic fun <init> (Ljava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun getText ()Ljava/lang/String;
	public final fun setMaxHeight (Lorg/polyfrost/elementa/constraints/HeightConstraint;)Lorg/polyfrost/elementa/components/input/UIMultilineTextInput;
	public final fun setMaxLines (I)Lorg/polyfrost/elementa/components/input/UIMultilineTextInput;
}

public class org/polyfrost/elementa/components/input/UIPasswordInput : org/polyfrost/elementa/components/input/UITextInput {
	public static final field Companion Lorg/polyfrost/elementa/components/input/UIPasswordInput$Companion;
	public fun <init> ()V
	public fun <init> (C)V
	public fun <init> (CLjava/lang/String;)V
	public fun <init> (CLjava/lang/String;Z)V
	public fun <init> (CLjava/lang/String;ZLjava/awt/Color;)V
	public fun <init> (CLjava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;)V
	public fun <init> (CLjava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;Z)V
	public fun <init> (CLjava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;ZLjava/awt/Color;)V
	public fun <init> (CLjava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;)V
	public fun <init> (CLjava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V
	public synthetic fun <init> (CLjava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun bindProtection (Lorg/polyfrost/elementa/state/BasicState;)Lorg/polyfrost/elementa/components/input/UIPasswordInput;
	public final fun getProtectedString (Ljava/lang/String;)Ljava/lang/String;
	public static final fun getProtectedString (Ljava/lang/String;C)Ljava/lang/String;
	protected fun getTextForRender ()Ljava/lang/String;
	public final fun isProtected ()Z
	protected fun setCursorPos ()V
	public final fun setProtection (Z)V
}

public final class org/polyfrost/elementa/components/input/UIPasswordInput$Companion {
	public final fun getProtectedString (Ljava/lang/String;C)Ljava/lang/String;
}

public class org/polyfrost/elementa/components/input/UITextInput : org/polyfrost/elementa/components/input/AbstractTextInput {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Z)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;Z)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;ZLjava/awt/Color;)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;)V
	public fun <init> (Ljava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V
	public synthetic fun <init> (Ljava/lang/String;ZLjava/awt/Color;Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	protected final fun getMaxWidth ()Lorg/polyfrost/elementa/constraints/WidthConstraint;
	protected final fun getMinWidth ()Lorg/polyfrost/elementa/constraints/WidthConstraint;
	protected final fun getPlaceholderWidth ()F
	public fun getText ()Ljava/lang/String;
	protected fun getTextForRender ()Ljava/lang/String;
	protected fun onEnterPressed ()V
	protected fun recalculateDimensions ()V
	protected fun screenPosToVisualPos (FF)Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;
	protected fun scrollIntoView (Lorg/polyfrost/elementa/components/input/AbstractTextInput$LinePosition;)V
	protected fun setCursorPos ()V
	public final fun setMaxWidth (Lorg/polyfrost/elementa/constraints/WidthConstraint;)Lorg/polyfrost/elementa/components/input/UITextInput;
	protected final fun setMaxWidth (Lorg/polyfrost/elementa/constraints/WidthConstraint;)V
	public final fun setMinWidth (Lorg/polyfrost/elementa/constraints/WidthConstraint;)Lorg/polyfrost/elementa/components/input/UITextInput;
	protected final fun setMinWidth (Lorg/polyfrost/elementa/constraints/WidthConstraint;)V
	protected fun splitTextForWrapping (Ljava/lang/String;F)Ljava/util/List;
	protected fun textToLines (Ljava/lang/String;)Ljava/util/List;
}

public final class org/polyfrost/elementa/components/inspector/ArrowComponent : org/polyfrost/elementa/components/TreeArrowComponent {
	public fun <init> (Z)V
	public fun close ()V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun open ()V
}

public final class org/polyfrost/elementa/components/inspector/InfoBlock : org/polyfrost/elementa/components/UIContainer {
	public fun <init> (Lorg/polyfrost/elementa/components/inspector/Inspector;)V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
}

public final class org/polyfrost/elementa/components/inspector/InfoBlockNode : org/polyfrost/elementa/components/TreeNode {
	public static final field Companion Lorg/polyfrost/elementa/components/inspector/InfoBlockNode$Companion;
	public fun <init> (Lorg/polyfrost/elementa/constraints/SuperConstraint;Ljava/lang/String;)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/constraints/SuperConstraint;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun getArrowComponent ()Lorg/polyfrost/elementa/components/TreeArrowComponent;
	public fun getArrowComponent ()Lorg/polyfrost/elementa/components/inspector/ArrowComponent;
	public synthetic fun getPrimaryComponent ()Lorg/polyfrost/elementa/UIComponent;
	public fun getPrimaryComponent ()Lorg/polyfrost/elementa/components/UIContainer;
}

public final class org/polyfrost/elementa/components/inspector/InfoBlockNode$Companion {
}

public final class org/polyfrost/elementa/components/inspector/Inspector : org/polyfrost/elementa/components/UIContainer {
	public static final field Companion Lorg/polyfrost/elementa/components/inspector/Inspector$Companion;
	public fun <init> (Lorg/polyfrost/elementa/UIComponent;)V
	public fun <init> (Lorg/polyfrost/elementa/UIComponent;Ljava/awt/Color;)V
	public fun <init> (Lorg/polyfrost/elementa/UIComponent;Ljava/awt/Color;Ljava/awt/Color;)V
	public fun <init> (Lorg/polyfrost/elementa/UIComponent;Ljava/awt/Color;Ljava/awt/Color;F)V
	public fun <init> (Lorg/polyfrost/elementa/UIComponent;Ljava/awt/Color;Ljava/awt/Color;FLorg/polyfrost/elementa/constraints/HeightConstraint;)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/UIComponent;Ljava/awt/Color;Ljava/awt/Color;FLorg/polyfrost/elementa/constraints/HeightConstraint;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun animationFrame ()V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
}

public final class org/polyfrost/elementa/components/inspector/Inspector$Companion {
}

public final class org/polyfrost/elementa/components/inspector/InspectorNode : org/polyfrost/elementa/components/TreeNode {
	public fun <init> (Lorg/polyfrost/elementa/components/inspector/Inspector;Lorg/polyfrost/elementa/UIComponent;)V
	public synthetic fun getArrowComponent ()Lorg/polyfrost/elementa/components/TreeArrowComponent;
	public fun getArrowComponent ()Lorg/polyfrost/elementa/components/inspector/ArrowComponent;
	public fun getPrimaryComponent ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getTargetComponent ()Lorg/polyfrost/elementa/UIComponent;
}

public final class org/polyfrost/elementa/components/plot/Bounds {
	public static final field Companion Lorg/polyfrost/elementa/components/plot/Bounds$Companion;
	public fun <init> (Ljava/lang/Number;Ljava/lang/Number;IZLjava/awt/Color;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Ljava/lang/Number;Ljava/lang/Number;IZLjava/awt/Color;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getLabelColor ()Ljava/awt/Color;
	public final fun getLabelToString ()Lkotlin/jvm/functions/Function1;
	public final fun getMax ()F
	public final fun getMin ()F
	public final fun getNumberOfGridLines ()I
	public final fun getRange ()F
	public final fun getShowLabels ()Z
}

public final class org/polyfrost/elementa/components/plot/Bounds$Companion {
	public final fun fromPoints (Ljava/util/List;I)Lorg/polyfrost/elementa/components/plot/Bounds;
	public static synthetic fun fromPoints$default (Lorg/polyfrost/elementa/components/plot/Bounds$Companion;Ljava/util/List;IILjava/lang/Object;)Lorg/polyfrost/elementa/components/plot/Bounds;
}

public final class org/polyfrost/elementa/components/plot/GridStyle {
	public fun <init> ()V
	public fun <init> (Ljava/awt/Color;FLorg/polyfrost/elementa/components/plot/LineType;)V
	public synthetic fun <init> (Ljava/awt/Color;FLorg/polyfrost/elementa/components/plot/LineType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/awt/Color;
	public final fun component2 ()F
	public final fun component3 ()Lorg/polyfrost/elementa/components/plot/LineType;
	public final fun copy (Ljava/awt/Color;FLorg/polyfrost/elementa/components/plot/LineType;)Lorg/polyfrost/elementa/components/plot/GridStyle;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/components/plot/GridStyle;Ljava/awt/Color;FLorg/polyfrost/elementa/components/plot/LineType;ILjava/lang/Object;)Lorg/polyfrost/elementa/components/plot/GridStyle;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColor ()Ljava/awt/Color;
	public final fun getType ()Lorg/polyfrost/elementa/components/plot/LineType;
	public final fun getWidth ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/components/plot/LineStyle {
	public fun <init> ()V
	public fun <init> (Ljava/awt/Color;FLorg/polyfrost/elementa/components/plot/LineType;)V
	public synthetic fun <init> (Ljava/awt/Color;FLorg/polyfrost/elementa/components/plot/LineType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/awt/Color;
	public final fun component2 ()F
	public final fun component3 ()Lorg/polyfrost/elementa/components/plot/LineType;
	public final fun copy (Ljava/awt/Color;FLorg/polyfrost/elementa/components/plot/LineType;)Lorg/polyfrost/elementa/components/plot/LineStyle;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/components/plot/LineStyle;Ljava/awt/Color;FLorg/polyfrost/elementa/components/plot/LineType;ILjava/lang/Object;)Lorg/polyfrost/elementa/components/plot/LineStyle;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColor ()Ljava/awt/Color;
	public final fun getType ()Lorg/polyfrost/elementa/components/plot/LineType;
	public final fun getWidth ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/components/plot/LineType : java/lang/Enum {
	public static final field Linear Lorg/polyfrost/elementa/components/plot/LineType;
	public final fun draw (Ljava/util/List;Ljava/awt/Color;F)V
	public static fun valueOf (Ljava/lang/String;)Lorg/polyfrost/elementa/components/plot/LineType;
	public static fun values ()[Lorg/polyfrost/elementa/components/plot/LineType;
}

public final class org/polyfrost/elementa/components/plot/Padding {
	public fun <init> (Ljava/lang/Number;)V
	public fun <init> (Ljava/lang/Number;Ljava/lang/Number;)V
	public fun <init> (Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
	public final fun getBottom ()F
	public final fun getLeft ()F
	public final fun getRight ()F
	public final fun getTop ()F
}

public final class org/polyfrost/elementa/components/plot/PlotComponent : org/polyfrost/elementa/UIComponent {
	public fun <init> (Ljava/util/List;Lorg/polyfrost/elementa/components/plot/Bounds;Lorg/polyfrost/elementa/components/plot/Bounds;Lorg/polyfrost/elementa/components/plot/PlotStyle;)V
	public synthetic fun <init> (Ljava/util/List;Lorg/polyfrost/elementa/components/plot/Bounds;Lorg/polyfrost/elementa/components/plot/Bounds;Lorg/polyfrost/elementa/components/plot/PlotStyle;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
}

public final class org/polyfrost/elementa/components/plot/PlotPoint {
	public fun <init> (FF)V
	public fun <init> (Ljava/lang/Number;Ljava/lang/Number;)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun copy (FF)Lorg/polyfrost/elementa/components/plot/PlotPoint;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/components/plot/PlotPoint;FFILjava/lang/Object;)Lorg/polyfrost/elementa/components/plot/PlotPoint;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX ()F
	public final fun getY ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/components/plot/PlotStyle {
	public fun <init> ()V
	public fun <init> (Lorg/polyfrost/elementa/components/plot/PointStyle;Lorg/polyfrost/elementa/components/plot/LineStyle;Lorg/polyfrost/elementa/components/plot/GridStyle;Lorg/polyfrost/elementa/components/plot/Padding;)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/components/plot/PointStyle;Lorg/polyfrost/elementa/components/plot/LineStyle;Lorg/polyfrost/elementa/components/plot/GridStyle;Lorg/polyfrost/elementa/components/plot/Padding;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/polyfrost/elementa/components/plot/PointStyle;
	public final fun component2 ()Lorg/polyfrost/elementa/components/plot/LineStyle;
	public final fun component3 ()Lorg/polyfrost/elementa/components/plot/GridStyle;
	public final fun component4 ()Lorg/polyfrost/elementa/components/plot/Padding;
	public final fun copy (Lorg/polyfrost/elementa/components/plot/PointStyle;Lorg/polyfrost/elementa/components/plot/LineStyle;Lorg/polyfrost/elementa/components/plot/GridStyle;Lorg/polyfrost/elementa/components/plot/Padding;)Lorg/polyfrost/elementa/components/plot/PlotStyle;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/components/plot/PlotStyle;Lorg/polyfrost/elementa/components/plot/PointStyle;Lorg/polyfrost/elementa/components/plot/LineStyle;Lorg/polyfrost/elementa/components/plot/GridStyle;Lorg/polyfrost/elementa/components/plot/Padding;ILjava/lang/Object;)Lorg/polyfrost/elementa/components/plot/PlotStyle;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGridStyle ()Lorg/polyfrost/elementa/components/plot/GridStyle;
	public final fun getLineStyle ()Lorg/polyfrost/elementa/components/plot/LineStyle;
	public final fun getPadding ()Lorg/polyfrost/elementa/components/plot/Padding;
	public final fun getPointStyle ()Lorg/polyfrost/elementa/components/plot/PointStyle;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/components/plot/PointStyle {
	public fun <init> ()V
	public fun <init> (Ljava/awt/Color;FLorg/polyfrost/elementa/components/plot/PointType;)V
	public synthetic fun <init> (Ljava/awt/Color;FLorg/polyfrost/elementa/components/plot/PointType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/awt/Color;
	public final fun component2 ()F
	public final fun component3 ()Lorg/polyfrost/elementa/components/plot/PointType;
	public final fun copy (Ljava/awt/Color;FLorg/polyfrost/elementa/components/plot/PointType;)Lorg/polyfrost/elementa/components/plot/PointStyle;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/components/plot/PointStyle;Ljava/awt/Color;FLorg/polyfrost/elementa/components/plot/PointType;ILjava/lang/Object;)Lorg/polyfrost/elementa/components/plot/PointStyle;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColor ()Ljava/awt/Color;
	public final fun getRadius ()F
	public final fun getType ()Lorg/polyfrost/elementa/components/plot/PointType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/components/plot/PointType : java/lang/Enum {
	public static final field None Lorg/polyfrost/elementa/components/plot/PointType;
	public final fun draw (Ljava/util/List;Lorg/polyfrost/elementa/components/plot/PlotStyle;)V
	public static fun valueOf (Ljava/lang/String;)Lorg/polyfrost/elementa/components/plot/PointType;
	public static fun values ()[Lorg/polyfrost/elementa/components/plot/PointType;
}

public final class org/polyfrost/elementa/constraints/AdditiveConstraint : org/polyfrost/elementa/constraints/MasterConstraint {
	public fun <init> (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;)V
	public fun animationFrame ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getConstraint1 ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public final fun getConstraint2 ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/AlphaAspectColorConstraint : org/polyfrost/elementa/constraints/ColorConstraint {
	public fun <init> ()V
	public fun <init> (Ljava/awt/Color;F)V
	public synthetic fun <init> (Ljava/awt/Color;FILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;)V
	public final fun bindAlpha (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/AlphaAspectColorConstraint;
	public final fun bindColor (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/AlphaAspectColorConstraint;
	public final fun getAlpha ()F
	public fun getCachedValue ()Ljava/awt/Color;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public final fun getColor ()Ljava/awt/Color;
	public fun getColorImpl (Lorg/polyfrost/elementa/UIComponent;)Ljava/awt/Color;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getRecalculate ()Z
	public final fun setAlpha (F)V
	public fun setCachedValue (Ljava/awt/Color;)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public final fun setColor (Ljava/awt/Color;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/AspectConstraint : org/polyfrost/elementa/constraints/PositionConstraint, org/polyfrost/elementa/constraints/SizeConstraint {
	public fun <init> ()V
	public fun <init> (F)V
	public synthetic fun <init> (FILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public final fun getValue ()F
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/CenterConstraint : org/polyfrost/elementa/constraints/PositionConstraint {
	public fun <init> ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getRecalculate ()Z
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/ChildBasedMaxSizeConstraint : org/polyfrost/elementa/constraints/SizeConstraint {
	public fun <init> ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/ChildBasedRangeConstraint : org/polyfrost/elementa/constraints/HeightConstraint, org/polyfrost/elementa/constraints/WidthConstraint {
	public fun <init> ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/ChildBasedSizeConstraint : org/polyfrost/elementa/constraints/SizeConstraint {
	public fun <init> ()V
	public fun <init> (F)V
	public synthetic fun <init> (FILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public final fun getPadding ()F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/CoerceAtLeastConstraint : org/polyfrost/elementa/constraints/MasterConstraint {
	public fun <init> (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;)V
	public fun animationFrame ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getConstraint ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public final fun getMinConstraint ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/CoerceAtLeastConstraint;
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/CoerceAtMostConstraint : org/polyfrost/elementa/constraints/MasterConstraint {
	public fun <init> (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;)V
	public fun animationFrame ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getConstraint ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public final fun getMaxConstraint ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/CoerceAtMostConstraint;
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/CoerceInConstraint : org/polyfrost/elementa/constraints/MasterConstraint {
	public fun <init> (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;)V
	public fun animationFrame ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getConstraint ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public final fun getMaxConstraint ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public final fun getMinConstraint ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/CoerceInConstraint;
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public abstract interface class org/polyfrost/elementa/constraints/ColorConstraint : org/polyfrost/elementa/constraints/SuperConstraint {
	public fun getColor (Lorg/polyfrost/elementa/UIComponent;)Ljava/awt/Color;
	public abstract fun getColorImpl (Lorg/polyfrost/elementa/UIComponent;)Ljava/awt/Color;
}

public final class org/polyfrost/elementa/constraints/ColorConstraint$DefaultImpls {
	public static fun animationFrame (Lorg/polyfrost/elementa/constraints/ColorConstraint;)V
	public static fun getColor (Lorg/polyfrost/elementa/constraints/ColorConstraint;Lorg/polyfrost/elementa/UIComponent;)Ljava/awt/Color;
	public static fun pauseIfSupported (Lorg/polyfrost/elementa/constraints/ColorConstraint;)V
	public static fun resumeIfSupported (Lorg/polyfrost/elementa/constraints/ColorConstraint;)V
	public static fun stopIfSupported (Lorg/polyfrost/elementa/constraints/ColorConstraint;)V
	public static fun to (Lorg/polyfrost/elementa/constraints/ColorConstraint;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public static fun visit (Lorg/polyfrost/elementa/constraints/ColorConstraint;Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;Z)V
}

public final class org/polyfrost/elementa/constraints/ConstantColorConstraint : org/polyfrost/elementa/constraints/ColorConstraint {
	public fun <init> ()V
	public fun <init> (Ljava/awt/Color;)V
	public synthetic fun <init> (Ljava/awt/Color;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;)V
	public final fun bindColor (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/ConstantColorConstraint;
	public fun getCachedValue ()Ljava/awt/Color;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public final fun getColor ()Ljava/awt/Color;
	public fun getColorImpl (Lorg/polyfrost/elementa/UIComponent;)Ljava/awt/Color;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getRecalculate ()Z
	public fun setCachedValue (Ljava/awt/Color;)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public final fun setColor (Ljava/awt/Color;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/ConstantColorConstraint;
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/ConstraintType : java/lang/Enum {
	public static final field COLOR Lorg/polyfrost/elementa/constraints/ConstraintType;
	public static final field FONT_PROVIDER Lorg/polyfrost/elementa/constraints/ConstraintType;
	public static final field HEIGHT Lorg/polyfrost/elementa/constraints/ConstraintType;
	public static final field RADIUS Lorg/polyfrost/elementa/constraints/ConstraintType;
	public static final field TEXT_SCALE Lorg/polyfrost/elementa/constraints/ConstraintType;
	public static final field WIDTH Lorg/polyfrost/elementa/constraints/ConstraintType;
	public static final field X Lorg/polyfrost/elementa/constraints/ConstraintType;
	public static final field Y Lorg/polyfrost/elementa/constraints/ConstraintType;
	public final fun getPrettyName ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/polyfrost/elementa/constraints/ConstraintType;
	public static fun values ()[Lorg/polyfrost/elementa/constraints/ConstraintType;
}

public final class org/polyfrost/elementa/constraints/CopyConstraintColor : org/polyfrost/elementa/constraints/ColorConstraint {
	public fun <init> ()V
	public fun getCachedValue ()Ljava/awt/Color;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getColorImpl (Lorg/polyfrost/elementa/UIComponent;)Ljava/awt/Color;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getRecalculate ()Z
	public fun setCachedValue (Ljava/awt/Color;)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/CopyConstraintFloat : org/polyfrost/elementa/constraints/PositionConstraint, org/polyfrost/elementa/constraints/SizeConstraint {
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/CramSiblingConstraint : org/polyfrost/elementa/constraints/SiblingConstraint {
	public fun <init> ()V
	public fun <init> (F)V
	public synthetic fun <init> (FILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHorizontalPadding (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public fun getVerticalPadding (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/CramSiblingConstraint;
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/FillConstraint : org/polyfrost/elementa/constraints/SizeConstraint {
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public abstract interface class org/polyfrost/elementa/constraints/GeneralConstraint : org/polyfrost/elementa/constraints/PositionConstraint, org/polyfrost/elementa/constraints/SizeConstraint {
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public abstract fun getXValue (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public abstract fun getYValue (Lorg/polyfrost/elementa/UIComponent;)F
}

public final class org/polyfrost/elementa/constraints/GeneralConstraint$DefaultImpls {
	public static fun animationFrame (Lorg/polyfrost/elementa/constraints/GeneralConstraint;)V
	public static fun getHeight (Lorg/polyfrost/elementa/constraints/GeneralConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getHeightImpl (Lorg/polyfrost/elementa/constraints/GeneralConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getRadius (Lorg/polyfrost/elementa/constraints/GeneralConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getRadiusImpl (Lorg/polyfrost/elementa/constraints/GeneralConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getTextScale (Lorg/polyfrost/elementa/constraints/GeneralConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getWidth (Lorg/polyfrost/elementa/constraints/GeneralConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getWidthImpl (Lorg/polyfrost/elementa/constraints/GeneralConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getXPosition (Lorg/polyfrost/elementa/constraints/GeneralConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getXPositionImpl (Lorg/polyfrost/elementa/constraints/GeneralConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getYPosition (Lorg/polyfrost/elementa/constraints/GeneralConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getYPositionImpl (Lorg/polyfrost/elementa/constraints/GeneralConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun pauseIfSupported (Lorg/polyfrost/elementa/constraints/GeneralConstraint;)V
	public static fun resumeIfSupported (Lorg/polyfrost/elementa/constraints/GeneralConstraint;)V
	public static fun stopIfSupported (Lorg/polyfrost/elementa/constraints/GeneralConstraint;)V
	public static fun to (Lorg/polyfrost/elementa/constraints/GeneralConstraint;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public static fun visit (Lorg/polyfrost/elementa/constraints/GeneralConstraint;Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;Z)V
}

public abstract interface class org/polyfrost/elementa/constraints/HeightConstraint : org/polyfrost/elementa/constraints/SuperConstraint {
	public fun getHeight (Lorg/polyfrost/elementa/UIComponent;)F
	public abstract fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getTextScale (Lorg/polyfrost/elementa/UIComponent;)F
}

public final class org/polyfrost/elementa/constraints/HeightConstraint$DefaultImpls {
	public static fun animationFrame (Lorg/polyfrost/elementa/constraints/HeightConstraint;)V
	public static fun getHeight (Lorg/polyfrost/elementa/constraints/HeightConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getTextScale (Lorg/polyfrost/elementa/constraints/HeightConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun pauseIfSupported (Lorg/polyfrost/elementa/constraints/HeightConstraint;)V
	public static fun resumeIfSupported (Lorg/polyfrost/elementa/constraints/HeightConstraint;)V
	public static fun stopIfSupported (Lorg/polyfrost/elementa/constraints/HeightConstraint;)V
	public static fun to (Lorg/polyfrost/elementa/constraints/HeightConstraint;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public static fun visit (Lorg/polyfrost/elementa/constraints/HeightConstraint;Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;Z)V
}

public final class org/polyfrost/elementa/constraints/ImageAspectConstraint : org/polyfrost/elementa/constraints/HeightConstraint, org/polyfrost/elementa/constraints/WidthConstraint {
	public fun <init> ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/ImageAspectConstraint;
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/InheritedColorConstraint : org/polyfrost/elementa/constraints/ColorConstraint {
	public fun <init> ()V
	public fun getCachedValue ()Ljava/awt/Color;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getColorImpl (Lorg/polyfrost/elementa/UIComponent;)Ljava/awt/Color;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getRecalculate ()Z
	public fun setCachedValue (Ljava/awt/Color;)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public abstract interface class org/polyfrost/elementa/constraints/MasterConstraint : org/polyfrost/elementa/constraints/PositionConstraint, org/polyfrost/elementa/constraints/SizeConstraint {
}

public final class org/polyfrost/elementa/constraints/MasterConstraint$DefaultImpls {
	public static fun animationFrame (Lorg/polyfrost/elementa/constraints/MasterConstraint;)V
	public static fun getHeight (Lorg/polyfrost/elementa/constraints/MasterConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getRadius (Lorg/polyfrost/elementa/constraints/MasterConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getTextScale (Lorg/polyfrost/elementa/constraints/MasterConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getWidth (Lorg/polyfrost/elementa/constraints/MasterConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getXPosition (Lorg/polyfrost/elementa/constraints/MasterConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getYPosition (Lorg/polyfrost/elementa/constraints/MasterConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun pauseIfSupported (Lorg/polyfrost/elementa/constraints/MasterConstraint;)V
	public static fun resumeIfSupported (Lorg/polyfrost/elementa/constraints/MasterConstraint;)V
	public static fun stopIfSupported (Lorg/polyfrost/elementa/constraints/MasterConstraint;)V
	public static fun to (Lorg/polyfrost/elementa/constraints/MasterConstraint;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public static fun visit (Lorg/polyfrost/elementa/constraints/MasterConstraint;Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;Z)V
}

public final class org/polyfrost/elementa/constraints/MaxConstraint : org/polyfrost/elementa/constraints/MasterConstraint {
	public fun <init> (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;)V
	public fun animationFrame ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getFirst ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public final fun getSecond ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/MaxConstraint;
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/MaxImageConstraint : org/polyfrost/elementa/constraints/HeightConstraint, org/polyfrost/elementa/constraints/WidthConstraint {
	public fun <init> ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/MinConstraint : org/polyfrost/elementa/constraints/MasterConstraint {
	public fun <init> (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;)V
	public fun animationFrame ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getFirst ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public final fun getSecond ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/MinConstraint;
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/MousePositionConstraint : org/polyfrost/elementa/constraints/PositionConstraint {
	public fun <init> ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getRecalculate ()Z
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public abstract interface class org/polyfrost/elementa/constraints/PaddingConstraint {
	public abstract fun getHorizontalPadding (Lorg/polyfrost/elementa/UIComponent;)F
	public abstract fun getVerticalPadding (Lorg/polyfrost/elementa/UIComponent;)F
}

public final class org/polyfrost/elementa/constraints/PixelConstraint : org/polyfrost/elementa/constraints/MasterConstraint {
	public fun <init> (F)V
	public fun <init> (FZ)V
	public fun <init> (FZZ)V
	public synthetic fun <init> (FZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun bindAlignOpposite (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public final fun bindAlignOutside (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public final fun bindValue (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public final fun getAlignOpposite ()Z
	public final fun getAlignOutside ()Z
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public final fun getValue ()F
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public final fun setAlignOpposite (Z)V
	public final fun setAlignOutside (Z)V
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public final fun setValue (F)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public abstract interface class org/polyfrost/elementa/constraints/PositionConstraint : org/polyfrost/elementa/constraints/XConstraint, org/polyfrost/elementa/constraints/YConstraint {
}

public final class org/polyfrost/elementa/constraints/PositionConstraint$DefaultImpls {
	public static fun animationFrame (Lorg/polyfrost/elementa/constraints/PositionConstraint;)V
	public static fun getXPosition (Lorg/polyfrost/elementa/constraints/PositionConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getYPosition (Lorg/polyfrost/elementa/constraints/PositionConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun pauseIfSupported (Lorg/polyfrost/elementa/constraints/PositionConstraint;)V
	public static fun resumeIfSupported (Lorg/polyfrost/elementa/constraints/PositionConstraint;)V
	public static fun stopIfSupported (Lorg/polyfrost/elementa/constraints/PositionConstraint;)V
	public static fun to (Lorg/polyfrost/elementa/constraints/PositionConstraint;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public static fun visit (Lorg/polyfrost/elementa/constraints/PositionConstraint;Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;Z)V
}

public abstract interface class org/polyfrost/elementa/constraints/RadiusConstraint : org/polyfrost/elementa/constraints/SuperConstraint {
	public fun getRadius (Lorg/polyfrost/elementa/UIComponent;)F
	public abstract fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
}

public final class org/polyfrost/elementa/constraints/RadiusConstraint$DefaultImpls {
	public static fun animationFrame (Lorg/polyfrost/elementa/constraints/RadiusConstraint;)V
	public static fun getRadius (Lorg/polyfrost/elementa/constraints/RadiusConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun pauseIfSupported (Lorg/polyfrost/elementa/constraints/RadiusConstraint;)V
	public static fun resumeIfSupported (Lorg/polyfrost/elementa/constraints/RadiusConstraint;)V
	public static fun stopIfSupported (Lorg/polyfrost/elementa/constraints/RadiusConstraint;)V
	public static fun to (Lorg/polyfrost/elementa/constraints/RadiusConstraint;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public static fun visit (Lorg/polyfrost/elementa/constraints/RadiusConstraint;Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;Z)V
}

public final class org/polyfrost/elementa/constraints/RainbowColorConstraint : org/polyfrost/elementa/constraints/ColorConstraint {
	public fun <init> ()V
	public fun <init> (IF)V
	public synthetic fun <init> (IFILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun animationFrame ()V
	public final fun getAlpha ()I
	public fun getCachedValue ()Ljava/awt/Color;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getColorImpl (Lorg/polyfrost/elementa/UIComponent;)Ljava/awt/Color;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getRecalculate ()Z
	public final fun getSpeed ()F
	public fun setCachedValue (Ljava/awt/Color;)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/RainbowColorConstraint;
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/RelativeConstraint : org/polyfrost/elementa/constraints/PositionConstraint, org/polyfrost/elementa/constraints/SizeConstraint {
	public fun <init> ()V
	public fun <init> (F)V
	public synthetic fun <init> (FILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;)V
	public final fun bindValue (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/RelativeConstraint;
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public final fun getValue ()F
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public final fun setValue (F)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/RelativeWindowConstraint : org/polyfrost/elementa/constraints/PositionConstraint, org/polyfrost/elementa/constraints/SizeConstraint {
	public fun <init> ()V
	public fun <init> (F)V
	public synthetic fun <init> (FILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public final fun getValue ()F
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/RoundingConstraint : org/polyfrost/elementa/constraints/MasterConstraint {
	public fun <init> (Lorg/polyfrost/elementa/constraints/SuperConstraint;)V
	public fun <init> (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/RoundingConstraint$Mode;)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/RoundingConstraint$Mode;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getConstraint ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public final fun getRoundingMode ()Lorg/polyfrost/elementa/constraints/RoundingConstraint$Mode;
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public final fun setRoundingMode (Lorg/polyfrost/elementa/constraints/RoundingConstraint$Mode;)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/RoundingConstraint$Mode : java/lang/Enum {
	public static final field Ceil Lorg/polyfrost/elementa/constraints/RoundingConstraint$Mode;
	public static final field Floor Lorg/polyfrost/elementa/constraints/RoundingConstraint$Mode;
	public static final field Round Lorg/polyfrost/elementa/constraints/RoundingConstraint$Mode;
	public static fun valueOf (Ljava/lang/String;)Lorg/polyfrost/elementa/constraints/RoundingConstraint$Mode;
	public static fun values ()[Lorg/polyfrost/elementa/constraints/RoundingConstraint$Mode;
}

public final class org/polyfrost/elementa/constraints/ScaleConstraint : org/polyfrost/elementa/constraints/MasterConstraint {
	public fun <init> (Lorg/polyfrost/elementa/constraints/SuperConstraint;F)V
	public fun <init> (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/state/State;)V
	public fun animationFrame ()V
	public final fun bindValue (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/ScaleConstraint;
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getConstraint ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public final fun getValue ()F
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public final fun setValue (F)V
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/ScaledTextConstraint : org/polyfrost/elementa/constraints/SizeConstraint {
	public fun <init> (F)V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public final fun getScale ()F
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public final fun setScale (F)V
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/ScaledTextConstraint;
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public class org/polyfrost/elementa/constraints/SiblingConstraint : org/polyfrost/elementa/constraints/PaddingConstraint, org/polyfrost/elementa/constraints/PositionConstraint {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FZ)V
	public synthetic fun <init> (FZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAlignOpposite ()Z
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	protected final fun getHighestPoint (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;I)F
	public fun getHorizontalPadding (Lorg/polyfrost/elementa/UIComponent;)F
	protected final fun getLeftmostPoint (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;I)F
	protected final fun getLowestPoint (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;I)F
	public final fun getPadding ()F
	public fun getRecalculate ()Z
	protected final fun getRightmostPoint (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;I)F
	public fun getVerticalPadding (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public abstract interface class org/polyfrost/elementa/constraints/SizeConstraint : org/polyfrost/elementa/constraints/HeightConstraint, org/polyfrost/elementa/constraints/RadiusConstraint, org/polyfrost/elementa/constraints/WidthConstraint {
}

public final class org/polyfrost/elementa/constraints/SizeConstraint$DefaultImpls {
	public static fun animationFrame (Lorg/polyfrost/elementa/constraints/SizeConstraint;)V
	public static fun getHeight (Lorg/polyfrost/elementa/constraints/SizeConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getRadius (Lorg/polyfrost/elementa/constraints/SizeConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getTextScale (Lorg/polyfrost/elementa/constraints/SizeConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun getWidth (Lorg/polyfrost/elementa/constraints/SizeConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun pauseIfSupported (Lorg/polyfrost/elementa/constraints/SizeConstraint;)V
	public static fun resumeIfSupported (Lorg/polyfrost/elementa/constraints/SizeConstraint;)V
	public static fun stopIfSupported (Lorg/polyfrost/elementa/constraints/SizeConstraint;)V
	public static fun to (Lorg/polyfrost/elementa/constraints/SizeConstraint;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public static fun visit (Lorg/polyfrost/elementa/constraints/SizeConstraint;Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;Z)V
}

public final class org/polyfrost/elementa/constraints/SubtractiveConstraint : org/polyfrost/elementa/constraints/MasterConstraint {
	public fun <init> (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;)V
	public fun animationFrame ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getConstraint1 ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public final fun getConstraint2 ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SubtractiveConstraint;
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public abstract interface class org/polyfrost/elementa/constraints/SuperConstraint {
	public fun animationFrame ()V
	public abstract fun getCachedValue ()Ljava/lang/Object;
	public abstract fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public abstract fun getRecalculate ()Z
	public fun pauseIfSupported ()V
	public fun resumeIfSupported ()V
	public abstract fun setCachedValue (Ljava/lang/Object;)V
	public abstract fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public abstract fun setRecalculate (Z)V
	public fun stopIfSupported ()V
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun visit (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;Z)V
	public static synthetic fun visit$default (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;ZILjava/lang/Object;)V
	public abstract fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/SuperConstraint$DefaultImpls {
	public static fun animationFrame (Lorg/polyfrost/elementa/constraints/SuperConstraint;)V
	public static fun pauseIfSupported (Lorg/polyfrost/elementa/constraints/SuperConstraint;)V
	public static fun resumeIfSupported (Lorg/polyfrost/elementa/constraints/SuperConstraint;)V
	public static fun stopIfSupported (Lorg/polyfrost/elementa/constraints/SuperConstraint;)V
	public static fun to (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public static fun visit (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;Z)V
	public static synthetic fun visit$default (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;ZILjava/lang/Object;)V
}

public final class org/polyfrost/elementa/constraints/TextAspectConstraint : org/polyfrost/elementa/constraints/HeightConstraint, org/polyfrost/elementa/constraints/WidthConstraint {
	public fun <init> ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/TextAspectConstraint;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public abstract interface class org/polyfrost/elementa/constraints/WidthConstraint : org/polyfrost/elementa/constraints/SuperConstraint {
	public fun getWidth (Lorg/polyfrost/elementa/UIComponent;)F
	public abstract fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
}

public final class org/polyfrost/elementa/constraints/WidthConstraint$DefaultImpls {
	public static fun animationFrame (Lorg/polyfrost/elementa/constraints/WidthConstraint;)V
	public static fun getWidth (Lorg/polyfrost/elementa/constraints/WidthConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun pauseIfSupported (Lorg/polyfrost/elementa/constraints/WidthConstraint;)V
	public static fun resumeIfSupported (Lorg/polyfrost/elementa/constraints/WidthConstraint;)V
	public static fun stopIfSupported (Lorg/polyfrost/elementa/constraints/WidthConstraint;)V
	public static fun to (Lorg/polyfrost/elementa/constraints/WidthConstraint;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public static fun visit (Lorg/polyfrost/elementa/constraints/WidthConstraint;Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;Z)V
}

public abstract interface class org/polyfrost/elementa/constraints/XConstraint : org/polyfrost/elementa/constraints/SuperConstraint {
	public fun getXPosition (Lorg/polyfrost/elementa/UIComponent;)F
	public abstract fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
}

public final class org/polyfrost/elementa/constraints/XConstraint$DefaultImpls {
	public static fun animationFrame (Lorg/polyfrost/elementa/constraints/XConstraint;)V
	public static fun getXPosition (Lorg/polyfrost/elementa/constraints/XConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun pauseIfSupported (Lorg/polyfrost/elementa/constraints/XConstraint;)V
	public static fun resumeIfSupported (Lorg/polyfrost/elementa/constraints/XConstraint;)V
	public static fun stopIfSupported (Lorg/polyfrost/elementa/constraints/XConstraint;)V
	public static fun to (Lorg/polyfrost/elementa/constraints/XConstraint;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public static fun visit (Lorg/polyfrost/elementa/constraints/XConstraint;Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;Z)V
}

public abstract interface class org/polyfrost/elementa/constraints/YConstraint : org/polyfrost/elementa/constraints/SuperConstraint {
	public fun getYPosition (Lorg/polyfrost/elementa/UIComponent;)F
	public abstract fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
}

public final class org/polyfrost/elementa/constraints/YConstraint$DefaultImpls {
	public static fun animationFrame (Lorg/polyfrost/elementa/constraints/YConstraint;)V
	public static fun getYPosition (Lorg/polyfrost/elementa/constraints/YConstraint;Lorg/polyfrost/elementa/UIComponent;)F
	public static fun pauseIfSupported (Lorg/polyfrost/elementa/constraints/YConstraint;)V
	public static fun resumeIfSupported (Lorg/polyfrost/elementa/constraints/YConstraint;)V
	public static fun stopIfSupported (Lorg/polyfrost/elementa/constraints/YConstraint;)V
	public static fun to (Lorg/polyfrost/elementa/constraints/YConstraint;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public static fun visit (Lorg/polyfrost/elementa/constraints/YConstraint;Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;Z)V
}

public final class org/polyfrost/elementa/constraints/animation/AnimatingConstraints : org/polyfrost/elementa/UIConstraints {
	public fun <init> (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIConstraints;)V
	public final fun begin ()Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun getCompleteAction ()Lkotlin/jvm/functions/Function0;
	public final fun onComplete (Lkotlin/jvm/functions/Function0;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun onCompleteRunnable (Ljava/lang/Runnable;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun setColorAnimation (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/ColorConstraint;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun setColorAnimation (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/ColorConstraint;F)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public static synthetic fun setColorAnimation$default (Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/ColorConstraint;FILjava/lang/Object;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun setCompleteAction (Lkotlin/jvm/functions/Function0;)V
	public final fun setExtraDelay (F)V
	public final fun setHeightAnimation (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/HeightConstraint;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun setHeightAnimation (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/HeightConstraint;F)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public static synthetic fun setHeightAnimation$default (Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/HeightConstraint;FILjava/lang/Object;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun setRadiusAnimation (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/RadiusConstraint;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun setRadiusAnimation (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/RadiusConstraint;F)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public static synthetic fun setRadiusAnimation$default (Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/RadiusConstraint;FILjava/lang/Object;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun setTextScaleAnimation (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/HeightConstraint;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun setTextScaleAnimation (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/HeightConstraint;F)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public static synthetic fun setTextScaleAnimation$default (Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/HeightConstraint;FILjava/lang/Object;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun setWidthAnimation (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/WidthConstraint;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun setWidthAnimation (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/WidthConstraint;F)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public static synthetic fun setWidthAnimation$default (Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/WidthConstraint;FILjava/lang/Object;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun setXAnimation (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/XConstraint;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun setXAnimation (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/XConstraint;F)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public static synthetic fun setXAnimation$default (Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/XConstraint;FILjava/lang/Object;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun setYAnimation (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/YConstraint;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public final fun setYAnimation (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/YConstraint;F)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
	public static synthetic fun setYAnimation$default (Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;FLorg/polyfrost/elementa/constraints/YConstraint;FILjava/lang/Object;)Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;
}

public abstract class org/polyfrost/elementa/constraints/animation/AnimationComponent : org/polyfrost/elementa/constraints/SuperConstraint {
	public synthetic fun <init> (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun animationFrame ()V
	public final fun getAnimationPaused ()Z
	public final fun getDelayFrames ()I
	public final fun getElapsedFrames ()I
	public final fun getPercentComplete ()F
	public final fun getStrategy ()Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;
	public final fun getTotalFrames ()I
	public final fun isComplete ()Z
	public final fun pause ()V
	public final fun resume ()V
	public final fun setAnimationPaused (Z)V
	public final fun setElapsedFrames (I)V
	public final fun stop ()V
}

public abstract interface class org/polyfrost/elementa/constraints/animation/AnimationStrategy {
	public abstract fun getValue (F)F
}

public abstract class org/polyfrost/elementa/constraints/animation/Animations : java/lang/Enum, org/polyfrost/elementa/constraints/animation/AnimationStrategy {
	public static final field IN_BOUNCE Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_CIRCULAR Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_CUBIC Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_ELASTIC Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_EXP Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_OUT_BOUNCE Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_OUT_CIRCULAR Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_OUT_CUBIC Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_OUT_ELASTIC Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_OUT_EXP Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_OUT_QUAD Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_OUT_QUART Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_OUT_QUINT Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_OUT_SIN Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_QUAD Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_QUART Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_QUINT Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field IN_SIN Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field LINEAR Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field OUT_BOUNCE Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field OUT_CIRCULAR Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field OUT_CUBIC Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field OUT_ELASTIC Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field OUT_EXP Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field OUT_QUAD Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field OUT_QUART Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field OUT_QUINT Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static final field OUT_SIN Lorg/polyfrost/elementa/constraints/animation/Animations;
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static fun valueOf (Ljava/lang/String;)Lorg/polyfrost/elementa/constraints/animation/Animations;
	public static fun values ()[Lorg/polyfrost/elementa/constraints/animation/Animations;
}

public final class org/polyfrost/elementa/constraints/animation/ColorAnimationComponent : org/polyfrost/elementa/constraints/animation/AnimationComponent, org/polyfrost/elementa/constraints/ColorConstraint {
	public fun <init> (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;ILorg/polyfrost/elementa/constraints/ColorConstraint;Lorg/polyfrost/elementa/constraints/ColorConstraint;I)V
	public fun animationFrame ()V
	public fun getCachedValue ()Ljava/awt/Color;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getColorImpl (Lorg/polyfrost/elementa/UIComponent;)Ljava/awt/Color;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getNewConstraint ()Lorg/polyfrost/elementa/constraints/ColorConstraint;
	public final fun getOldConstraint ()Lorg/polyfrost/elementa/constraints/ColorConstraint;
	public fun getRecalculate ()Z
	public fun setCachedValue (Ljava/awt/Color;)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/animation/ColorAnimationComponent;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/animation/ColorFieldAnimationComponent : org/polyfrost/elementa/constraints/animation/FieldAnimationComponent {
	public fun <init> (Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;ILjava/awt/Color;Ljava/awt/Color;I)V
	public fun getCachedValue ()Ljava/awt/Color;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getField ()Lkotlin/reflect/KMutableProperty0;
	public fun setCachedValue (Ljava/awt/Color;)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setValue (F)V
}

public final class org/polyfrost/elementa/constraints/animation/DoubleFieldAnimationComponent : org/polyfrost/elementa/constraints/animation/FieldAnimationComponent {
	public fun <init> (Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;IDDI)V
	public fun getCachedValue ()Ljava/lang/Double;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getField ()Lkotlin/reflect/KMutableProperty0;
	public fun setCachedValue (D)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setValue (F)V
}

public abstract class org/polyfrost/elementa/constraints/animation/FieldAnimationComponent : org/polyfrost/elementa/constraints/animation/AnimationComponent {
	public synthetic fun <init> (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun animationFrame ()V
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public abstract fun getField ()Lkotlin/reflect/KMutableProperty0;
	public fun getRecalculate ()Z
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public abstract fun setValue (F)V
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/animation/FieldAnimationComponent;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/animation/FloatFieldAnimationComponent : org/polyfrost/elementa/constraints/animation/FieldAnimationComponent {
	public fun <init> (Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;IFFI)V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getField ()Lkotlin/reflect/KMutableProperty0;
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setValue (F)V
}

public final class org/polyfrost/elementa/constraints/animation/HeightAnimationComponent : org/polyfrost/elementa/constraints/animation/AnimationComponent, org/polyfrost/elementa/constraints/HeightConstraint {
	public fun <init> (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;ILorg/polyfrost/elementa/constraints/HeightConstraint;Lorg/polyfrost/elementa/constraints/HeightConstraint;I)V
	public fun animationFrame ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getHeightImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public final fun getNewConstraint ()Lorg/polyfrost/elementa/constraints/HeightConstraint;
	public final fun getOldConstraint ()Lorg/polyfrost/elementa/constraints/HeightConstraint;
	public fun getRecalculate ()Z
	public fun getTextScale (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/animation/HeightAnimationComponent;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/animation/IntFieldAnimationComponent : org/polyfrost/elementa/constraints/animation/FieldAnimationComponent {
	public fun <init> (Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;IIII)V
	public fun getCachedValue ()Ljava/lang/Integer;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getField ()Lkotlin/reflect/KMutableProperty0;
	public fun setCachedValue (I)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setValue (F)V
}

public final class org/polyfrost/elementa/constraints/animation/LongFieldAnimationComponent : org/polyfrost/elementa/constraints/animation/FieldAnimationComponent {
	public fun <init> (Lkotlin/reflect/KMutableProperty0;Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;IJJI)V
	public fun getCachedValue ()Ljava/lang/Long;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getField ()Lkotlin/reflect/KMutableProperty0;
	public fun setCachedValue (J)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setValue (F)V
}

public final class org/polyfrost/elementa/constraints/animation/RadiusAnimationComponent : org/polyfrost/elementa/constraints/animation/AnimationComponent, org/polyfrost/elementa/constraints/RadiusConstraint {
	public fun <init> (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;ILorg/polyfrost/elementa/constraints/RadiusConstraint;Lorg/polyfrost/elementa/constraints/RadiusConstraint;I)V
	public fun animationFrame ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getNewConstraint ()Lorg/polyfrost/elementa/constraints/RadiusConstraint;
	public final fun getOldConstraint ()Lorg/polyfrost/elementa/constraints/RadiusConstraint;
	public fun getRadiusImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun getRecalculate ()Z
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/animation/RadiusAnimationComponent;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/animation/WidthAnimationComponent : org/polyfrost/elementa/constraints/animation/AnimationComponent, org/polyfrost/elementa/constraints/WidthConstraint {
	public fun <init> (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;ILorg/polyfrost/elementa/constraints/WidthConstraint;Lorg/polyfrost/elementa/constraints/WidthConstraint;I)V
	public fun animationFrame ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getNewConstraint ()Lorg/polyfrost/elementa/constraints/WidthConstraint;
	public final fun getOldConstraint ()Lorg/polyfrost/elementa/constraints/WidthConstraint;
	public fun getRecalculate ()Z
	public fun getWidthImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/animation/WidthAnimationComponent;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/animation/XAnimationComponent : org/polyfrost/elementa/constraints/animation/AnimationComponent, org/polyfrost/elementa/constraints/XConstraint {
	public fun <init> (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;ILorg/polyfrost/elementa/constraints/XConstraint;Lorg/polyfrost/elementa/constraints/XConstraint;I)V
	public fun animationFrame ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getNewConstraint ()Lorg/polyfrost/elementa/constraints/XConstraint;
	public final fun getOldConstraint ()Lorg/polyfrost/elementa/constraints/XConstraint;
	public fun getRecalculate ()Z
	public fun getXPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/animation/XAnimationComponent;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/animation/YAnimationComponent : org/polyfrost/elementa/constraints/animation/AnimationComponent, org/polyfrost/elementa/constraints/YConstraint {
	public fun <init> (Lorg/polyfrost/elementa/constraints/animation/AnimationStrategy;ILorg/polyfrost/elementa/constraints/YConstraint;Lorg/polyfrost/elementa/constraints/YConstraint;I)V
	public fun animationFrame ()V
	public fun getCachedValue ()Ljava/lang/Float;
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getNewConstraint ()Lorg/polyfrost/elementa/constraints/YConstraint;
	public final fun getOldConstraint ()Lorg/polyfrost/elementa/constraints/YConstraint;
	public fun getRecalculate ()Z
	public fun getYPositionImpl (Lorg/polyfrost/elementa/UIComponent;)F
	public fun setCachedValue (F)V
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public synthetic fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public fun to (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/animation/YAnimationComponent;
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/constraints/resolution/ConstraintResolutionGui : org/polyfrost/elementa/WindowScreen {
	public fun <init> (Ljava/lang/String;Lorg/polyfrost/elementa/UIComponent;Ljava/util/List;)V
}

public final class org/polyfrost/elementa/constraints/resolution/ConstraintResolver {
	public fun <init> (Lorg/polyfrost/elementa/components/Window;)V
	public final fun getCyclicNodes ()Ljava/util/List;
}

public final class org/polyfrost/elementa/constraints/resolution/ConstraintResolverKt {
	public static final fun forEachChild (Lorg/polyfrost/elementa/components/Window;Lkotlin/jvm/functions/Function1;)V
	public static final fun getConstraint (Lorg/polyfrost/elementa/UIConstraints;Lorg/polyfrost/elementa/constraints/ConstraintType;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
}

public final class org/polyfrost/elementa/constraints/resolution/ConstraintVisitor {
	public fun <init> (Lorg/polyfrost/elementa/constraints/resolution/DirectedAcyclicGraph;Lorg/polyfrost/elementa/UIComponent;)V
	public final fun getComponent ()Lorg/polyfrost/elementa/UIComponent;
	public final fun setConstraint (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
	public final fun visitChildren (Lorg/polyfrost/elementa/constraints/ConstraintType;)V
	public final fun visitParent (Lorg/polyfrost/elementa/constraints/ConstraintType;)V
	public final fun visitSelf (Lorg/polyfrost/elementa/constraints/ConstraintType;)V
	public final fun visitSibling (Lorg/polyfrost/elementa/constraints/ConstraintType;I)V
}

public final class org/polyfrost/elementa/constraints/resolution/DirectedAcyclicGraph {
	public fun <init> ()V
	public final fun addEdge (Ljava/lang/Object;Ljava/lang/Object;)Lorg/polyfrost/elementa/constraints/resolution/DirectedAcyclicGraph;
	public final fun addEdges ([Lkotlin/Pair;)Lorg/polyfrost/elementa/constraints/resolution/DirectedAcyclicGraph;
	public final fun addVertex (Ljava/lang/Object;)Lorg/polyfrost/elementa/constraints/resolution/DirectedAcyclicGraph;
	public final fun addVertices ([Ljava/lang/Object;)Lorg/polyfrost/elementa/constraints/resolution/DirectedAcyclicGraph;
	public final fun getCyclicLoop ()Ljava/util/List;
}

public final class org/polyfrost/elementa/constraints/resolution/ResolverNode {
	public fun <init> (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
	public final fun component1 ()Lorg/polyfrost/elementa/UIComponent;
	public final fun component2 ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public final fun component3 ()Lorg/polyfrost/elementa/constraints/ConstraintType;
	public final fun copy (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/ConstraintType;)Lorg/polyfrost/elementa/constraints/resolution/ResolverNode;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/constraints/resolution/ResolverNode;Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/ConstraintType;ILjava/lang/Object;)Lorg/polyfrost/elementa/constraints/resolution/ResolverNode;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getComponent ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getConstraint ()Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public final fun getConstraintType ()Lorg/polyfrost/elementa/constraints/ConstraintType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/dsl/AnimationsKt {
	public static final fun animate (Lorg/polyfrost/elementa/UIComponent;Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/UIComponent;
}

public abstract class org/polyfrost/elementa/dsl/BasicConstraint : org/polyfrost/elementa/constraints/SuperConstraint {
	public fun <init> (Ljava/lang/Object;)V
	public fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getRecalculate ()Z
	public fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/dsl/BasicConstraintsKt {
	public static final fun basicColorConstraint (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/constraints/ColorConstraint;
	public static final fun basicHeightConstraint (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/constraints/HeightConstraint;
	public static final fun basicRadiusConstraint (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/constraints/RadiusConstraint;
	public static final fun basicTextScaleConstraint (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/constraints/HeightConstraint;
	public static final fun basicWidthConstraint (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/constraints/WidthConstraint;
	public static final fun basicXConstraint (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/constraints/XConstraint;
	public static final fun basicYConstraint (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/constraints/YConstraint;
}

public abstract class org/polyfrost/elementa/dsl/ComponentConstraint : org/polyfrost/elementa/constraints/SuperConstraint {
	public fun <init> (Ljava/lang/Object;)V
	public fun getCachedValue ()Ljava/lang/Object;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public fun getRecalculate ()Z
	public fun setCachedValue (Ljava/lang/Object;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/dsl/ComponentConstraintsKt {
	public static final fun componentColorConstraint (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/ColorConstraint;
	public static final fun componentHeightConstraint (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/HeightConstraint;
	public static final fun componentRadiusConstraint (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/RadiusConstraint;
	public static final fun componentTextScaleConstraint (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/HeightConstraint;
	public static final fun componentWidthConstraint (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/WidthConstraint;
	public static final fun componentXConstraint (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/XConstraint;
	public static final fun componentYConstraint (Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/YConstraint;
}

public final class org/polyfrost/elementa/dsl/ComponentsKt {
	public static final fun addChild (Lorg/polyfrost/elementa/UIComponent;Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/UIComponent;
	public static final fun childOf (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/UIComponent;
	public static final fun constrain (Lorg/polyfrost/elementa/UIComponent;Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/UIComponent;
	public static final fun effect (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/effects/Effect;)Lorg/polyfrost/elementa/UIComponent;
	public static final fun provideDelegate (Lorg/polyfrost/elementa/UIComponent;Ljava/lang/Object;Lkotlin/reflect/KProperty;)Lkotlin/properties/ReadWriteProperty;
}

public final class org/polyfrost/elementa/dsl/ConstraintsKt {
	public static final fun boundTo (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public static final fun coerceAtLeast (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;)Lorg/polyfrost/elementa/constraints/CoerceAtLeastConstraint;
	public static final fun coerceAtMost (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;)Lorg/polyfrost/elementa/constraints/CoerceAtMostConstraint;
	public static final fun coerceIn (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;)Lorg/polyfrost/elementa/constraints/CoerceInConstraint;
	public static final fun div (Lorg/polyfrost/elementa/constraints/SuperConstraint;Ljava/lang/Number;)Lorg/polyfrost/elementa/constraints/ScaleConstraint;
	public static final fun div (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/ScaleConstraint;
	public static final fun max (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;)Lorg/polyfrost/elementa/constraints/MaxConstraint;
	public static final fun min (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;)Lorg/polyfrost/elementa/constraints/MinConstraint;
	public static final fun minus (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;)Lorg/polyfrost/elementa/constraints/SubtractiveConstraint;
	public static final fun plus (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/constraints/SuperConstraint;)Lorg/polyfrost/elementa/constraints/AdditiveConstraint;
	public static final fun times (Lorg/polyfrost/elementa/constraints/SuperConstraint;Ljava/lang/Number;)Lorg/polyfrost/elementa/constraints/ScaleConstraint;
	public static final fun times (Lorg/polyfrost/elementa/constraints/SuperConstraint;Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/ScaleConstraint;
}

public final class org/polyfrost/elementa/dsl/UtilitiesKt {
	public static final fun ceil (Lorg/polyfrost/elementa/constraints/SuperConstraint;)Lorg/polyfrost/elementa/constraints/RoundingConstraint;
	public static final fun component1 (Ljava/awt/Color;)I
	public static final fun component2 (Ljava/awt/Color;)I
	public static final fun component3 (Ljava/awt/Color;)I
	public static final fun component4 (Ljava/awt/Color;)I
	public static final fun floor (Lorg/polyfrost/elementa/constraints/SuperConstraint;)Lorg/polyfrost/elementa/constraints/RoundingConstraint;
	public static final fun getConstraint (Ljava/awt/Color;)Lorg/polyfrost/elementa/constraints/ConstantColorConstraint;
	public static final fun getPercent (Ljava/lang/Number;)Lorg/polyfrost/elementa/constraints/RelativeConstraint;
	public static final fun getPercentOfWindow (Ljava/lang/Number;)Lorg/polyfrost/elementa/constraints/RelativeWindowConstraint;
	public static final fun getPixel (Ljava/lang/Number;)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public static final fun getPixels (Ljava/lang/Number;)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public static final fun percent (Ljava/lang/Number;)Lorg/polyfrost/elementa/constraints/RelativeConstraint;
	public static final fun percentOfWindow (Ljava/lang/Number;)Lorg/polyfrost/elementa/constraints/RelativeWindowConstraint;
	public static final fun pixel (Ljava/lang/Number;)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public static final fun pixel (Ljava/lang/Number;Z)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public static final fun pixel (Ljava/lang/Number;ZZ)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public static synthetic fun pixel$default (Ljava/lang/Number;ZZILjava/lang/Object;)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public static final fun pixels (Ljava/lang/Number;)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public static final fun pixels (Ljava/lang/Number;Z)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public static final fun pixels (Ljava/lang/Number;ZZ)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public static synthetic fun pixels$default (Ljava/lang/Number;ZZILjava/lang/Object;)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public static final fun round (Lorg/polyfrost/elementa/constraints/SuperConstraint;)Lorg/polyfrost/elementa/constraints/RoundingConstraint;
	public static final fun toConstraint (Ljava/awt/Color;)Lorg/polyfrost/elementa/constraints/ConstantColorConstraint;
	public static final fun width (CF)F
	public static final fun width (Ljava/lang/String;FLorg/polyfrost/elementa/font/FontProvider;)F
	public static synthetic fun width$default (CFILjava/lang/Object;)F
	public static synthetic fun width$default (Ljava/lang/String;FLorg/polyfrost/elementa/font/FontProvider;ILjava/lang/Object;)F
}

public abstract class org/polyfrost/elementa/effects/Effect {
	protected field boundComponent Lorg/polyfrost/elementa/UIComponent;
	public fun <init> ()V
	public fun afterDraw ()V
	public fun afterDraw (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun afterDrawCompat (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun animationFrame ()V
	public fun beforeChildrenDraw ()V
	public fun beforeChildrenDraw (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun beforeChildrenDrawCompat (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun beforeDraw ()V
	public fun beforeDraw (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun beforeDrawCompat (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun bindComponent (Lorg/polyfrost/elementa/UIComponent;)V
	protected final fun getBoundComponent ()Lorg/polyfrost/elementa/UIComponent;
	protected final fun setBoundComponent (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setup ()V
}

public final class org/polyfrost/elementa/effects/OutlineEffect : org/polyfrost/elementa/effects/Effect {
	public fun <init> (Ljava/awt/Color;F)V
	public fun <init> (Ljava/awt/Color;FZ)V
	public fun <init> (Ljava/awt/Color;FZZ)V
	public fun <init> (Ljava/awt/Color;FZZLjava/util/Set;)V
	public synthetic fun <init> (Ljava/awt/Color;FZZLjava/util/Set;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;Z)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;ZZ)V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;ZZLjava/util/Set;)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;ZZLjava/util/Set;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun addSide (Lorg/polyfrost/elementa/effects/OutlineEffect$Side;)Lorg/polyfrost/elementa/effects/OutlineEffect;
	public fun afterDraw (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun beforeChildrenDraw (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun bindColor (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/effects/OutlineEffect;
	public final fun bindWidth (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/effects/OutlineEffect;
	public final fun getColor ()Ljava/awt/Color;
	public final fun getDrawAfterChildren ()Z
	public final fun getDrawInsideChildren ()Z
	public final fun getSides ()Ljava/util/Set;
	public final fun getWidth ()F
	public final fun removeSide (Lorg/polyfrost/elementa/effects/OutlineEffect$Side;)Lorg/polyfrost/elementa/effects/OutlineEffect;
	public final fun setColor (Ljava/awt/Color;)V
	public final fun setDrawAfterChildren (Z)V
	public final fun setDrawInsideChildren (Z)V
	public final fun setSides (Ljava/util/Set;)V
	public final fun setWidth (F)V
}

public final class org/polyfrost/elementa/effects/OutlineEffect$Side : java/lang/Enum {
	public static final field Bottom Lorg/polyfrost/elementa/effects/OutlineEffect$Side;
	public static final field Left Lorg/polyfrost/elementa/effects/OutlineEffect$Side;
	public static final field Right Lorg/polyfrost/elementa/effects/OutlineEffect$Side;
	public static final field Top Lorg/polyfrost/elementa/effects/OutlineEffect$Side;
	public static fun valueOf (Ljava/lang/String;)Lorg/polyfrost/elementa/effects/OutlineEffect$Side;
	public static fun values ()[Lorg/polyfrost/elementa/effects/OutlineEffect$Side;
}

public final class org/polyfrost/elementa/effects/RecursiveFadeEffect : org/polyfrost/elementa/effects/Effect {
	public fun <init> ()V
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun rebindIsOverridden (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/effects/RecursiveFadeEffect;
	public final fun rebindOverriddenAlphaPercentage (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/effects/RecursiveFadeEffect;
	public final fun remove ()V
	public fun setup ()V
}

public final class org/polyfrost/elementa/effects/ScissorEffect : org/polyfrost/elementa/effects/Effect {
	public static final field Companion Lorg/polyfrost/elementa/effects/ScissorEffect$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
	public fun <init> (Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Z)V
	public synthetic fun <init> (Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/polyfrost/elementa/UIComponent;)V
	public fun <init> (Lorg/polyfrost/elementa/UIComponent;Z)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/UIComponent;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun afterDraw (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun beforeDraw (Lorg/polyfrost/universal/UMatrixStack;)V
}

public final class org/polyfrost/elementa/effects/ScissorEffect$Companion {
	public final fun getCurrentScissorState ()Lorg/polyfrost/elementa/effects/ScissorEffect$ScissorState;
	public final fun setCurrentScissorState (Lorg/polyfrost/elementa/effects/ScissorEffect$ScissorState;)V
}

public final class org/polyfrost/elementa/effects/ScissorEffect$ScissorState {
	public fun <init> (IIII)V
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun component3 ()I
	public final fun component4 ()I
	public final fun copy (IIII)Lorg/polyfrost/elementa/effects/ScissorEffect$ScissorState;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/effects/ScissorEffect$ScissorState;IIIIILjava/lang/Object;)Lorg/polyfrost/elementa/effects/ScissorEffect$ScissorState;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeight ()I
	public final fun getWidth ()I
	public final fun getX ()I
	public final fun getY ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/effects/StencilEffect : org/polyfrost/elementa/effects/Effect {
	public static final field Companion Lorg/polyfrost/elementa/effects/StencilEffect$Companion;
	public fun <init> ()V
	public fun afterDraw (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun beforeChildrenDraw (Lorg/polyfrost/universal/UMatrixStack;)V
	public fun beforeDraw (Lorg/polyfrost/universal/UMatrixStack;)V
	public static final fun enableStencil ()V
}

public final class org/polyfrost/elementa/effects/StencilEffect$Companion {
	public final fun enableStencil ()V
}

public final class org/polyfrost/elementa/events/UIClickEvent : org/polyfrost/elementa/events/UIEvent {
	public fun <init> (FFILorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;I)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()I
	public final fun component4 ()Lorg/polyfrost/elementa/UIComponent;
	public final fun component5 ()Lorg/polyfrost/elementa/UIComponent;
	public final fun component6 ()I
	public final fun copy (FFILorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;I)Lorg/polyfrost/elementa/events/UIClickEvent;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/events/UIClickEvent;FFILorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;IILjava/lang/Object;)Lorg/polyfrost/elementa/events/UIClickEvent;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAbsoluteX ()F
	public final fun getAbsoluteY ()F
	public final fun getClickCount ()I
	public final fun getCurrentTarget ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getMouseButton ()I
	public final fun getRelativeX ()F
	public final fun getRelativeY ()F
	public final fun getTarget ()Lorg/polyfrost/elementa/UIComponent;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class org/polyfrost/elementa/events/UIEvent {
	public fun <init> ()V
	public final fun getPropagationStopped ()Z
	public final fun getPropagationStoppedImmediately ()Z
	public final fun setPropagationStopped (Z)V
	public final fun setPropagationStoppedImmediately (Z)V
	public final fun stopImmediatePropagation ()V
	public final fun stopPropagation ()V
}

public final class org/polyfrost/elementa/events/UIScrollEvent : org/polyfrost/elementa/events/UIEvent {
	public fun <init> (DLorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;)V
	public final fun component1 ()D
	public final fun component2 ()Lorg/polyfrost/elementa/UIComponent;
	public final fun component3 ()Lorg/polyfrost/elementa/UIComponent;
	public final fun copy (DLorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/events/UIScrollEvent;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/events/UIScrollEvent;DLorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/UIComponent;ILjava/lang/Object;)Lorg/polyfrost/elementa/events/UIScrollEvent;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCurrentTarget ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getDelta ()D
	public final fun getTarget ()Lorg/polyfrost/elementa/UIComponent;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/font/BasicFontRenderer : org/polyfrost/elementa/font/FontProvider {
	public fun <init> (Lorg/polyfrost/elementa/font/data/Font;)V
	public fun drawString (Lorg/polyfrost/universal/UMatrixStack;Ljava/lang/String;Ljava/awt/Color;FFFFZLjava/awt/Color;)V
	public fun getBaseLineHeight ()F
	public fun getBelowLineHeight ()F
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getCachedValue ()Lorg/polyfrost/elementa/font/FontProvider;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getLineHeight (F)F
	public fun getRecalculate ()Z
	public fun getShadowHeight ()F
	public fun getStringHeight (Ljava/lang/String;F)F
	public fun getStringWidth (Ljava/lang/String;F)F
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setCachedValue (Lorg/polyfrost/elementa/font/FontProvider;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/font/DefaultFonts {
	public static final field INSTANCE Lorg/polyfrost/elementa/font/DefaultFonts;
	public static final fun getELEMENTA_MINECRAFT_FONT_RENDERER ()Lorg/polyfrost/elementa/font/FontProvider;
	public static final fun getJETBRAINS_MONO_FONT_RENDERER ()Lorg/polyfrost/elementa/font/FontProvider;
	public static final fun getMINECRAFT_FIVE ()Lorg/polyfrost/elementa/font/FontProvider;
	public static final fun getVANILLA_FONT_RENDERER ()Lorg/polyfrost/elementa/font/FontProvider;
}

public final class org/polyfrost/elementa/font/ElementaFonts {
	public static final field INSTANCE Lorg/polyfrost/elementa/font/ElementaFonts;
	public static final fun getJETBRAINS_MONO ()Lorg/polyfrost/elementa/font/FontRenderer;
	public static final fun getMINECRAFT ()Lorg/polyfrost/elementa/font/FontRenderer;
	public static final fun getMINECRAFT_BOLD ()Lorg/polyfrost/elementa/font/FontRenderer;
	public static final fun getMINECRAFT_FIVE ()Lorg/polyfrost/elementa/font/BasicFontRenderer;
}

public abstract interface class org/polyfrost/elementa/font/FontProvider : org/polyfrost/elementa/constraints/SuperConstraint {
	public fun drawString (Ljava/lang/String;Ljava/awt/Color;FFFFZLjava/awt/Color;)V
	public fun drawString (Lorg/polyfrost/universal/UMatrixStack;Ljava/lang/String;Ljava/awt/Color;FFFFZLjava/awt/Color;)V
	public static synthetic fun drawString$default (Lorg/polyfrost/elementa/font/FontProvider;Ljava/lang/String;Ljava/awt/Color;FFFFZLjava/awt/Color;ILjava/lang/Object;)V
	public static synthetic fun drawString$default (Lorg/polyfrost/elementa/font/FontProvider;Lorg/polyfrost/universal/UMatrixStack;Ljava/lang/String;Ljava/awt/Color;FFFFZLjava/awt/Color;ILjava/lang/Object;)V
	public abstract fun getBaseLineHeight ()F
	public abstract fun getBelowLineHeight ()F
	public abstract fun getShadowHeight ()F
	public abstract fun getStringHeight (Ljava/lang/String;F)F
	public abstract fun getStringWidth (Ljava/lang/String;F)F
}

public final class org/polyfrost/elementa/font/FontProvider$DefaultImpls {
	public static fun animationFrame (Lorg/polyfrost/elementa/font/FontProvider;)V
	public static fun drawString (Lorg/polyfrost/elementa/font/FontProvider;Ljava/lang/String;Ljava/awt/Color;FFFFZLjava/awt/Color;)V
	public static fun drawString (Lorg/polyfrost/elementa/font/FontProvider;Lorg/polyfrost/universal/UMatrixStack;Ljava/lang/String;Ljava/awt/Color;FFFFZLjava/awt/Color;)V
	public static synthetic fun drawString$default (Lorg/polyfrost/elementa/font/FontProvider;Ljava/lang/String;Ljava/awt/Color;FFFFZLjava/awt/Color;ILjava/lang/Object;)V
	public static synthetic fun drawString$default (Lorg/polyfrost/elementa/font/FontProvider;Lorg/polyfrost/universal/UMatrixStack;Ljava/lang/String;Ljava/awt/Color;FFFFZLjava/awt/Color;ILjava/lang/Object;)V
	public static fun pauseIfSupported (Lorg/polyfrost/elementa/font/FontProvider;)V
	public static fun resumeIfSupported (Lorg/polyfrost/elementa/font/FontProvider;)V
	public static fun stopIfSupported (Lorg/polyfrost/elementa/font/FontProvider;)V
	public static fun to (Lorg/polyfrost/elementa/font/FontProvider;Lorg/polyfrost/elementa/UIComponent;)Lorg/polyfrost/elementa/constraints/SuperConstraint;
	public static fun visit (Lorg/polyfrost/elementa/font/FontProvider;Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;Z)V
}

public final class org/polyfrost/elementa/font/FontRenderer : org/polyfrost/elementa/font/FontProvider {
	public static final field Companion Lorg/polyfrost/elementa/font/FontRenderer$Companion;
	public fun <init> (Lorg/polyfrost/elementa/font/data/Font;Lorg/polyfrost/elementa/font/data/Font;)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/font/data/Font;Lorg/polyfrost/elementa/font/data/Font;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun drawString (Lorg/polyfrost/universal/UMatrixStack;Ljava/lang/String;Ljava/awt/Color;FFFFZLjava/awt/Color;)V
	public fun getBaseLineHeight ()F
	public fun getBelowLineHeight ()F
	public synthetic fun getCachedValue ()Ljava/lang/Object;
	public fun getCachedValue ()Lorg/polyfrost/elementa/font/FontProvider;
	public fun getConstrainTo ()Lorg/polyfrost/elementa/UIComponent;
	public final fun getLineHeight (F)F
	public fun getRecalculate ()Z
	public fun getShadowHeight ()F
	public fun getStringHeight (Ljava/lang/String;F)F
	public fun getStringWidth (Ljava/lang/String;F)F
	public synthetic fun setCachedValue (Ljava/lang/Object;)V
	public fun setCachedValue (Lorg/polyfrost/elementa/font/FontProvider;)V
	public fun setConstrainTo (Lorg/polyfrost/elementa/UIComponent;)V
	public fun setRecalculate (Z)V
	public fun visitImpl (Lorg/polyfrost/elementa/constraints/resolution/ConstraintVisitor;Lorg/polyfrost/elementa/constraints/ConstraintType;)V
}

public final class org/polyfrost/elementa/font/FontRenderer$Companion {
	public final fun areShadersInitialized ()Z
	public final fun initShaders ()V
}

public final class org/polyfrost/elementa/font/data/Atlas {
	public fun <init> (Ljava/lang/String;FFFFLjava/lang/String;FFF)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun component5 ()F
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()F
	public final fun component8 ()F
	public final fun component9 ()F
	public final fun copy (Ljava/lang/String;FFFFLjava/lang/String;FFF)Lorg/polyfrost/elementa/font/data/Atlas;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/font/data/Atlas;Ljava/lang/String;FFFFLjava/lang/String;FFFILjava/lang/Object;)Lorg/polyfrost/elementa/font/data/Atlas;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBaseCharHeight ()F
	public final fun getBelowLineHeight ()F
	public final fun getDistanceRange ()F
	public final fun getHeight ()F
	public final fun getShadowHeight ()F
	public final fun getSize ()F
	public final fun getType ()Ljava/lang/String;
	public final fun getWidth ()F
	public final fun getYOrigin ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/font/data/AtlasBounds {
	public fun <init> (FFFF)V
	public final fun copy (FFFF)Lorg/polyfrost/elementa/font/data/AtlasBounds;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/font/data/AtlasBounds;FFFFILjava/lang/Object;)Lorg/polyfrost/elementa/font/data/AtlasBounds;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBottom ()F
	public final fun getLeft ()F
	public final fun getRight ()F
	public final fun getTop ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/font/data/Font {
	public static final field Companion Lorg/polyfrost/elementa/font/data/Font$Companion;
	public fun <init> (Lorg/polyfrost/elementa/font/data/FontInfo;Ljava/io/InputStream;)V
	public final fun getFontInfo ()Lorg/polyfrost/elementa/font/data/FontInfo;
	public final fun getTexture ()Lorg/polyfrost/universal/utils/ReleasedDynamicTexture;
}

public final class org/polyfrost/elementa/font/data/Font$Companion {
	public final fun fromResource (Ljava/lang/String;)Lorg/polyfrost/elementa/font/data/Font;
}

public final class org/polyfrost/elementa/font/data/FontInfo {
	public static final field Companion Lorg/polyfrost/elementa/font/data/FontInfo$Companion;
	public fun <init> (Lorg/polyfrost/elementa/font/data/Atlas;Lorg/polyfrost/elementa/font/data/Metrics;Ljava/util/Map;)V
	public final fun component1 ()Lorg/polyfrost/elementa/font/data/Atlas;
	public final fun component2 ()Lorg/polyfrost/elementa/font/data/Metrics;
	public final fun component3 ()Ljava/util/Map;
	public final fun copy (Lorg/polyfrost/elementa/font/data/Atlas;Lorg/polyfrost/elementa/font/data/Metrics;Ljava/util/Map;)Lorg/polyfrost/elementa/font/data/FontInfo;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/font/data/FontInfo;Lorg/polyfrost/elementa/font/data/Atlas;Lorg/polyfrost/elementa/font/data/Metrics;Ljava/util/Map;ILjava/lang/Object;)Lorg/polyfrost/elementa/font/data/FontInfo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAtlas ()Lorg/polyfrost/elementa/font/data/Atlas;
	public final fun getGlyphs ()Ljava/util/Map;
	public final fun getMetrics ()Lorg/polyfrost/elementa/font/data/Metrics;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/font/data/FontInfo$Companion {
	public final fun fromJson (Lcom/google/gson/JsonObject;)Lorg/polyfrost/elementa/font/data/FontInfo;
}

public final class org/polyfrost/elementa/font/data/Glyph {
	public fun <init> (IFLorg/polyfrost/elementa/font/data/PlaneBounds;Lorg/polyfrost/elementa/font/data/AtlasBounds;)V
	public synthetic fun <init> (IFLorg/polyfrost/elementa/font/data/PlaneBounds;Lorg/polyfrost/elementa/font/data/AtlasBounds;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAdvance ()F
	public final fun getAtlasBounds ()Lorg/polyfrost/elementa/font/data/AtlasBounds;
	public final fun getPlaneBounds ()Lorg/polyfrost/elementa/font/data/PlaneBounds;
	public final fun getUnicode ()I
}

public final class org/polyfrost/elementa/font/data/Metrics {
	public fun <init> (FFFFF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun component5 ()F
	public final fun copy (FFFFF)Lorg/polyfrost/elementa/font/data/Metrics;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/font/data/Metrics;FFFFFILjava/lang/Object;)Lorg/polyfrost/elementa/font/data/Metrics;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAscender ()F
	public final fun getDescender ()F
	public final fun getLineHeight ()F
	public final fun getUnderlineThickness ()F
	public final fun getUnderlineY ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/font/data/PlaneBounds {
	public fun <init> (FFFF)V
	public final fun copy (FFFF)Lorg/polyfrost/elementa/font/data/PlaneBounds;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/font/data/PlaneBounds;FFFFILjava/lang/Object;)Lorg/polyfrost/elementa/font/data/PlaneBounds;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBottom ()F
	public final fun getLeft ()F
	public final fun getRight ()F
	public final fun getTop ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/BlockquoteConfig {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FF)V
	public fun <init> (FFF)V
	public fun <init> (FFFF)V
	public fun <init> (FFFFF)V
	public fun <init> (FFFFFF)V
	public fun <init> (FFFFFFLjava/awt/Color;)V
	public fun <init> (FFFFFFLjava/awt/Color;F)V
	public fun <init> (FFFFFFLjava/awt/Color;FZ)V
	public synthetic fun <init> (FFFFFFLjava/awt/Color;FZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun component5 ()F
	public final fun component6 ()F
	public final fun component7 ()Ljava/awt/Color;
	public final fun component8 ()F
	public final fun component9 ()Z
	public final fun copy (FFFFFFLjava/awt/Color;FZ)Lorg/polyfrost/elementa/markdown/BlockquoteConfig;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/BlockquoteConfig;FFFFFFLjava/awt/Color;FZILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/BlockquoteConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDividerColor ()Ljava/awt/Color;
	public final fun getDividerPaddingBottom ()F
	public final fun getDividerPaddingTop ()F
	public final fun getDividerWidth ()F
	public final fun getEnabled ()Z
	public final fun getSpaceAfterBlockquote ()F
	public final fun getSpaceAfterDivider ()F
	public final fun getSpaceBeforeBlockquote ()F
	public final fun getSpaceBeforeDivider ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/CodeBlockConfig {
	public fun <init> ()V
	public fun <init> (Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;F)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FF)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFF)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFFF)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFFFF)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFFFFF)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFFFFFF)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFFFFFFF)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFFFFFFFZ)V
	public synthetic fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFFFFFFFZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/awt/Color;
	public final fun component10 ()F
	public final fun component11 ()F
	public final fun component12 ()Z
	public final fun component2 ()Ljava/awt/Color;
	public final fun component3 ()Ljava/awt/Color;
	public final fun component4 ()F
	public final fun component5 ()F
	public final fun component6 ()F
	public final fun component7 ()F
	public final fun component8 ()F
	public final fun component9 ()F
	public final fun copy (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFFFFFFFZ)Lorg/polyfrost/elementa/markdown/CodeBlockConfig;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/CodeBlockConfig;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFFFFFFFZILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/CodeBlockConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBackgroundColor ()Ljava/awt/Color;
	public final fun getBottomMargin ()F
	public final fun getBottomPadding ()F
	public final fun getCornerRadius ()F
	public final fun getEnabled ()Z
	public final fun getFontColor ()Ljava/awt/Color;
	public final fun getLeftPadding ()F
	public final fun getOutlineColor ()Ljava/awt/Color;
	public final fun getOutlineWidth ()F
	public final fun getRightPadding ()F
	public final fun getTopMargin ()F
	public final fun getTopPadding ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/DrawState {
	public fun <init> (FF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun copy (FF)Lorg/polyfrost/elementa/markdown/DrawState;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/DrawState;FFILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/DrawState;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getXShift ()F
	public final fun getYShift ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/HeaderConfig {
	public fun <init> ()V
	public fun <init> (Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;)V
	public fun <init> (Ljava/awt/Color;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;)V
	public fun <init> (Ljava/awt/Color;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;)V
	public fun <init> (Ljava/awt/Color;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;)V
	public fun <init> (Ljava/awt/Color;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;)V
	public fun <init> (Ljava/awt/Color;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;)V
	public fun <init> (Ljava/awt/Color;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Z)V
	public synthetic fun <init> (Ljava/awt/Color;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/awt/Color;
	public final fun component2 ()Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;
	public final fun component3 ()Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;
	public final fun component4 ()Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;
	public final fun component5 ()Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;
	public final fun component6 ()Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;
	public final fun component7 ()Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;
	public final fun component8 ()Z
	public final fun copy (Ljava/awt/Color;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Z)Lorg/polyfrost/elementa/markdown/HeaderConfig;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/HeaderConfig;Ljava/awt/Color;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;ZILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/HeaderConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEnabled ()Z
	public final fun getFontColor ()Ljava/awt/Color;
	public final fun getLevel1 ()Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;
	public final fun getLevel2 ()Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;
	public final fun getLevel3 ()Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;
	public final fun getLevel4 ()Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;
	public final fun getLevel5 ()Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;
	public final fun getLevel6 ()Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/HeaderLevelConfig {
	public fun <init> ()V
	public fun <init> (Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;F)V
	public fun <init> (Ljava/awt/Color;FF)V
	public fun <init> (Ljava/awt/Color;FFF)V
	public fun <init> (Ljava/awt/Color;FFFZ)V
	public fun <init> (Ljava/awt/Color;FFFZLjava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;FFFZLjava/awt/Color;F)V
	public fun <init> (Ljava/awt/Color;FFFZLjava/awt/Color;FF)V
	public synthetic fun <init> (Ljava/awt/Color;FFFZLjava/awt/Color;FFILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/awt/Color;
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun component5 ()Z
	public final fun component6 ()Ljava/awt/Color;
	public final fun component7 ()F
	public final fun component8 ()F
	public final fun copy (Ljava/awt/Color;FFFZLjava/awt/Color;FF)Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;Ljava/awt/Color;FFFZLjava/awt/Color;FFILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/HeaderLevelConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDividerColor ()Ljava/awt/Color;
	public final fun getDividerWidth ()F
	public final fun getFontColor ()Ljava/awt/Color;
	public final fun getHasDivider ()Z
	public final fun getSpaceBeforeDivider ()F
	public final fun getTextScale ()F
	public final fun getVerticalSpaceAfter ()F
	public final fun getVerticalSpaceBefore ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/InlineCodeConfig {
	public fun <init> ()V
	public fun <init> (Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;F)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FF)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFF)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFFF)V
	public fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFFFZ)V
	public synthetic fun <init> (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFFFZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/awt/Color;
	public final fun component2 ()Ljava/awt/Color;
	public final fun component3 ()Ljava/awt/Color;
	public final fun component4 ()F
	public final fun component5 ()F
	public final fun component6 ()F
	public final fun component7 ()F
	public final fun component8 ()Z
	public final fun copy (Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFFFZ)Lorg/polyfrost/elementa/markdown/InlineCodeConfig;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/InlineCodeConfig;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;FFFFZILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/InlineCodeConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBackgroundColor ()Ljava/awt/Color;
	public final fun getCornerRadius ()F
	public final fun getEnabled ()Z
	public final fun getFontColor ()Ljava/awt/Color;
	public final fun getHorizontalPadding ()F
	public final fun getOutlineColor ()Ljava/awt/Color;
	public final fun getOutlineWidth ()F
	public final fun getVerticalPadding ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/ListConfig {
	public fun <init> ()V
	public fun <init> (Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;F)V
	public fun <init> (Ljava/awt/Color;FF)V
	public fun <init> (Ljava/awt/Color;FFF)V
	public fun <init> (Ljava/awt/Color;FFFF)V
	public fun <init> (Ljava/awt/Color;FFFFF)V
	public fun <init> (Ljava/awt/Color;FFFFFF)V
	public fun <init> (Ljava/awt/Color;FFFFFFLjava/lang/String;)V
	public fun <init> (Ljava/awt/Color;FFFFFFLjava/lang/String;Z)V
	public synthetic fun <init> (Ljava/awt/Color;FFFFFFLjava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/awt/Color;
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun component5 ()F
	public final fun component6 ()F
	public final fun component7 ()F
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()Z
	public final fun copy (Ljava/awt/Color;FFFFFFLjava/lang/String;Z)Lorg/polyfrost/elementa/markdown/ListConfig;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/ListConfig;Ljava/awt/Color;FFFFFFLjava/lang/String;ZILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/ListConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getElementSpacingLoose ()F
	public final fun getElementSpacingTight ()F
	public final fun getEnabled ()Z
	public final fun getFontColor ()Ljava/awt/Color;
	public final fun getIndentation ()F
	public final fun getSpaceAfterList ()F
	public final fun getSpaceBeforeList ()F
	public final fun getSpaceBeforeText ()F
	public final fun getUnorderedSymbols ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/MarkdownComponent : org/polyfrost/elementa/UIComponent {
	public static final field Companion Lorg/polyfrost/elementa/markdown/MarkdownComponent$Companion;
	public static final field DEBUG Z
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Lorg/polyfrost/elementa/markdown/MarkdownConfig;)V
	public fun <init> (Ljava/lang/String;Lorg/polyfrost/elementa/markdown/MarkdownConfig;F)V
	public fun <init> (Ljava/lang/String;Lorg/polyfrost/elementa/markdown/MarkdownConfig;FLorg/polyfrost/elementa/font/FontProvider;)V
	public synthetic fun <init> (Ljava/lang/String;Lorg/polyfrost/elementa/markdown/MarkdownConfig;FLorg/polyfrost/elementa/font/FontProvider;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Lorg/polyfrost/elementa/markdown/MarkdownConfig;FLorg/polyfrost/elementa/font/FontProvider;Z)V
	public synthetic fun <init> (Ljava/lang/String;Lorg/polyfrost/elementa/markdown/MarkdownConfig;FLorg/polyfrost/elementa/font/FontProvider;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun animationFrame ()V
	public final fun bindText (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/markdown/MarkdownComponent;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;)V
	public final fun getConfig ()Lorg/polyfrost/elementa/markdown/MarkdownConfig;
	public final fun getDrawables ()Lorg/polyfrost/elementa/markdown/drawables/DrawableList;
	public final fun getMaxTextLineWidth ()F
	public final fun getSectionOffsets ()Ljava/util/Map;
	public final fun layout ()V
	public final fun onLinkClicked (Lkotlin/jvm/functions/Function2;)V
	public final fun setMaxHeight (Lorg/polyfrost/elementa/constraints/HeightConstraint;)Lorg/polyfrost/elementa/markdown/MarkdownComponent;
	public final fun updateConfig (Lorg/polyfrost/elementa/markdown/MarkdownConfig;)V
}

public final class org/polyfrost/elementa/markdown/MarkdownComponent$Companion {
}

public final class org/polyfrost/elementa/markdown/MarkdownComponent$ConstraintValues {
	public fun <init> (FF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun copy (FF)Lorg/polyfrost/elementa/markdown/MarkdownComponent$ConstraintValues;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/MarkdownComponent$ConstraintValues;FFILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/MarkdownComponent$ConstraintValues;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getTextScale ()F
	public final fun getWidth ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/MarkdownComponent$LinkClickEvent : org/polyfrost/elementa/events/UIEvent {
	public final fun getUrl ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/MarkdownConfig {
	public fun <init> ()V
	public fun <init> (Lorg/polyfrost/elementa/markdown/HeaderConfig;)V
	public fun <init> (Lorg/polyfrost/elementa/markdown/HeaderConfig;Lorg/polyfrost/elementa/markdown/ListConfig;)V
	public fun <init> (Lorg/polyfrost/elementa/markdown/HeaderConfig;Lorg/polyfrost/elementa/markdown/ListConfig;Lorg/polyfrost/elementa/markdown/ParagraphConfig;)V
	public fun <init> (Lorg/polyfrost/elementa/markdown/HeaderConfig;Lorg/polyfrost/elementa/markdown/ListConfig;Lorg/polyfrost/elementa/markdown/ParagraphConfig;Lorg/polyfrost/elementa/markdown/TextConfig;)V
	public fun <init> (Lorg/polyfrost/elementa/markdown/HeaderConfig;Lorg/polyfrost/elementa/markdown/ListConfig;Lorg/polyfrost/elementa/markdown/ParagraphConfig;Lorg/polyfrost/elementa/markdown/TextConfig;Lorg/polyfrost/elementa/markdown/BlockquoteConfig;)V
	public fun <init> (Lorg/polyfrost/elementa/markdown/HeaderConfig;Lorg/polyfrost/elementa/markdown/ListConfig;Lorg/polyfrost/elementa/markdown/ParagraphConfig;Lorg/polyfrost/elementa/markdown/TextConfig;Lorg/polyfrost/elementa/markdown/BlockquoteConfig;Lorg/polyfrost/elementa/markdown/InlineCodeConfig;)V
	public fun <init> (Lorg/polyfrost/elementa/markdown/HeaderConfig;Lorg/polyfrost/elementa/markdown/ListConfig;Lorg/polyfrost/elementa/markdown/ParagraphConfig;Lorg/polyfrost/elementa/markdown/TextConfig;Lorg/polyfrost/elementa/markdown/BlockquoteConfig;Lorg/polyfrost/elementa/markdown/InlineCodeConfig;Lorg/polyfrost/elementa/markdown/CodeBlockConfig;)V
	public fun <init> (Lorg/polyfrost/elementa/markdown/HeaderConfig;Lorg/polyfrost/elementa/markdown/ListConfig;Lorg/polyfrost/elementa/markdown/ParagraphConfig;Lorg/polyfrost/elementa/markdown/TextConfig;Lorg/polyfrost/elementa/markdown/BlockquoteConfig;Lorg/polyfrost/elementa/markdown/InlineCodeConfig;Lorg/polyfrost/elementa/markdown/CodeBlockConfig;Lorg/polyfrost/elementa/markdown/URLConfig;)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/markdown/HeaderConfig;Lorg/polyfrost/elementa/markdown/ListConfig;Lorg/polyfrost/elementa/markdown/ParagraphConfig;Lorg/polyfrost/elementa/markdown/TextConfig;Lorg/polyfrost/elementa/markdown/BlockquoteConfig;Lorg/polyfrost/elementa/markdown/InlineCodeConfig;Lorg/polyfrost/elementa/markdown/CodeBlockConfig;Lorg/polyfrost/elementa/markdown/URLConfig;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/polyfrost/elementa/markdown/HeaderConfig;
	public final fun component2 ()Lorg/polyfrost/elementa/markdown/ListConfig;
	public final fun component3 ()Lorg/polyfrost/elementa/markdown/ParagraphConfig;
	public final fun component4 ()Lorg/polyfrost/elementa/markdown/TextConfig;
	public final fun component5 ()Lorg/polyfrost/elementa/markdown/BlockquoteConfig;
	public final fun component6 ()Lorg/polyfrost/elementa/markdown/InlineCodeConfig;
	public final fun component7 ()Lorg/polyfrost/elementa/markdown/CodeBlockConfig;
	public final fun component8 ()Lorg/polyfrost/elementa/markdown/URLConfig;
	public final fun copy (Lorg/polyfrost/elementa/markdown/HeaderConfig;Lorg/polyfrost/elementa/markdown/ListConfig;Lorg/polyfrost/elementa/markdown/ParagraphConfig;Lorg/polyfrost/elementa/markdown/TextConfig;Lorg/polyfrost/elementa/markdown/BlockquoteConfig;Lorg/polyfrost/elementa/markdown/InlineCodeConfig;Lorg/polyfrost/elementa/markdown/CodeBlockConfig;Lorg/polyfrost/elementa/markdown/URLConfig;)Lorg/polyfrost/elementa/markdown/MarkdownConfig;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/MarkdownConfig;Lorg/polyfrost/elementa/markdown/HeaderConfig;Lorg/polyfrost/elementa/markdown/ListConfig;Lorg/polyfrost/elementa/markdown/ParagraphConfig;Lorg/polyfrost/elementa/markdown/TextConfig;Lorg/polyfrost/elementa/markdown/BlockquoteConfig;Lorg/polyfrost/elementa/markdown/InlineCodeConfig;Lorg/polyfrost/elementa/markdown/CodeBlockConfig;Lorg/polyfrost/elementa/markdown/URLConfig;ILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/MarkdownConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBlockquoteConfig ()Lorg/polyfrost/elementa/markdown/BlockquoteConfig;
	public final fun getCodeBlockConfig ()Lorg/polyfrost/elementa/markdown/CodeBlockConfig;
	public final fun getHeaderConfig ()Lorg/polyfrost/elementa/markdown/HeaderConfig;
	public final fun getInlineCodeConfig ()Lorg/polyfrost/elementa/markdown/InlineCodeConfig;
	public final fun getListConfig ()Lorg/polyfrost/elementa/markdown/ListConfig;
	public final fun getParagraphConfig ()Lorg/polyfrost/elementa/markdown/ParagraphConfig;
	public final fun getTextConfig ()Lorg/polyfrost/elementa/markdown/TextConfig;
	public final fun getUrlConfig ()Lorg/polyfrost/elementa/markdown/URLConfig;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/MarkdownRenderer {
	public fun <init> (Ljava/lang/String;Lorg/polyfrost/elementa/markdown/MarkdownComponent;)V
	public fun <init> (Ljava/lang/String;Lorg/polyfrost/elementa/markdown/MarkdownComponent;Lorg/polyfrost/elementa/markdown/MarkdownConfig;)V
	public synthetic fun <init> (Ljava/lang/String;Lorg/polyfrost/elementa/markdown/MarkdownComponent;Lorg/polyfrost/elementa/markdown/MarkdownConfig;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun render ()Lorg/polyfrost/elementa/markdown/drawables/DrawableList;
}

public final class org/polyfrost/elementa/markdown/ParagraphConfig {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FF)V
	public fun <init> (FFF)V
	public fun <init> (FFFZ)V
	public fun <init> (FFFZZ)V
	public synthetic fun <init> (FFFZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun copy (FFFZZ)Lorg/polyfrost/elementa/markdown/ParagraphConfig;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/ParagraphConfig;FFFZZILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/ParagraphConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCentered ()Z
	public final fun getSoftBreakIsNewline ()Z
	public final fun getSpaceAfter ()F
	public final fun getSpaceBefore ()F
	public final fun getSpaceBetweenLines ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/TextConfig {
	public fun <init> ()V
	public fun <init> (Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;Z)V
	public fun <init> (Ljava/awt/Color;ZLjava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Z)V
	public synthetic fun <init> (Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/awt/Color;
	public final fun component2 ()Z
	public final fun component3 ()Ljava/awt/Color;
	public final fun component4 ()Ljava/awt/Color;
	public final fun component5 ()Ljava/awt/Color;
	public final fun component6 ()Ljava/awt/Color;
	public final fun component7 ()Z
	public final fun copy (Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Z)Lorg/polyfrost/elementa/markdown/TextConfig;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/TextConfig;Ljava/awt/Color;ZLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;ZILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/TextConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColor ()Ljava/awt/Color;
	public final fun getHasShadow ()Z
	public final fun getLinkColor ()Ljava/awt/Color;
	public final fun getSelectionBackgroundColor ()Ljava/awt/Color;
	public final fun getSelectionForegroundColor ()Ljava/awt/Color;
	public final fun getShadowColor ()Ljava/awt/Color;
	public final fun getUnderlineHoveredLink ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/URLConfig {
	public fun <init> ()V
	public fun <init> (Ljava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;Z)V
	public fun <init> (Ljava/awt/Color;ZLjava/awt/Color;)V
	public fun <init> (Ljava/awt/Color;ZLjava/awt/Color;F)V
	public fun <init> (Ljava/awt/Color;ZLjava/awt/Color;FF)V
	public fun <init> (Ljava/awt/Color;ZLjava/awt/Color;FFZ)V
	public synthetic fun <init> (Ljava/awt/Color;ZLjava/awt/Color;FFZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/awt/Color;
	public final fun component2 ()Z
	public final fun component3 ()Ljava/awt/Color;
	public final fun component4 ()F
	public final fun component5 ()F
	public final fun component6 ()Z
	public final fun copy (Ljava/awt/Color;ZLjava/awt/Color;FFZ)Lorg/polyfrost/elementa/markdown/URLConfig;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/URLConfig;Ljava/awt/Color;ZLjava/awt/Color;FFZILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/URLConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBarColor ()Ljava/awt/Color;
	public final fun getBarWidth ()F
	public final fun getEnabled ()Z
	public final fun getFontColor ()Ljava/awt/Color;
	public final fun getShowBarOnHover ()Z
	public final fun getSpaceBeforeBar ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/drawables/BlockquoteDrawable : org/polyfrost/elementa/markdown/drawables/Drawable {
	public fun <init> (Lorg/polyfrost/elementa/markdown/MarkdownComponent;Lorg/polyfrost/elementa/markdown/drawables/DrawableList;)V
	public fun cursorAt (FFZI)Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtEnd ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtStart ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/DrawState;)V
	public fun getChildren ()Ljava/util/List;
	public final fun getDrawables ()Lorg/polyfrost/elementa/markdown/drawables/DrawableList;
	public final fun getMaxTextLineWidth ()F
	public fun selectedText (Z)Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/drawables/CodeBlockDrawable : org/polyfrost/elementa/markdown/drawables/Drawable {
	public fun <init> (Lorg/polyfrost/elementa/markdown/MarkdownComponent;)V
	public fun cursorAt (FFZI)Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtEnd ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtStart ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/DrawState;)V
	public fun selectedText (Z)Ljava/lang/String;
}

public abstract class org/polyfrost/elementa/markdown/drawables/Drawable {
	public static final field Companion Lorg/polyfrost/elementa/markdown/drawables/Drawable$Companion;
	public field layout Lorg/polyfrost/elementa/markdown/drawables/Drawable$Layout;
	public fun <init> (Lorg/polyfrost/elementa/markdown/MarkdownComponent;)V
	public fun beforeDraw (Lorg/polyfrost/elementa/markdown/DrawState;)V
	public abstract fun cursorAt (FFZI)Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public abstract fun cursorAtEnd ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public abstract fun cursorAtStart ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun draw (Lorg/polyfrost/elementa/markdown/DrawState;)V
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/DrawState;)V
	public final fun drawCompat (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/DrawState;)V
	public fun getChildren ()Ljava/util/List;
	public final fun getConfig ()Lorg/polyfrost/elementa/markdown/MarkdownConfig;
	public final fun getHeight ()F
	public final fun getInsertSpaceAfter ()Z
	public final fun getInsertSpaceBefore ()Z
	public final fun getLayout ()Lorg/polyfrost/elementa/markdown/drawables/Drawable$Layout;
	public final fun getMargin ()Lorg/polyfrost/elementa/markdown/drawables/Drawable$Margin;
	public final fun getMd ()Lorg/polyfrost/elementa/markdown/MarkdownComponent;
	public final fun getNext ()Lorg/polyfrost/elementa/markdown/drawables/Drawable;
	public final fun getParent ()Lorg/polyfrost/elementa/markdown/drawables/Drawable;
	public final fun getPrevious ()Lorg/polyfrost/elementa/markdown/drawables/Drawable;
	public final fun getWidth ()F
	public final fun getX ()F
	public final fun getY ()F
	public fun hasSelectedText ()Z
	public final fun isHovered (FF)Z
	public final fun layout (FFF)Lorg/polyfrost/elementa/markdown/drawables/Drawable$Layout;
	protected abstract fun layoutImpl (FFF)Lorg/polyfrost/elementa/markdown/drawables/Drawable$Layout;
	public abstract fun selectedText (Z)Ljava/lang/String;
	public final fun setHeight (F)V
	public final fun setInsertSpaceAfter (Z)V
	public final fun setInsertSpaceBefore (Z)V
	public final fun setLayout (Lorg/polyfrost/elementa/markdown/drawables/Drawable$Layout;)V
	public final fun setMargin (Lorg/polyfrost/elementa/markdown/drawables/Drawable$Margin;)V
	public final fun setNext (Lorg/polyfrost/elementa/markdown/drawables/Drawable;)V
	public final fun setParent (Lorg/polyfrost/elementa/markdown/drawables/Drawable;)V
	public final fun setPrevious (Lorg/polyfrost/elementa/markdown/drawables/Drawable;)V
	public final fun setWidth (F)V
	public final fun setX (F)V
	public final fun setY (F)V
}

public final class org/polyfrost/elementa/markdown/drawables/Drawable$Companion {
	public final fun trim (Ljava/util/List;)V
	public final fun trim (Lorg/polyfrost/elementa/markdown/drawables/Drawable;)V
	public final fun trim (Lorg/polyfrost/elementa/markdown/drawables/DrawableList;)V
}

public final class org/polyfrost/elementa/markdown/drawables/Drawable$Layout {
	public fun <init> (FFFFLorg/polyfrost/elementa/markdown/drawables/Drawable$Margin;)V
	public synthetic fun <init> (FFFFLorg/polyfrost/elementa/markdown/drawables/Drawable$Margin;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun component5 ()Lorg/polyfrost/elementa/markdown/drawables/Drawable$Margin;
	public final fun copy (FFFFLorg/polyfrost/elementa/markdown/drawables/Drawable$Margin;)Lorg/polyfrost/elementa/markdown/drawables/Drawable$Layout;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/drawables/Drawable$Layout;FFFFLorg/polyfrost/elementa/markdown/drawables/Drawable$Margin;ILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/drawables/Drawable$Layout;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBottom ()F
	public final fun getElementBottom ()F
	public final fun getElementHeight ()F
	public final fun getElementLeft ()F
	public final fun getElementRight ()F
	public final fun getElementTop ()F
	public final fun getElementWidth ()F
	public final fun getHeight ()F
	public final fun getLeft ()F
	public final fun getMargin ()Lorg/polyfrost/elementa/markdown/drawables/Drawable$Margin;
	public final fun getRight ()F
	public final fun getTop ()F
	public final fun getWidth ()F
	public final fun getX ()F
	public final fun getY ()F
	public fun hashCode ()I
	public final fun setHeight (F)V
	public final fun setMargin (Lorg/polyfrost/elementa/markdown/drawables/Drawable$Margin;)V
	public final fun setWidth (F)V
	public final fun setX (F)V
	public final fun setY (F)V
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/drawables/Drawable$Margin {
	public fun <init> ()V
	public fun <init> (FFFF)V
	public synthetic fun <init> (FFFFILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun copy (FFFF)Lorg/polyfrost/elementa/markdown/drawables/Drawable$Margin;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/drawables/Drawable$Margin;FFFFILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/drawables/Drawable$Margin;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBottom ()F
	public final fun getLeft ()F
	public final fun getRight ()F
	public final fun getTop ()F
	public fun hashCode ()I
	public final fun setBottom (F)V
	public final fun setLeft (F)V
	public final fun setRight (F)V
	public final fun setTop (F)V
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/drawables/DrawableKt {
	public static final fun lazy (Lkotlin/jvm/functions/Function0;)Lorg/polyfrost/elementa/markdown/drawables/LazyPropertyDelegate;
}

public final class org/polyfrost/elementa/markdown/drawables/DrawableList : org/polyfrost/elementa/markdown/drawables/Drawable, java/util/List, kotlin/jvm/internal/markers/KMappedMarker {
	public fun <init> (Lorg/polyfrost/elementa/markdown/MarkdownComponent;Ljava/util/List;)V
	public synthetic fun add (ILjava/lang/Object;)V
	public fun add (ILorg/polyfrost/elementa/markdown/drawables/Drawable;)V
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun add (Lorg/polyfrost/elementa/markdown/drawables/Drawable;)Z
	public fun addAll (ILjava/util/Collection;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun clear ()V
	public final fun contains (Ljava/lang/Object;)Z
	public fun contains (Lorg/polyfrost/elementa/markdown/drawables/Drawable;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun cursorAt (FFZI)Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtEnd ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtStart ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/DrawState;)V
	public synthetic fun get (I)Ljava/lang/Object;
	public fun get (I)Lorg/polyfrost/elementa/markdown/drawables/Drawable;
	public fun getChildren ()Ljava/util/List;
	public fun getSize ()I
	public final fun indexOf (Ljava/lang/Object;)I
	public fun indexOf (Lorg/polyfrost/elementa/markdown/drawables/Drawable;)I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public final fun lastIndexOf (Ljava/lang/Object;)I
	public fun lastIndexOf (Lorg/polyfrost/elementa/markdown/drawables/Drawable;)I
	public fun listIterator ()Ljava/util/ListIterator;
	public fun listIterator (I)Ljava/util/ListIterator;
	public synthetic fun remove (I)Ljava/lang/Object;
	public fun remove (I)Lorg/polyfrost/elementa/markdown/drawables/Drawable;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun replaceAll (Ljava/util/function/UnaryOperator;)V
	public fun retainAll (Ljava/util/Collection;)Z
	public fun selectedText (Z)Ljava/lang/String;
	public synthetic fun set (ILjava/lang/Object;)Ljava/lang/Object;
	public fun set (ILorg/polyfrost/elementa/markdown/drawables/Drawable;)Lorg/polyfrost/elementa/markdown/drawables/Drawable;
	public final fun setDrawables (Ljava/util/List;)V
	public final fun size ()I
	public fun sort (Ljava/util/Comparator;)V
	public fun subList (II)Ljava/util/List;
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

public final class org/polyfrost/elementa/markdown/drawables/DrawableList$Direction : java/lang/Enum {
	public static final field Down Lorg/polyfrost/elementa/markdown/drawables/DrawableList$Direction;
	public static final field Left Lorg/polyfrost/elementa/markdown/drawables/DrawableList$Direction;
	public static final field Right Lorg/polyfrost/elementa/markdown/drawables/DrawableList$Direction;
	public static final field Up Lorg/polyfrost/elementa/markdown/drawables/DrawableList$Direction;
	public static fun valueOf (Ljava/lang/String;)Lorg/polyfrost/elementa/markdown/drawables/DrawableList$Direction;
	public static fun values ()[Lorg/polyfrost/elementa/markdown/drawables/DrawableList$Direction;
}

public final class org/polyfrost/elementa/markdown/drawables/HardBreakDrawable : org/polyfrost/elementa/markdown/drawables/Drawable {
	public fun <init> (Lorg/polyfrost/elementa/markdown/MarkdownComponent;)V
	public fun cursorAt (FFZI)Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtEnd ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtStart ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/DrawState;)V
	public fun selectedText (Z)Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/drawables/HeaderDrawable : org/polyfrost/elementa/markdown/drawables/Drawable {
	public fun <init> (Lorg/polyfrost/elementa/markdown/MarkdownComponent;ILorg/polyfrost/elementa/markdown/drawables/ParagraphDrawable;)V
	public fun cursorAt (FFZI)Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtEnd ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtStart ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/DrawState;)V
	public fun getChildren ()Ljava/util/List;
	public final fun getDividerWidth ()Ljava/lang/Double;
	public fun selectedText (Z)Ljava/lang/String;
	public final fun setDividerWidth (Ljava/lang/Double;)V
}

public final class org/polyfrost/elementa/markdown/drawables/ImageDrawable : org/polyfrost/elementa/markdown/drawables/Drawable {
	public fun <init> (Lorg/polyfrost/elementa/markdown/MarkdownComponent;Ljava/net/URL;Lorg/polyfrost/elementa/markdown/drawables/Drawable;)V
	public fun beforeDraw (Lorg/polyfrost/elementa/markdown/DrawState;)V
	public fun cursorAt (FFZI)Ljava/lang/Void;
	public synthetic fun cursorAt (FFZI)Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public synthetic fun cursorAtEnd ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtEnd ()Lorg/polyfrost/elementa/markdown/selection/ImageCursor;
	public synthetic fun cursorAtStart ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtStart ()Lorg/polyfrost/elementa/markdown/selection/ImageCursor;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/DrawState;)V
	public final fun getSelected ()Z
	public final fun getUrl ()Ljava/net/URL;
	public fun hasSelectedText ()Z
	public fun selectedText (Z)Ljava/lang/String;
	public final fun setSelected (Z)V
}

public final class org/polyfrost/elementa/markdown/drawables/LazyPropertyDelegate {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun getValue (Lorg/polyfrost/elementa/markdown/drawables/Drawable;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public final fun setValue (Lorg/polyfrost/elementa/markdown/drawables/Drawable;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class org/polyfrost/elementa/markdown/drawables/ListDrawable : org/polyfrost/elementa/markdown/drawables/Drawable {
	public fun <init> (Lorg/polyfrost/elementa/markdown/MarkdownComponent;Lorg/polyfrost/elementa/markdown/drawables/DrawableList;ZZ)V
	public fun cursorAt (FFZI)Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtEnd ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtStart ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/DrawState;)V
	public fun getChildren ()Ljava/util/List;
	public final fun getMaxTextLineWidth ()F
	public fun selectedText (Z)Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/drawables/ListDrawable$ListEntry : org/polyfrost/elementa/markdown/drawables/Drawable {
	public fun <init> (Lorg/polyfrost/elementa/markdown/drawables/ListDrawable;Lorg/polyfrost/elementa/markdown/MarkdownComponent;Ljava/lang/String;FFLorg/polyfrost/elementa/markdown/drawables/Drawable;)V
	public fun cursorAt (FFZI)Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtEnd ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtStart ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/DrawState;)V
	public fun getChildren ()Ljava/util/List;
	public final fun getDrawable ()Lorg/polyfrost/elementa/markdown/drawables/Drawable;
	public fun selectedText (Z)Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/drawables/ParagraphDrawable : org/polyfrost/elementa/markdown/drawables/Drawable {
	public fun <init> (Lorg/polyfrost/elementa/markdown/MarkdownComponent;Lorg/polyfrost/elementa/markdown/drawables/DrawableList;)V
	public fun cursorAt (FFZI)Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtEnd ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtStart ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/DrawState;)V
	public fun getChildren ()Ljava/util/List;
	public final fun getDrawables ()Lorg/polyfrost/elementa/markdown/drawables/DrawableList;
	public final fun getMaxTextLineWidth ()F
	public final fun getScaleModifier ()F
	public final fun getTextDrawables ()Ljava/util/List;
	public fun selectedText (Z)Ljava/lang/String;
	public final fun setScaleModifier (F)V
}

public final class org/polyfrost/elementa/markdown/drawables/SoftBreakDrawable : org/polyfrost/elementa/markdown/drawables/Drawable {
	public fun <init> (Lorg/polyfrost/elementa/markdown/MarkdownComponent;)V
	public fun cursorAt (FFZI)Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtEnd ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtStart ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/DrawState;)V
	public fun selectedText (Z)Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/drawables/TextDrawable : org/polyfrost/elementa/markdown/drawables/Drawable {
	public static final field Companion Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$Companion;
	public fun <init> (Lorg/polyfrost/elementa/markdown/MarkdownComponent;Ljava/lang/String;Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$Style;)V
	public fun beforeDraw (Lorg/polyfrost/elementa/markdown/DrawState;)V
	public fun cursorAt (FFZI)Ljava/lang/Void;
	public synthetic fun cursorAt (FFZI)Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public synthetic fun cursorAtEnd ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtEnd ()Lorg/polyfrost/elementa/markdown/selection/TextCursor;
	public synthetic fun cursorAtStart ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public fun cursorAtStart ()Lorg/polyfrost/elementa/markdown/selection/TextCursor;
	public fun draw (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/DrawState;)V
	public final fun ensureTrimmed ()V
	public final fun getFormattedText ()Ljava/lang/String;
	public final fun getLinkedTexts ()Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$LinkedTexts;
	public final fun getScaleModifier ()F
	public final fun getSelectionEnd ()I
	public final fun getSelectionStart ()I
	public final fun getStyle ()Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$Style;
	public final fun plainText ()Ljava/lang/String;
	public fun selectedText (Z)Ljava/lang/String;
	public final fun setLinkedTexts (Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$LinkedTexts;)V
	public final fun setScaleModifier (F)V
	public final fun setSelectionEnd (I)V
	public final fun setSelectionStart (I)V
	public final fun split (FZ)Lkotlin/Pair;
	public static synthetic fun split$default (Lorg/polyfrost/elementa/markdown/drawables/TextDrawable;FZILjava/lang/Object;)Lkotlin/Pair;
	public fun toString ()Ljava/lang/String;
	public final fun width ()F
}

public final class org/polyfrost/elementa/markdown/drawables/TextDrawable$Companion {
	public final fun drawString (Lorg/polyfrost/elementa/markdown/MarkdownConfig;Lorg/polyfrost/elementa/font/FontProvider;Ljava/lang/String;FFZZZ)V
	public final fun drawString (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/MarkdownConfig;Lorg/polyfrost/elementa/font/FontProvider;Ljava/lang/String;FFZZZLorg/polyfrost/elementa/markdown/HeaderLevelConfig;)V
	public static synthetic fun drawString$default (Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$Companion;Lorg/polyfrost/elementa/markdown/MarkdownConfig;Lorg/polyfrost/elementa/font/FontProvider;Ljava/lang/String;FFZZZILjava/lang/Object;)V
	public static synthetic fun drawString$default (Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$Companion;Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/MarkdownConfig;Lorg/polyfrost/elementa/font/FontProvider;Ljava/lang/String;FFZZZLorg/polyfrost/elementa/markdown/HeaderLevelConfig;ILjava/lang/Object;)V
}

public final class org/polyfrost/elementa/markdown/drawables/TextDrawable$LinkedTexts {
	public static final field Companion Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$LinkedTexts$Companion;
	public fun <init> ()V
	public final fun isHovered ()Z
	public final fun linkText (Lorg/polyfrost/elementa/markdown/drawables/TextDrawable;)V
	public final fun unlinkText (Lorg/polyfrost/elementa/markdown/drawables/TextDrawable;)V
}

public final class org/polyfrost/elementa/markdown/drawables/TextDrawable$LinkedTexts$Companion {
	public final fun merge (Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$LinkedTexts;Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$LinkedTexts;)Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$LinkedTexts;
}

public final class org/polyfrost/elementa/markdown/drawables/TextDrawable$Style {
	public static final field Companion Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$Style$Companion;
	public fun <init> (ZZZZZLjava/lang/String;)V
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun component6 ()Ljava/lang/String;
	public final fun copy (ZZZZZLjava/lang/String;)Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$Style;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$Style;ZZZZZLjava/lang/String;ILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$Style;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFormattingSymbols ()Ljava/lang/String;
	public final fun getLinkLocation ()Ljava/lang/String;
	public final fun getMarkdownSymbols ()Ljava/lang/String;
	public final fun getNumFormattingChars ()I
	public fun hashCode ()I
	public final fun isBold ()Z
	public final fun isCode ()Z
	public final fun isItalic ()Z
	public final fun isStrikethrough ()Z
	public final fun isUnderline ()Z
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/markdown/drawables/TextDrawable$Style$Companion {
	public final fun getEMPTY ()Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$Style;
}

public final class org/polyfrost/elementa/markdown/drawables/TextDrawable$Text {
	public fun <init> (Ljava/lang/String;FFZ)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()Z
	public final fun copy (Ljava/lang/String;FFZ)Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$Text;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$Text;Ljava/lang/String;FFZILjava/lang/Object;)Lorg/polyfrost/elementa/markdown/drawables/TextDrawable$Text;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getSelected ()Z
	public final fun getString ()Ljava/lang/String;
	public final fun getX ()F
	public final fun getY ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class org/polyfrost/elementa/markdown/selection/Cursor {
	public fun <init> (Lorg/polyfrost/elementa/markdown/drawables/Drawable;)V
	public abstract fun compareTo (Lorg/polyfrost/elementa/markdown/selection/Cursor;)I
	public final fun draw (Lorg/polyfrost/elementa/markdown/DrawState;)V
	public final fun draw (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/DrawState;)V
	protected final fun getHeight ()D
	public final fun getTarget ()Lorg/polyfrost/elementa/markdown/drawables/Drawable;
	protected final fun getWidth ()D
	protected fun getXBase ()F
	protected fun getYBase ()F
}

public final class org/polyfrost/elementa/markdown/selection/ImageCursor : org/polyfrost/elementa/markdown/selection/Cursor {
	public fun <init> (Lorg/polyfrost/elementa/markdown/drawables/ImageDrawable;)V
	public fun compareTo (Lorg/polyfrost/elementa/markdown/selection/Cursor;)I
}

public final class org/polyfrost/elementa/markdown/selection/Selection {
	public static final field Companion Lorg/polyfrost/elementa/markdown/selection/Selection$Companion;
	public synthetic fun <init> (Lorg/polyfrost/elementa/markdown/selection/Cursor;Lorg/polyfrost/elementa/markdown/selection/Cursor;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun draw (Lorg/polyfrost/elementa/markdown/DrawState;)V
	public final fun draw (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/markdown/DrawState;)V
	public final fun getDrawables ()Ljava/util/List;
	public final fun getEnd ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public final fun getStart ()Lorg/polyfrost/elementa/markdown/selection/Cursor;
	public final fun remove ()V
}

public final class org/polyfrost/elementa/markdown/selection/Selection$Companion {
	public final fun fromCursors (Lorg/polyfrost/elementa/markdown/selection/Cursor;Lorg/polyfrost/elementa/markdown/selection/Cursor;)Lorg/polyfrost/elementa/markdown/selection/Selection;
}

public final class org/polyfrost/elementa/markdown/selection/TextCursor : org/polyfrost/elementa/markdown/selection/Cursor {
	public fun <init> (Lorg/polyfrost/elementa/markdown/drawables/TextDrawable;I)V
	public fun compareTo (Lorg/polyfrost/elementa/markdown/selection/Cursor;)I
	public final fun getOffset ()I
}

public final class org/polyfrost/elementa/shaders/FloatUniform : org/polyfrost/elementa/shaders/ShaderUniform {
	public fun <init> (I)V
	public fun setValue (F)V
	public synthetic fun setValue (Ljava/lang/Object;)V
}

public final class org/polyfrost/elementa/shaders/IntUniform : org/polyfrost/elementa/shaders/ShaderUniform {
	public fun <init> (I)V
	public fun setValue (I)V
	public synthetic fun setValue (Ljava/lang/Object;)V
}

public class org/polyfrost/elementa/shaders/Shader {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun bindIfUsable ()V
	protected final fun getFragShader ()I
	protected final fun getProgram ()I
	public final fun getUniformLocation (Ljava/lang/String;)I
	public final fun getUsable ()Z
	protected final fun getVertShader ()I
	protected final fun setFragShader (I)V
	protected final fun setProgram (I)V
	public final fun setUsable (Z)V
	protected final fun setVertShader (I)V
	public final fun unbindIfUsable ()V
}

public abstract class org/polyfrost/elementa/shaders/ShaderUniform {
	public fun <init> (I)V
	public final fun getLocation ()I
	public abstract fun setValue (Ljava/lang/Object;)V
}

public final class org/polyfrost/elementa/shaders/Shaders {
	public static final field INSTANCE Lorg/polyfrost/elementa/shaders/Shaders;
	public final fun getNewShaders ()Z
}

public final class org/polyfrost/elementa/shaders/Vec2Uniform : org/polyfrost/elementa/shaders/ShaderUniform {
	public fun <init> (I)V
	public synthetic fun setValue (Ljava/lang/Object;)V
	public fun setValue (Lorg/polyfrost/elementa/utils/Vector2f;)V
}

public final class org/polyfrost/elementa/shaders/Vec4Uniform : org/polyfrost/elementa/shaders/ShaderUniform {
	public fun <init> (I)V
	public synthetic fun setValue (Ljava/lang/Object;)V
	public fun setValue (Lorg/polyfrost/elementa/utils/Vector4f;)V
}

public class org/polyfrost/elementa/state/BasicState : org/polyfrost/elementa/state/State {
	public fun <init> (Ljava/lang/Object;)V
	public fun get ()Ljava/lang/Object;
	protected final fun getValueBacker ()Ljava/lang/Object;
	public fun set (Ljava/lang/Object;)V
	protected final fun setValueBacker (Ljava/lang/Object;)V
}

public final class org/polyfrost/elementa/state/DelegationKt {
	public static final fun map (Lkotlin/reflect/KProperty0;Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/state/MappedStateDelegator;
	public static final fun state (Ljava/lang/Object;)Lorg/polyfrost/elementa/state/StateDelegator;
	public static final fun zip (Lkotlin/reflect/KProperty0;Lkotlin/reflect/KProperty0;)Lorg/polyfrost/elementa/state/ZippedStateDelegator;
}

public final class org/polyfrost/elementa/state/ExtensionsKt {
	public static final fun getConstraint (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/ConstantColorConstraint;
	public static final fun getPercent (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/RelativeConstraint;
	public static final fun getPixels (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public static final fun percent (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/RelativeConstraint;
	public static final fun percentNumber (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/RelativeConstraint;
	public static final fun pixels (Lorg/polyfrost/elementa/state/State;ZZ)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public static synthetic fun pixels$default (Lorg/polyfrost/elementa/state/State;ZZILjava/lang/Object;)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public static final fun pixelsNumber (Lorg/polyfrost/elementa/state/State;ZZ)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public static synthetic fun pixelsNumber$default (Lorg/polyfrost/elementa/state/State;ZZILjava/lang/Object;)Lorg/polyfrost/elementa/constraints/PixelConstraint;
	public static final fun toConstraint (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/constraints/ConstantColorConstraint;
}

public class org/polyfrost/elementa/state/MappedState : org/polyfrost/elementa/state/BasicState {
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lkotlin/jvm/functions/Function1;)V
	public final fun rebind (Lorg/polyfrost/elementa/state/State;)V
}

public final class org/polyfrost/elementa/state/MappedStateDelegator : org/polyfrost/elementa/state/StateDelegator {
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lkotlin/jvm/functions/Function1;)V
}

public abstract class org/polyfrost/elementa/state/State {
	public fun <init> ()V
	public abstract fun get ()Ljava/lang/Object;
	protected final fun getListeners ()Ljava/util/List;
	public final fun getOrDefault (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getOrElse (Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public final fun map (Ljava/util/function/Function;)Lorg/polyfrost/elementa/state/State;
	public final fun map (Lkotlin/jvm/functions/Function1;)Lorg/polyfrost/elementa/state/MappedState;
	public final fun onSetValue (Ljava/util/function/Consumer;)Lkotlin/jvm/functions/Function0;
	public final fun onSetValue (Lkotlin/jvm/functions/Function1;)Lkotlin/jvm/functions/Function0;
	public fun set (Ljava/lang/Object;)V
	public final fun set (Lkotlin/jvm/functions/Function1;)V
	public final fun zip (Lorg/polyfrost/elementa/state/State;)Lorg/polyfrost/elementa/state/State;
}

public class org/polyfrost/elementa/state/StateDelegator : kotlin/properties/ReadWriteProperty {
	public fun <init> (Lorg/polyfrost/elementa/state/State;)V
	public final fun getState ()Lorg/polyfrost/elementa/state/State;
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun setValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class org/polyfrost/elementa/state/ZippedState : org/polyfrost/elementa/state/BasicState {
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;)V
	public final fun rebindFirst (Lorg/polyfrost/elementa/state/State;)V
	public final fun rebindSecond (Lorg/polyfrost/elementa/state/State;)V
}

public final class org/polyfrost/elementa/state/ZippedStateDelegator : org/polyfrost/elementa/state/StateDelegator {
	public fun <init> (Lorg/polyfrost/elementa/state/State;Lorg/polyfrost/elementa/state/State;)V
}

public abstract interface class org/polyfrost/elementa/state/v2/ReferenceHolder {
	public abstract fun holdOnto (Ljava/lang/Object;)Lkotlin/jvm/functions/Function0;
}

public final class org/polyfrost/elementa/state/v2/ReferenceHolder$Weak : org/polyfrost/elementa/state/v2/ReferenceHolder {
	public static final field INSTANCE Lorg/polyfrost/elementa/state/v2/ReferenceHolder$Weak;
	public fun holdOnto (Ljava/lang/Object;)Lkotlin/jvm/functions/Function0;
}

public final class org/polyfrost/elementa/svg/PathParser {
	public static final field Companion Lorg/polyfrost/elementa/svg/PathParser$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun parse ()Ljava/util/List;
}

public final class org/polyfrost/elementa/svg/PathParser$Companion {
}

public final class org/polyfrost/elementa/svg/PathParser$PathParseException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class org/polyfrost/elementa/svg/SVGParser {
	public static final field INSTANCE Lorg/polyfrost/elementa/svg/SVGParser;
	public final fun parseFromResource (Ljava/lang/String;)Lorg/polyfrost/elementa/svg/data/SVG;
}

public final class org/polyfrost/elementa/svg/data/Point {
	public fun <init> (FF)V
	public fun <init> (Ljava/lang/Number;Ljava/lang/Number;)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun copy (FF)Lorg/polyfrost/elementa/svg/data/Point;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/svg/data/Point;FFILjava/lang/Object;)Lorg/polyfrost/elementa/svg/data/Point;
	public final fun div (Ljava/lang/Number;)Lorg/polyfrost/elementa/svg/data/Point;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX ()F
	public final fun getY ()F
	public fun hashCode ()I
	public final fun minus (Ljava/lang/Number;)Lorg/polyfrost/elementa/svg/data/Point;
	public final fun minus (Lorg/polyfrost/elementa/svg/data/Point;)Lorg/polyfrost/elementa/svg/data/Point;
	public final fun plus (Ljava/lang/Number;)Lorg/polyfrost/elementa/svg/data/Point;
	public final fun plus (Lorg/polyfrost/elementa/svg/data/Point;)Lorg/polyfrost/elementa/svg/data/Point;
	public final fun reflectedAround (Lorg/polyfrost/elementa/svg/data/Point;)Lorg/polyfrost/elementa/svg/data/Point;
	public final fun setX (F)V
	public final fun setY (F)V
	public final fun times (Ljava/lang/Number;)Lorg/polyfrost/elementa/svg/data/Point;
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/svg/data/PointKt {
	public static final fun minus (Ljava/lang/Number;Lorg/polyfrost/elementa/svg/data/Point;)Lorg/polyfrost/elementa/svg/data/Point;
	public static final fun plus (Ljava/lang/Number;Lorg/polyfrost/elementa/svg/data/Point;)Lorg/polyfrost/elementa/svg/data/Point;
	public static final fun times (Ljava/lang/Number;Lorg/polyfrost/elementa/svg/data/Point;)Lorg/polyfrost/elementa/svg/data/Point;
}

public final class org/polyfrost/elementa/svg/data/Rotation {
	public fun <init> (ILjava/lang/Float;Ljava/lang/Float;)V
	public final fun component1 ()I
	public final fun component2 ()Ljava/lang/Float;
	public final fun component3 ()Ljava/lang/Float;
	public final fun copy (ILjava/lang/Float;Ljava/lang/Float;)Lorg/polyfrost/elementa/svg/data/Rotation;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/svg/data/Rotation;ILjava/lang/Float;Ljava/lang/Float;ILjava/lang/Object;)Lorg/polyfrost/elementa/svg/data/Rotation;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAngle ()I
	public final fun getOriginX ()Ljava/lang/Float;
	public final fun getOriginY ()Ljava/lang/Float;
	public fun hashCode ()I
	public final fun rotate (Lorg/polyfrost/elementa/svg/data/Point;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/svg/data/SVG {
	public fun <init> (Ljava/util/List;Ljava/lang/Float;Ljava/lang/Float;FZZ)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/lang/Float;
	public final fun component3 ()Ljava/lang/Float;
	public final fun component4 ()F
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun copy (Ljava/util/List;Ljava/lang/Float;Ljava/lang/Float;FZZ)Lorg/polyfrost/elementa/svg/data/SVG;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/svg/data/SVG;Ljava/util/List;Ljava/lang/Float;Ljava/lang/Float;FZZILjava/lang/Object;)Lorg/polyfrost/elementa/svg/data/SVG;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getElements ()Ljava/util/List;
	public final fun getHeight ()Ljava/lang/Float;
	public final fun getRoundLineCaps ()Z
	public final fun getRoundLineJoins ()Z
	public final fun getStrokeWidth ()F
	public final fun getWidth ()Ljava/lang/Float;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/svg/data/SVGArc : org/polyfrost/elementa/svg/data/SVGElement {
	public static final field Companion Lorg/polyfrost/elementa/svg/data/SVGArc$Companion;
	public fun <init> (Lorg/polyfrost/elementa/svg/data/Point;FFIZZLorg/polyfrost/elementa/svg/data/Point;)V
	public final fun component1 ()Lorg/polyfrost/elementa/svg/data/Point;
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()I
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun component7 ()Lorg/polyfrost/elementa/svg/data/Point;
	public final fun copy (Lorg/polyfrost/elementa/svg/data/Point;FFIZZLorg/polyfrost/elementa/svg/data/Point;)Lorg/polyfrost/elementa/svg/data/SVGArc;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/svg/data/SVGArc;Lorg/polyfrost/elementa/svg/data/Point;FFIZZLorg/polyfrost/elementa/svg/data/Point;ILjava/lang/Object;)Lorg/polyfrost/elementa/svg/data/SVGArc;
	public fun createBuffer (Ljava/nio/FloatBuffer;)I
	public fun drawSmoothPoints ()Z
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEndPoint ()Lorg/polyfrost/elementa/svg/data/Point;
	public final fun getLargeArc ()Z
	public final fun getRx ()F
	public final fun getRy ()F
	public final fun getStartPoint ()Lorg/polyfrost/elementa/svg/data/Point;
	public final fun getSweep ()Z
	public fun getVertexCount ()I
	public final fun getXAxisRotation ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/svg/data/SVGArc$Companion {
}

public final class org/polyfrost/elementa/svg/data/SVGAttributes {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Float;Lorg/polyfrost/elementa/svg/data/Transform;)V
	public synthetic fun <init> (Ljava/lang/Float;Lorg/polyfrost/elementa/svg/data/Transform;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/Float;
	public final fun component2 ()Lorg/polyfrost/elementa/svg/data/Transform;
	public final fun copy (Ljava/lang/Float;Lorg/polyfrost/elementa/svg/data/Transform;)Lorg/polyfrost/elementa/svg/data/SVGAttributes;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/svg/data/SVGAttributes;Ljava/lang/Float;Lorg/polyfrost/elementa/svg/data/Transform;ILjava/lang/Object;)Lorg/polyfrost/elementa/svg/data/SVGAttributes;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getStrokeWidth ()Ljava/lang/Float;
	public final fun getTransform ()Lorg/polyfrost/elementa/svg/data/Transform;
	public fun hashCode ()I
	public final fun modify (Lorg/polyfrost/elementa/svg/data/Point;)V
	public final fun setStrokeWidth (Ljava/lang/Float;)V
	public final fun setTransform (Lorg/polyfrost/elementa/svg/data/Transform;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/svg/data/SVGCircle : org/polyfrost/elementa/svg/data/SVGElement {
	public static final field Companion Lorg/polyfrost/elementa/svg/data/SVGCircle$Companion;
	public static final field VERTEX_COUNT I
	public fun <init> (FFF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun copy (FFF)Lorg/polyfrost/elementa/svg/data/SVGCircle;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/svg/data/SVGCircle;FFFILjava/lang/Object;)Lorg/polyfrost/elementa/svg/data/SVGCircle;
	public fun createBuffer (Ljava/nio/FloatBuffer;)I
	public fun drawSmoothPoints ()Z
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCx ()F
	public final fun getCy ()F
	public final fun getR ()F
	public fun getVertexCount ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/svg/data/SVGCircle$Companion {
}

public final class org/polyfrost/elementa/svg/data/SVGCubicCurve : org/polyfrost/elementa/svg/data/SVGCurve {
	public fun <init> (Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;I)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getLastControlPoint ()Lorg/polyfrost/elementa/svg/data/Point;
	public fun getPoint (F)Lorg/polyfrost/elementa/svg/data/Point;
}

public abstract class org/polyfrost/elementa/svg/data/SVGCurve : org/polyfrost/elementa/svg/data/SVGElement {
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun createBuffer (Ljava/nio/FloatBuffer;)I
	public abstract fun getLastControlPoint ()Lorg/polyfrost/elementa/svg/data/Point;
	public abstract fun getPoint (F)Lorg/polyfrost/elementa/svg/data/Point;
	public fun getVertexCount ()I
}

public abstract class org/polyfrost/elementa/svg/data/SVGElement {
	public fun <init> ()V
	public fun applyAttributes ()V
	public abstract fun createBuffer (Ljava/nio/FloatBuffer;)I
	public fun drawSmoothPoints ()Z
	public final fun getAttributes ()Lorg/polyfrost/elementa/svg/data/SVGAttributes;
	public abstract fun getVertexCount ()I
}

public final class org/polyfrost/elementa/svg/data/SVGLine : org/polyfrost/elementa/svg/data/SVGElement {
	public static final field Companion Lorg/polyfrost/elementa/svg/data/SVGLine$Companion;
	public fun <init> (Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;)V
	public fun applyAttributes ()V
	public final fun component1 ()Lorg/polyfrost/elementa/svg/data/Point;
	public final fun component2 ()Lorg/polyfrost/elementa/svg/data/Point;
	public final fun copy (Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;)Lorg/polyfrost/elementa/svg/data/SVGLine;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/svg/data/SVGLine;Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;ILjava/lang/Object;)Lorg/polyfrost/elementa/svg/data/SVGLine;
	public fun createBuffer (Ljava/nio/FloatBuffer;)I
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPoint1 ()Lorg/polyfrost/elementa/svg/data/Point;
	public final fun getPoint2 ()Lorg/polyfrost/elementa/svg/data/Point;
	public fun getVertexCount ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/svg/data/SVGLine$Companion {
}

public final class org/polyfrost/elementa/svg/data/SVGPolyline : org/polyfrost/elementa/svg/data/SVGElement {
	public static final field Companion Lorg/polyfrost/elementa/svg/data/SVGPolyline$Companion;
	public fun <init> (Ljava/util/List;)V
	public fun applyAttributes ()V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lorg/polyfrost/elementa/svg/data/SVGPolyline;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/svg/data/SVGPolyline;Ljava/util/List;ILjava/lang/Object;)Lorg/polyfrost/elementa/svg/data/SVGPolyline;
	public fun createBuffer (Ljava/nio/FloatBuffer;)I
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPoints ()Ljava/util/List;
	public fun getVertexCount ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/svg/data/SVGPolyline$Companion {
}

public final class org/polyfrost/elementa/svg/data/SVGQuadraticCurve : org/polyfrost/elementa/svg/data/SVGCurve {
	public fun <init> (Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;I)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getLastControlPoint ()Lorg/polyfrost/elementa/svg/data/Point;
	public fun getPoint (F)Lorg/polyfrost/elementa/svg/data/Point;
}

public final class org/polyfrost/elementa/svg/data/SVGRect : org/polyfrost/elementa/svg/data/SVGElement {
	public static final field Companion Lorg/polyfrost/elementa/svg/data/SVGRect$Companion;
	public fun <init> (Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;Lorg/polyfrost/elementa/svg/data/Point;)V
	public fun createBuffer (Ljava/nio/FloatBuffer;)I
	public fun getVertexCount ()I
}

public final class org/polyfrost/elementa/svg/data/SVGRect$Companion {
}

public final class org/polyfrost/elementa/svg/data/Transform {
	public fun <init> ()V
	public fun <init> (Lorg/polyfrost/elementa/svg/data/Rotation;)V
	public synthetic fun <init> (Lorg/polyfrost/elementa/svg/data/Rotation;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/polyfrost/elementa/svg/data/Rotation;
	public final fun copy (Lorg/polyfrost/elementa/svg/data/Rotation;)Lorg/polyfrost/elementa/svg/data/Transform;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/svg/data/Transform;Lorg/polyfrost/elementa/svg/data/Rotation;ILjava/lang/Object;)Lorg/polyfrost/elementa/svg/data/Transform;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getRotation ()Lorg/polyfrost/elementa/svg/data/Rotation;
	public fun hashCode ()I
	public final fun modify (Lorg/polyfrost/elementa/svg/data/Point;)V
	public final fun setRotation (Lorg/polyfrost/elementa/svg/data/Rotation;)V
	public fun toString ()Ljava/lang/String;
}

public abstract class org/polyfrost/elementa/transitions/BoundTransition : org/polyfrost/elementa/transitions/Transition {
	protected field boundComponent Lorg/polyfrost/elementa/UIComponent;
	public fun <init> ()V
	public fun afterTransition ()V
	protected final fun afterTransition (Lorg/polyfrost/elementa/UIComponent;)V
	public fun beforeTransition ()V
	protected final fun beforeTransition (Lorg/polyfrost/elementa/UIComponent;)V
	protected final fun doTransition (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;)V
	public abstract fun doTransition (Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;)V
	protected final fun getBoundComponent ()Lorg/polyfrost/elementa/UIComponent;
	protected final fun setBoundComponent (Lorg/polyfrost/elementa/UIComponent;)V
}

public final class org/polyfrost/elementa/transitions/ExpandFromTransition {
	public static final field INSTANCE Lorg/polyfrost/elementa/transitions/ExpandFromTransition;
}

public final class org/polyfrost/elementa/transitions/ExpandFromTransition$Bottom : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/ExpandFromTransition$Left : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/ExpandFromTransition$Right : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/ExpandFromTransition$Top : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/RecursiveFadeInTransition : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/RecursiveFadeOutTransition : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/ShrinkToTransition {
	public static final field INSTANCE Lorg/polyfrost/elementa/transitions/ShrinkToTransition;
}

public final class org/polyfrost/elementa/transitions/ShrinkToTransition$Bottom : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;Z)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/ShrinkToTransition$Left : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;Z)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/ShrinkToTransition$Right : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;Z)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/ShrinkToTransition$Top : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;Z)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/ShrinkTransition : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;Z)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/SlideFromTransition {
	public static final field INSTANCE Lorg/polyfrost/elementa/transitions/SlideFromTransition;
}

public final class org/polyfrost/elementa/transitions/SlideFromTransition$Bottom : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/SlideFromTransition$Left : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/SlideFromTransition$Right : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/SlideFromTransition$Top : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/SlideToTransition {
	public static final field INSTANCE Lorg/polyfrost/elementa/transitions/SlideToTransition;
}

public final class org/polyfrost/elementa/transitions/SlideToTransition$Bottom : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;Z)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/SlideToTransition$Left : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;Z)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/SlideToTransition$Right : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;Z)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/polyfrost/elementa/transitions/SlideToTransition$Top : org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	public fun <init> (F)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;)V
	public fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;Z)V
	public synthetic fun <init> (FLorg/polyfrost/elementa/constraints/animation/Animations;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public abstract class org/polyfrost/elementa/transitions/Transition {
	public fun <init> ()V
	protected fun afterTransition (Lorg/polyfrost/elementa/UIComponent;)V
	protected fun beforeTransition (Lorg/polyfrost/elementa/UIComponent;)V
	public final fun chain (Lorg/polyfrost/elementa/transitions/Transition;)Lorg/polyfrost/elementa/transitions/Transition;
	protected abstract fun doTransition (Lorg/polyfrost/elementa/UIComponent;Lorg/polyfrost/elementa/constraints/animation/AnimatingConstraints;)V
	public final fun transition (Lorg/polyfrost/elementa/UIComponent;)V
	public final fun transition (Lorg/polyfrost/elementa/UIComponent;Ljava/lang/Runnable;)V
	public final fun transition (Lorg/polyfrost/elementa/UIComponent;Lkotlin/jvm/functions/Function0;)V
	public static synthetic fun transition$default (Lorg/polyfrost/elementa/transitions/Transition;Lorg/polyfrost/elementa/UIComponent;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
	public final fun with (Lorg/polyfrost/elementa/transitions/Transition;)Lorg/polyfrost/elementa/transitions/Transition;
}

public final class org/polyfrost/elementa/utils/BindingKt {
	public static final fun bind (Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)Lkotlin/jvm/functions/Function0;
	public static final fun bind (Lkotlin/jvm/functions/Function2;Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;
	public static final fun bind (Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function0;
	public static final fun bind (Lkotlin/jvm/functions/Function3;Ljava/lang/Object;)Lkotlin/jvm/functions/Function2;
	public static final fun bind (Lkotlin/jvm/functions/Function3;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;
	public static final fun bind (Lkotlin/jvm/functions/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function0;
	public static final fun bind (Lkotlin/jvm/functions/Function4;Ljava/lang/Object;)Lkotlin/jvm/functions/Function3;
	public static final fun bind (Lkotlin/jvm/functions/Function4;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function2;
	public static final fun bind (Lkotlin/jvm/functions/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;
	public static final fun bind (Lkotlin/jvm/functions/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function0;
	public static final fun bind (Lkotlin/jvm/functions/Function5;Ljava/lang/Object;)Lkotlin/jvm/functions/Function4;
	public static final fun bind (Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function3;
	public static final fun bind (Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function2;
	public static final fun bind (Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;
	public static final fun bind (Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function0;
	public static final fun bindLast (Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)Lkotlin/jvm/functions/Function0;
	public static final fun bindLast (Lkotlin/jvm/functions/Function2;Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;
	public static final fun bindLast (Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function0;
	public static final fun bindLast (Lkotlin/jvm/functions/Function3;Ljava/lang/Object;)Lkotlin/jvm/functions/Function2;
	public static final fun bindLast (Lkotlin/jvm/functions/Function3;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;
	public static final fun bindLast (Lkotlin/jvm/functions/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function0;
	public static final fun bindLast (Lkotlin/jvm/functions/Function4;Ljava/lang/Object;)Lkotlin/jvm/functions/Function3;
	public static final fun bindLast (Lkotlin/jvm/functions/Function4;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function2;
	public static final fun bindLast (Lkotlin/jvm/functions/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;
	public static final fun bindLast (Lkotlin/jvm/functions/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function0;
	public static final fun bindLast (Lkotlin/jvm/functions/Function5;Ljava/lang/Object;)Lkotlin/jvm/functions/Function4;
	public static final fun bindLast (Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function3;
	public static final fun bindLast (Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function2;
	public static final fun bindLast (Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;
	public static final fun bindLast (Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/jvm/functions/Function0;
}

public final class org/polyfrost/elementa/utils/ExtensionsKt {
	public static final fun component1 (Ljava/awt/Color;)I
	public static final fun component2 (Ljava/awt/Color;)I
	public static final fun component3 (Ljava/awt/Color;)I
	public static final fun component4 (Ljava/awt/Color;)I
	public static final fun guiHint (DZ)D
	public static final fun guiHint (FZ)F
	public static final fun invisible (Ljava/awt/Color;)Ljava/awt/Color;
	public static final fun roundToRealPixels (D)D
	public static final fun roundToRealPixels (F)F
	public static final fun withAlpha (Ljava/awt/Color;F)Ljava/awt/Color;
	public static final fun withAlpha (Ljava/awt/Color;I)Ljava/awt/Color;
}

public final class org/polyfrost/elementa/utils/ImageKt {
	public static final fun decodeBlurHash (Ljava/lang/String;IIF)Ljava/awt/image/BufferedImage;
	public static synthetic fun decodeBlurHash$default (Ljava/lang/String;IIFILjava/lang/Object;)Ljava/awt/image/BufferedImage;
}

public final class org/polyfrost/elementa/utils/LineUtils {
	public static final field INSTANCE Lorg/polyfrost/elementa/utils/LineUtils;
	public static final fun drawLine (Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Ljava/awt/Color;F)V
	public static final fun drawLine (Lorg/polyfrost/elementa/components/UIPoint;Lorg/polyfrost/elementa/components/UIPoint;Ljava/awt/Color;F)V
	public static final fun drawLine (Lorg/polyfrost/universal/UMatrixStack;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Ljava/awt/Color;F)V
	public static final fun drawLine (Lorg/polyfrost/universal/UMatrixStack;Lorg/polyfrost/elementa/components/UIPoint;Lorg/polyfrost/elementa/components/UIPoint;Ljava/awt/Color;F)V
	public static final fun drawLineStrip (Lorg/polyfrost/universal/UMatrixStack;Ljava/util/List;Ljava/awt/Color;F)V
}

public class org/polyfrost/elementa/utils/Matrix2 {
	public fun <init> (IILjava/lang/Object;)V
	public fun <init> (IILkotlin/jvm/functions/Function0;)V
	public final fun column (I)Ljava/util/List;
	public final fun get (II)Ljava/lang/Object;
	public final fun getColumns ()Ljava/util/List;
	public final fun getItems ()Ljava/util/List;
	public final fun getNumColumns ()I
	public final fun getNumRows ()I
	public final fun getRows ()Ljava/util/List;
	public final fun row (I)Ljava/util/List;
	public final fun set (IILjava/lang/Object;)Lorg/polyfrost/elementa/utils/Matrix2;
}

public final class org/polyfrost/elementa/utils/Matrix2b : org/polyfrost/elementa/utils/Matrix2 {
	public fun <init> (II)V
}

public final class org/polyfrost/elementa/utils/Matrix2d : org/polyfrost/elementa/utils/Matrix2 {
	public fun <init> (II)V
}

public final class org/polyfrost/elementa/utils/Matrix2f : org/polyfrost/elementa/utils/Matrix2 {
	public fun <init> (II)V
}

public final class org/polyfrost/elementa/utils/Matrix2i : org/polyfrost/elementa/utils/Matrix2 {
	public fun <init> (II)V
}

public final class org/polyfrost/elementa/utils/ObservableAddEvent : org/polyfrost/elementa/utils/ObservableListEvent {
	public fun <init> (Lkotlin/collections/IndexedValue;)V
	public final fun getElement ()Lkotlin/collections/IndexedValue;
}

public final class org/polyfrost/elementa/utils/ObservableClearEvent : org/polyfrost/elementa/utils/ObservableListEvent {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public final fun getOldChildren ()Ljava/util/List;
}

public final class org/polyfrost/elementa/utils/ObservableList : java/util/Observable, java/util/List, kotlin/jvm/internal/markers/KMutableList {
	public fun <init> (Ljava/util/List;)V
	public fun add (ILjava/lang/Object;)V
	public fun add (Ljava/lang/Object;)Z
	public fun addAll (ILjava/util/Collection;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun clear ()V
	public fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun get (I)Ljava/lang/Object;
	public fun getSize ()I
	public fun indexOf (Ljava/lang/Object;)I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun lastIndexOf (Ljava/lang/Object;)I
	public fun listIterator ()Ljava/util/ListIterator;
	public fun listIterator (I)Ljava/util/ListIterator;
	public final fun remove (I)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeAt (I)Ljava/lang/Object;
	public fun retainAll (Ljava/util/Collection;)Z
	public fun set (ILjava/lang/Object;)Ljava/lang/Object;
	public final fun size ()I
	public fun sort (Ljava/util/Comparator;)V
	public fun subList (II)Ljava/util/List;
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

public abstract class org/polyfrost/elementa/utils/ObservableListEvent {
}

public final class org/polyfrost/elementa/utils/ObservableListKt {
	public static final fun observable (Ljava/util/List;)Lorg/polyfrost/elementa/utils/ObservableList;
	public static final fun withIndex (Ljava/lang/Object;I)Lkotlin/collections/IndexedValue;
}

public final class org/polyfrost/elementa/utils/ObservableRemoveEvent : org/polyfrost/elementa/utils/ObservableListEvent {
	public fun <init> (Lkotlin/collections/IndexedValue;)V
	public final fun getElement ()Lkotlin/collections/IndexedValue;
}

public final class org/polyfrost/elementa/utils/OptionsKt {
	public static final fun getElementaDebug ()Z
	public static final fun getElementaDev ()Z
	public static final fun setElementaDebug (Z)V
	public static final fun setElementaDev (Z)V
}

public final class org/polyfrost/elementa/utils/ResourceCache {
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getMSDFComponent (Ljava/lang/String;)Lorg/polyfrost/elementa/components/image/MSDFComponent;
	public final fun getSize ()I
	public final fun getUIImage (Ljava/lang/String;)Lorg/polyfrost/elementa/components/image/CacheableImage;
	public final fun invalidate (Ljava/lang/String;)Z
	public final fun invalidateAll ()V
}

public final class org/polyfrost/elementa/utils/TextKt {
	public static final fun getStringSplitToWidth (Ljava/lang/String;FFZZLorg/polyfrost/elementa/font/FontProvider;)Ljava/util/List;
	public static synthetic fun getStringSplitToWidth$default (Ljava/lang/String;FFZZLorg/polyfrost/elementa/font/FontProvider;ILjava/lang/Object;)Ljava/util/List;
	public static final fun getStringSplitToWidthTruncated (Ljava/lang/String;FFIZZLorg/polyfrost/elementa/font/FontProvider;Ljava/lang/String;)Ljava/util/List;
	public static synthetic fun getStringSplitToWidthTruncated$default (Ljava/lang/String;FFIZZLorg/polyfrost/elementa/font/FontProvider;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/List;
	public static final fun isFormatColor (I)Z
	public static final fun sizeStringToWidth (Ljava/lang/String;F)I
	public static final fun splitStringToWidthTruncated (Ljava/lang/String;FFIZZLorg/polyfrost/elementa/font/FontProvider;Ljava/lang/String;)Ljava/util/List;
	public static synthetic fun splitStringToWidthTruncated$default (Ljava/lang/String;FFIZZLorg/polyfrost/elementa/font/FontProvider;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/List;
}

public abstract interface class org/polyfrost/elementa/utils/TriConsumer {
	public abstract fun accept (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
}

public final class org/polyfrost/elementa/utils/Vector2f {
	public fun <init> (FF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun copy (FF)Lorg/polyfrost/elementa/utils/Vector2f;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/utils/Vector2f;FFILjava/lang/Object;)Lorg/polyfrost/elementa/utils/Vector2f;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX ()F
	public final fun getY ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/utils/Vector3f {
	public fun <init> (FFF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun copy (FFF)Lorg/polyfrost/elementa/utils/Vector3f;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/utils/Vector3f;FFFILjava/lang/Object;)Lorg/polyfrost/elementa/utils/Vector3f;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX ()F
	public final fun getY ()F
	public final fun getZ ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/polyfrost/elementa/utils/Vector4f {
	public fun <init> (FFFF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun copy (FFFF)Lorg/polyfrost/elementa/utils/Vector4f;
	public static synthetic fun copy$default (Lorg/polyfrost/elementa/utils/Vector4f;FFFFILjava/lang/Object;)Lorg/polyfrost/elementa/utils/Vector4f;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getW ()F
	public final fun getX ()F
	public final fun getY ()F
	public final fun getZ ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

